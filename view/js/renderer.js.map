{
  "version": 3,
  "sources": ["../../node_modules/eventemitter3/index.js", "lib/html.ts", "lib/reconstituteData.ts", "components/Element.ts", "components/Actions/Action.ts", "components/LockedSlider.ts", "components/LockedSliderGroup.ts", "components/TransientElement.ts", "components/Window.ts", "components/Actions/AdjustTradeRates.ts", "components/NotificationWindow.ts", "components/SelectionWindow.ts", "components/Actions/ChooseResearch.ts", "components/Map/lib/getPreloadedImage.ts", "components/Map/lib/replaceColours.ts", "components/Map.ts", "components/Map/Cities.ts", "components/ConfirmationWindow.ts", "lib/DataObserver.ts", "components/Map/TerrainAbstract.ts", "components/Map/Feature.ts", "components/Map/Fog.ts", "components/Map/Improvements.ts", "components/InactiveUnitSelectionWindow.ts", "components/Map/Irrigation.ts", "components/Map/Land.ts", "components/Portal.ts", "components/Map/Terrain.ts", "components/World.ts", "components/Map/Yields.ts", "components/Map/lib/renderUnit.ts", "components/Unit.ts", "components/lib/yieldMap.ts", "components/City.ts", "components/CityBuildSelectionWindow.ts", "components/Actions/CityBuild.ts", "components/Actions/EndTurn.ts", "components/Actions/Revolution.ts", "components/Actions.ts", "components/Map/Units.ts", "components/Map/ActiveUnit.ts", "components/Map/CityNames.ts", "components/GameDetails.ts", "components/GamePortal.ts", "components/Map/GoodyHuts.ts", "lib/IntervalHandler.ts", "components/MandatorySelection.ts", "components/MainMenu.ts", "components/Minimap.ts", "components/Notifications.ts", "components/PlayerDetails.ts", "components/UnitDetails.ts", "renderer.ts"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "export const parseSelector = (\n  selector: string\n): [\n  string,\n  string[],\n  {\n    [key: string]: string;\n  }\n] => {\n  const classes: string[] = [],\n    attributes: {\n      [key: string]: string;\n    } = {},\n    strings: string[] = [];\n\n  let element = 'div';\n\n  const parts = selector\n    .replace(\n      /(?!<\\\\)([\"']).+?(?!<\\\\)(\\1)/g,\n      (string) => 'string$' + (strings.push(string.slice(1, -1)) - 1)\n    )\n    .split(/(?=[.#[])/);\n\n  parts.forEach((part) => {\n    if (!part.match(/^[.#\\[]/)) {\n      element = part;\n\n      return;\n    }\n\n    if (part[0] === '.') {\n      classes.push(part.slice(1));\n\n      return;\n    }\n\n    if (part[0] === '#') {\n      attributes.id = part[0].slice(1);\n\n      return;\n    }\n\n    if (part[0] === '[') {\n      const match = part.match(/\\[([^=]+)(=([\"']?)(.+?)\\3)?]/);\n\n      if (match !== null) {\n        attributes[match[1]] = (match[4] ?? '').replace(\n          /string\\$(\\d+)/,\n          (match, id) => strings[id]\n        );\n      }\n\n      return;\n    }\n  });\n\n  return [element, classes, attributes];\n};\n\nexport const t = (string: string): Text => document.createTextNode(string);\n\nexport const e = (selector: string, ...nodes: Node[]): HTMLElement => {\n  const [element, classes, attributes] = parseSelector(selector),\n    e = document.createElement(element);\n\n  if (classes.length) {\n    e.classList.add(...classes);\n  }\n\n  a(e, attributes);\n\n  if (nodes.length) {\n    e.append(...nodes);\n  }\n\n  return e;\n};\n\nexport const s = (html: string, ...nodes: Node[]): Node => {\n  const temp = document.createElement('div');\n\n  temp.innerHTML = html;\n\n  if (temp.childNodes.length !== 1) {\n    throw new TypeError('Invalid `html` provided.');\n  }\n\n  temp.firstElementChild!.append(...nodes);\n\n  return temp.firstElementChild!;\n};\n\nexport const a = (\n  element: HTMLElement,\n  attributes: { [key: string]: string }\n) => {\n  Object.entries(attributes).forEach(([name, value]) =>\n    element.setAttribute(name, value)\n  );\n\n  return element;\n};\n\nexport const h = <T extends HTMLElement>(\n  element: T,\n  handlers: { [key: string]: (event: any) => void }\n): T => {\n  Object.entries(handlers).forEach(([eventName, handler]): void =>\n    element.addEventListener(eventName, handler)\n  );\n\n  return element;\n};\n", "export type PlainObject = {\n  [key: string]: any;\n};\n\nexport type ObjectStore = {\n  [key: string]: PlainObject;\n};\n\nexport type ObjectMap = {\n  hierarchy: PlainObject;\n  objects: ObjectStore;\n};\n\nexport const reconstituteData = (\n  { hierarchy, objects }: ObjectMap,\n  orphanIds: string[] | null = null\n): PlainObject => {\n  const seenObjects: Map<PlainObject, PlainObject> = new Map();\n\n  if (orphanIds) {\n    Object.keys(objects).forEach((id) => orphanIds.push(id));\n  }\n\n  const getReferences = (value: any): PlainObject => {\n    if (seenObjects.has(value)) {\n      return seenObjects.get(value)!;\n    }\n\n    if (Array.isArray(value)) {\n      const updated: any[] = [];\n\n      seenObjects.set(value, updated);\n\n      value.forEach((value) => updated.push(getReferences(value)));\n\n      return updated;\n    }\n\n    if (value && value['#ref']) {\n      if (orphanIds) {\n        orphanIds.splice(orphanIds.indexOf(value['#ref']), 1);\n      }\n\n      if (!(value['#ref'] in objects)) {\n        throw new TypeError(`missing ${value['#ref']}`);\n      }\n\n      const updated = getReferences(objects[value['#ref']]);\n\n      seenObjects.set(value, updated);\n\n      return updated;\n    }\n\n    if (value instanceof Object) {\n      const updated: PlainObject = {};\n\n      seenObjects.set(value, updated);\n\n      Object.entries(value).forEach(([key, childValue]) => {\n        updated[key] = getReferences(childValue);\n      });\n\n      return updated;\n    }\n\n    return value;\n  };\n\n  return getReferences(hierarchy);\n};\n\nexport default reconstituteData;\n", "import { e } from '../lib/html';\n\nexport interface IElement {\n  build(...args: any[]): void;\n  element(): HTMLElement;\n}\n\nexport class Element implements IElement {\n  #element: HTMLElement;\n\n  constructor(element: HTMLElement = e('div')) {\n    this.#element = element;\n  }\n\n  build(...args: any[]): void {}\n\n  element(): HTMLElement {\n    return this.#element;\n  }\n\n  protected empty(): void {\n    while (this.#element.firstChild !== null) {\n      this.#element.firstChild.remove();\n    }\n  }\n}\n\nexport default Element;\n", "import {\n  CityBuild,\n  PlayerAction,\n  PlayerGovernment,\n  PlayerResearch,\n  PlayerTradeRates,\n  Unit,\n} from '../../types';\nimport { e } from '../../lib/html';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    actioned: CustomEvent<Action>;\n  }\n}\n\nexport interface IAction {\n  activate(): void;\n  build(): void;\n  complete(): void;\n  element(): HTMLElement;\n  value():\n    | CityBuild\n    | PlayerResearch\n    | Unit\n    | PlayerGovernment\n    | PlayerTradeRates;\n}\n\nexport class Action implements IAction {\n  #action: PlayerAction;\n  #element: HTMLElement;\n\n  constructor(action: PlayerAction) {\n    this.#action = action;\n    this.#element = e('div.action');\n\n    this.#element.addEventListener('keydown', (event) => {\n      if (event.key === 'Escape') {\n        return;\n      }\n\n      event.stopPropagation();\n    });\n\n    this.build();\n  }\n\n  public activate(): void {}\n\n  build(): void {}\n\n  complete(): void {\n    const event = new CustomEvent('actioned', {\n      bubbles: true,\n      detail: this,\n    });\n\n    this.#element.dispatchEvent(event);\n  }\n\n  element(): HTMLElement {\n    return this.#element;\n  }\n\n  value():\n    | CityBuild\n    | PlayerResearch\n    | Unit\n    | PlayerGovernment\n    | PlayerTradeRates {\n    return this.#action.value;\n  }\n}\n\nexport default Action;\n", "import Element from './Element';\nimport { e, t } from '../lib/html';\n\nconst template: (label: string, value: number) => HTMLFieldSetElement = (\n  label: string,\n  value: number\n) =>\n  e(\n    'fieldset',\n    e('legend', t(label)),\n    e(`input[type=\"range\"][max=\"100\"][min=\"0\"][step=\"1\"][value=\"${value}\"]`),\n    e('input[type=\"number\"]'),\n    e('label', e('input[type=\"checkbox\"]'), t('Lock'))\n  ) as HTMLFieldSetElement;\n\nexport type onInputHandler = () => void;\n\nexport class LockedSlider extends Element {\n  #label: string;\n  #range: HTMLInputElement;\n  #number: HTMLInputElement;\n  #lock: HTMLInputElement;\n  #listeners: onInputHandler[] = [];\n\n  constructor(label: string, currentValue: number) {\n    super(template(label, currentValue));\n\n    this.#label = label;\n    this.#range = this.element().querySelector(\n      'input[type=\"range\"]'\n    ) as HTMLInputElement;\n    this.#number = this.element().querySelector(\n      'input[type=\"number\"]'\n    ) as HTMLInputElement;\n    this.#lock = this.element().querySelector(\n      'input[type=\"checkbox\"]'\n    ) as HTMLInputElement;\n\n    this.build();\n  }\n\n  build(): void {\n    this.set(this.#range.value);\n\n    this.#range.addEventListener('input', () => this.set(this.#range.value));\n\n    this.#number.addEventListener('input', () => this.set(this.#number.value));\n\n    this.#lock.addEventListener('input', () => this.lock());\n\n    this.lock();\n  }\n\n  label(): string {\n    return this.#label;\n  }\n\n  private lock(): void {\n    if (this.isLocked()) {\n      this.#range.setAttribute('disabled', '');\n      this.#number.setAttribute('disabled', '');\n\n      return;\n    }\n\n    this.#range.removeAttribute('disabled');\n    this.#number.removeAttribute('disabled');\n  }\n\n  onInput(handler: onInputHandler): void {\n    this.#listeners.push(handler);\n  }\n\n  isLocked(): boolean {\n    return this.#lock.checked;\n  }\n\n  set(value: string): void {\n    value = Math.max(parseInt(value, 10), 0).toString();\n\n    if (this.#range.value !== value) {\n      this.#range.value = value;\n    }\n\n    if (this.#number.value !== value) {\n      this.#number.value = value;\n    }\n\n    this.#listeners.forEach((listener) => listener());\n  }\n\n  value(): number {\n    return parseInt(this.#range.value, 10);\n  }\n}\n\nexport default LockedSlider;\n", "import LockedSlider from './LockedSlider';\n\nexport class LockedSliderGroup {\n  #sliders;\n\n  constructor(...sliders: LockedSlider[]) {\n    this.#sliders = sliders;\n\n    this.#sliders.forEach((slider) =>\n      slider.onInput(() => {\n        if (this.total() === 100) {\n          return;\n        }\n\n        const otherSliders = this.#sliders.filter(\n            (otherSlider) => otherSlider !== slider\n          ),\n          otherActiveSliders = otherSliders.filter(\n            (slider) => !slider.isLocked()\n          );\n\n        if (this.total() !== 100 && otherActiveSliders.length === 0) {\n          slider.set((100 - this.total(otherSliders)).toString());\n\n          return;\n        }\n\n        if (this.total() > 100) {\n          let overage = this.total() - 100,\n            chunk = Math.ceil(overage / otherActiveSliders.length);\n\n          otherActiveSliders.forEach((otherSlider) => {\n            otherSlider.set(\n              (otherSlider.value() - Math.min(chunk, overage)).toString()\n            );\n\n            overage -= chunk;\n          });\n\n          if (this.total() > 100) {\n            slider.set((100 - this.total(otherSliders)).toString());\n          }\n        }\n\n        if (this.total() < 100) {\n          let remaining = 100 - this.total(),\n            chunk = Math.ceil(remaining / otherActiveSliders.length);\n\n          otherActiveSliders.forEach((otherSlider) => {\n            otherSlider.set(\n              (otherSlider.value() + Math.min(chunk, remaining)).toString()\n            );\n\n            remaining -= chunk;\n          });\n\n          if (this.total() < 100) {\n            slider.set((100 - this.total(otherSliders)).toString());\n          }\n        }\n      })\n    );\n  }\n\n  sliders(): LockedSlider[] {\n    return this.#sliders;\n  }\n\n  private total(sliders = this.#sliders): number {\n    return sliders.reduce((total, slider) => total + slider.value(), 0);\n  }\n}\n\nexport default LockedSliderGroup;\n", "import { e } from '../lib/html';\nimport { Element, IElement } from './Element';\n\nexport interface ITransientElement extends IElement {\n  display(): void;\n  parent(): HTMLElement;\n}\n\nexport class TransientElement extends Element implements ITransientElement {\n  #parent: HTMLElement;\n\n  constructor(parent: HTMLElement, element: HTMLElement = e('div')) {\n    super(element);\n\n    // capture keys in the notification window\n    this.element().addEventListener('keydown', (event: KeyboardEvent) => {\n      event.stopPropagation();\n    });\n\n    this.element().setAttribute('tabindex', '0');\n\n    this.#parent = parent;\n  }\n\n  public display(): void {\n    this.build();\n\n    this.#parent.append(this.element());\n  }\n\n  public parent(): HTMLElement {\n    return this.#parent;\n  }\n}\n\nexport default TransientElement;\n", "import { e, h, t } from '../lib/html';\nimport TransientElement, { ITransientElement } from './TransientElement';\n\nexport interface IWindow extends ITransientElement {\n  close(): void;\n  maximise(): void;\n}\n\ntype WindowSize = {\n  height: number | string;\n  width: number | string;\n};\n\ntype WindowPosition = {\n  x: number;\n  y: number;\n};\n\nexport type WindowSettings = {\n  autoDisplay: boolean;\n  canClose: boolean;\n  canMaximise: boolean;\n  canResize: boolean;\n  parent: HTMLElement;\n  position: WindowPosition | 'auto';\n  size: WindowSize | 'auto' | 'maximised';\n};\n\nexport type WindowOptions = { [K in keyof WindowSettings]?: WindowSettings[K] };\n\nconst defaultOptions: WindowSettings = {\n  autoDisplay: true,\n  canClose: true,\n  canMaximise: false,\n  canResize: false,\n  parent: document.body,\n  position: 'auto',\n  size: 'auto',\n};\n\nexport class Window extends TransientElement implements IWindow {\n  private options: WindowSettings;\n  #body: string | Node;\n  #title: string;\n\n  constructor(title: string, body: string | Node, options: WindowOptions = {}) {\n    super(options.parent ?? defaultOptions.parent, e('div.window'));\n\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.#body = body;\n    this.#title = title;\n\n    if (this.options.size === 'auto') {\n      this.element().classList.add('size-auto');\n    }\n\n    if (this.options.size === 'maximised') {\n      this.element().classList.add('maximised');\n    }\n\n    if (this.options.size !== 'auto') {\n      (['height', 'width'] as ('height' | 'width')[]).forEach((dimension) => {\n        const value = (this.options.size as WindowSize)[dimension];\n\n        if (typeof value === 'number') {\n          this.element().style[dimension] = value + 'px';\n\n          return;\n        }\n\n        this.element().style[dimension] = value;\n      });\n    }\n\n    if (this.options.position === 'auto') {\n      this.element().classList.add('position-auto');\n    }\n\n    if (this.options.position !== 'auto') {\n      (\n        [\n          ['x', 'left'],\n          ['y', 'top'],\n        ] as ['x' | 'y', 'left' | 'top'][]\n      ).forEach(([axis, property]) => {\n        this.element().style[property] =\n          Math.min(\n            0,\n            Math.max(\n              document.body.clientHeight - 20,\n              (this.options.position as WindowPosition)[axis]\n            )\n          ) + 'px';\n      });\n    }\n\n    if (this.options.autoDisplay) {\n      this.display();\n    }\n  }\n\n  public build(): void {\n    this.empty();\n\n    const headerActions: HTMLElement[] = (\n      [\n        [\n          this.options.canMaximise,\n          h(\n            e(\n              'button.maximise[aria-label=\"Maximise\"]',\n              t('Maximise'),\n              e(\n                'img.maximise[src=\"../../node_modules/feather-icons/dist/icons/maximize.svg\"][alt=\"Maximise\"]'\n              ),\n              e(\n                'img.restore[src=\"../../node_modules/feather-icons/dist/icons/minimize.svg\"][alt=\"Restore\"]'\n              )\n            ),\n            {\n              click: () => this.maximise(),\n            }\n          ),\n        ],\n        [\n          this.options.canClose,\n          h(\n            e(\n              'button.close[aria-label=\"Close\"]',\n              t('Close'),\n              e(\n                'img[src=\"../../node_modules/feather-icons/dist/icons/x.svg\"][alt=\"Close\"]'\n              )\n            ),\n            {\n              click: () => this.close(),\n            }\n          ),\n        ],\n      ] as [boolean, HTMLElement][]\n    )\n      .filter(([show]: [boolean, HTMLElement]) => show)\n      .map(([, element]) => element);\n\n    this.element().append(\n      h(e('header', e('h3', t(this.#title)), ...headerActions), {\n        dblclick: () => this.maximise(),\n      }),\n      e(\n        'div.body',\n        this.#body instanceof Node ? this.#body : e('p', t(this.#body))\n      )\n    );\n\n    this.element().addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && this.options.canClose) {\n        this.close();\n      }\n\n      // Capture all keypresses whilst this is focused\n      event.stopPropagation();\n    });\n  }\n\n  public close(): void {\n    this.element().remove();\n\n    this.element().dispatchEvent(new CustomEvent('close'));\n  }\n\n  public display(focus = true): void {\n    super.display();\n\n    if (!focus) {\n      return;\n    }\n\n    this.element().focus();\n  }\n\n  public maximise(): void {\n    if (!this.options.canMaximise) {\n      return;\n    }\n\n    this.element().classList.toggle('maximised');\n  }\n\n  public update(content: string | Node): void {\n    this.element().lastElementChild!.remove();\n\n    this.element().append(\n      content instanceof Node ? content : e('p', t(content))\n    );\n  }\n}\n\nexport default Window;\n", "import { ITransport, PlayerTradeRates } from '../../types';\nimport Action from './Action';\nimport LockedSlider from '../LockedSlider';\nimport LockedSliderGroup from '../LockedSliderGroup';\nimport Window from '../Window';\nimport { e } from '../../lib/html';\n\ndeclare var transport: ITransport;\n\nexport class AdjustTradeRates extends Action {\n  #sliderGroup: LockedSliderGroup | undefined;\n\n  public activate(): void {\n    const sliders: LockedSlider[] = [];\n\n    const window = new Window(\n      'Adjust trade rates',\n      e(\n        'div',\n        ...this.value().all.map((tradeRate) => {\n          const slider = new LockedSlider(tradeRate._, tradeRate.value * 100);\n\n          sliders.push(slider);\n\n          return slider.element();\n        })\n      )\n    );\n\n    window.element().addEventListener('close', () => {\n      transport.send('action', {\n        name: 'AdjustTradeRates',\n        id: this.value().id,\n        value: this.#sliderGroup!.sliders().map((slider) => [\n          slider.label(),\n          parseFloat((slider.value() / 100).toFixed(2)),\n        ]),\n      });\n    });\n\n    this.#sliderGroup = new LockedSliderGroup(...sliders);\n  }\n\n  build(): void {\n    this.element().append(\n      e('button.adjustTradeRates[title=\"Adjust trade rates\"]')\n    );\n  }\n\n  value(): PlayerTradeRates {\n    return super.value() as PlayerTradeRates;\n  }\n}\n\nexport default AdjustTradeRates;\n", "import { Window, IWindow, WindowOptions } from './Window';\n\nexport interface INotificationWindow extends IWindow {}\n\nconst notificationQueue: [\n  NotificationWindow,\n  boolean,\n  (...args: any[]) => void\n][] = [];\n\nexport interface NotificationWindowOptions extends WindowOptions {\n  queue?: boolean;\n}\n\nexport class NotificationWindow extends Window implements INotificationWindow {\n  #options: NotificationWindowOptions = {};\n\n  constructor(\n    title: string,\n    body: string | Node,\n    passedOptions: NotificationWindowOptions = {}\n  ) {\n    const options = {\n      queue: true,\n      ...passedOptions,\n    };\n\n    super(title, body, options);\n\n    this.#options = options;\n\n    this.element().classList.add('notificationWindow');\n\n    this.element().addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.close();\n\n        event.stopPropagation();\n      }\n    });\n  }\n\n  close(): void {\n    super.close();\n\n    if (\n      this.#options.queue &&\n      notificationQueue.length &&\n      NotificationWindow.hasOpenWindow()\n    ) {\n      const [notification, focus, resolve] = notificationQueue.shift()!;\n\n      notification.display(focus);\n\n      resolve();\n    }\n  }\n\n  display(focus = true): Promise<any> {\n    return new Promise((resolve) => {\n      if (NotificationWindow.hasOpenWindow()) {\n        notificationQueue.push([this, focus, resolve]);\n\n        return;\n      }\n\n      super.display();\n\n      if (!focus) {\n        resolve(undefined);\n\n        return;\n      }\n\n      this.element().focus();\n\n      resolve(undefined);\n    });\n  }\n\n  public static hasOpenWindow(): boolean {\n    return !!document.querySelector('div.notificationWindow');\n  }\n}\n\nexport default NotificationWindow;\n", "import { e, h, t } from '../lib/html';\nimport {\n  NotificationWindow,\n  NotificationWindowOptions,\n} from './NotificationWindow';\n\nexport interface SelectionWindowOption {\n  label?: string;\n  value: any;\n}\n\nexport interface SelectionWindowAction {\n  label: string;\n  action: (select: SelectionWindow) => void;\n}\n\nexport interface SelectionWindowActions {\n  [key: string]: SelectionWindowAction;\n}\n\nexport interface SelectionWindowOptions extends NotificationWindowOptions {\n  actions?: SelectionWindowActions;\n  autoFocus?: boolean;\n  displayAll?: boolean;\n}\n\nexport class SelectionWindow extends NotificationWindow {\n  #resizeHandler = () => this.resize();\n  #selectionList: HTMLSelectElement;\n\n  constructor(\n    title: string,\n    optionList: SelectionWindowOption[],\n    onChoose: (selection: string) => void,\n    body: string | Node | null = 'Please choose one of the following:',\n    options: SelectionWindowOptions = {}\n  ) {\n    options = {\n      autoFocus: true,\n      displayAll: false,\n      ...options,\n      actions: {\n        primary: {\n          label: 'OK',\n          action: (selectionWindow) =>\n            chooseHandler(selectionWindow.selectionList().value),\n        },\n        ...options.actions,\n      },\n    };\n\n    const chooseHandler = (selection: string): void => {\n        this.element().dispatchEvent(\n          new CustomEvent<string>('selection', {\n            detail: selection,\n          })\n        );\n\n        this.close();\n\n        onChoose(selection);\n      },\n      selectionList: HTMLSelectElement = h(\n        e(\n          'select',\n          ...optionList.map((option) =>\n            e(\n              `option[value=\"${option.value}\"]`,\n              t(option.label || option.value)\n            )\n          )\n        ) as HTMLSelectElement,\n        {\n          keydown: (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n              chooseHandler(selectionList.value);\n            }\n          },\n          dblclick: () => chooseHandler(selectionList.value),\n        }\n      );\n\n    if (options.displayAll && optionList.length > 1) {\n      selectionList.setAttribute('size', optionList.length.toString());\n    }\n\n    if (options.autoFocus) {\n      selectionList.setAttribute('autofocus', '');\n    }\n\n    super(\n      title,\n      e(\n        'div',\n        ...(body instanceof Node\n          ? [body]\n          : body === null\n          ? []\n          : [e('p', t(body))]),\n        selectionList,\n        e(\n          'footer',\n          ...Object.entries(options.actions!).map(([, { label, action }]) =>\n            h(e('button', t(label)), {\n              click: () => action(this),\n              keydown: (event) => {\n                if (event.key === 'Enter') {\n                  action(this);\n                }\n              },\n            })\n          )\n        )\n      )\n    );\n\n    this.element().classList.add('selectionWindow');\n    this.#selectionList = selectionList;\n\n    this.resize();\n\n    window.addEventListener('resize', this.#resizeHandler);\n  }\n\n  close() {\n    window.removeEventListener('resize', this.#resizeHandler);\n\n    super.close();\n  }\n\n  display(): Promise<any> {\n    return super.display(false).then(() => {\n      const select = this.element().querySelector('select');\n\n      if (select && select.hasAttribute('autofocus')) {\n        select.focus();\n      }\n    });\n  }\n\n  resize(): void {\n    // TODO: I'd like to have this height scaled automatically.\n    //  Feels like it should be possible using CSS flexbox, but can't get it to work...\n    try {\n      this.selectionList().style.maxHeight = 'none';\n      this.selectionList().style.maxHeight = `calc(${\n        this.element().offsetHeight -\n        3 -\n        (this.element().firstElementChild! as HTMLElement).offsetHeight -\n        ((this.selectionList().previousElementSibling as HTMLElement)\n          ?.offsetHeight ?? 0) -\n        (this.selectionList().nextElementSibling as HTMLElement).offsetHeight\n      }px - 2em)`;\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  selectionList(): HTMLSelectElement {\n    return this.#selectionList;\n  }\n}\n\nexport default SelectionWindow;\n", "import Action from './Action';\nimport { e } from '../../lib/html';\nimport SelectionWindow from '../SelectionWindow';\nimport { ITransport, PlayerResearch } from '../../types';\n\ndeclare var transport: ITransport;\n\nexport class ChooseResearch extends Action {\n  public activate(): void {\n    const chooseWindow = new SelectionWindow(\n      'Choose research',\n      this.value().available.map((advance) => ({\n        value: advance._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        transport.send('action', {\n          name: 'ChooseResearch',\n          id: this.value().id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.complete();\n\n        chooseWindow.close();\n      },\n      'Which advance would you like to research next?',\n      {\n        displayAll: true,\n      }\n    );\n  }\n\n  build(): void {\n    this.element().append(e('button.chooseResearch[title=\"Choose research\"]'));\n  }\n\n  value(): PlayerResearch {\n    return super.value() as PlayerResearch;\n  }\n}\n\nexport default ChooseResearch;\n", "import { e } from '../../../lib/html';\n\nexport let preloadContainer: HTMLElement;\n\nexport const setPreloadContainer = (preloadContainerElement: HTMLElement) =>\n  (preloadContainer = preloadContainerElement);\n\nexport const getPreloadedImage = (path: string): CanvasImageSource => {\n  const image = preloadContainer.querySelector(`[src$=\"${path}.png\"]`);\n\n  if (image === null) {\n    console.error(`Missing image: ${path}.`);\n\n    return e('canvas') as HTMLCanvasElement;\n  }\n\n  return image as HTMLImageElement;\n};\n\nexport default getPreloadedImage;\n", "import { e } from '../../../lib/html';\n\nexport const replaceColours = (\n  image: CanvasImageSource,\n  source: string[],\n  replacement: string[]\n) => {\n  const canvas = e('canvas') as HTMLCanvasElement,\n    context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n  canvas.width = image.width as number;\n  canvas.height = image.height as number;\n\n  context.drawImage(image, 0, 0, image.width as number, image.height as number);\n\n  const imageData = context.getImageData(0, 0, canvas.width, canvas.height),\n    getColor = (input: string | number[]) => {\n      let match: RegExpMatchArray | null = null,\n        color: { r: number; g: number; b: number; a: number } = {\n          r: 0,\n          g: 0,\n          b: 0,\n          a: 0,\n        };\n\n      if (typeof input === 'string') {\n        if (\n          (match = input.match(\n            /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i\n          )) !== null\n        ) {\n          color = {\n            r: parseInt(match[1], 16),\n            g: parseInt(match[2], 16),\n            b: parseInt(match[3], 16),\n            a: 1,\n          };\n        } else if (\n          (match = input.match(\n            /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/\n          )) !== null\n        ) {\n          color = {\n            r: parseInt(match[1] + match[1], 16),\n            g: parseInt(match[2] + match[2], 16),\n            b: parseInt(match[3] + match[3], 16),\n            a: 1,\n          };\n        } else if (\n          (match = input.match(\n            /^rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/\n          )) !== null\n        ) {\n          color = {\n            r: parseInt(match[1]),\n            g: parseInt(match[2]),\n            b: parseInt(match[3]),\n            a: 1,\n          };\n        } else if (\n          (match = input.match(\n            /^rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)\\s*\\)\\s*$/\n          )) !== null\n        ) {\n          color = {\n            r: parseInt(match[1]),\n            g: parseInt(match[2]),\n            b: parseInt(match[3]),\n            a: parseFloat(match[4] ?? 1),\n          };\n        }\n      } else if ('length' in input) {\n        color = {\n          r: input[0] || 0,\n          g: input[1] || 0,\n          b: input[2] || 0,\n          a: input[3] || 1,\n        };\n      }\n\n      return color;\n    };\n\n  let sourceColors = source.map(getColor),\n    replaceColors = replacement.map(getColor);\n\n  for (let i = 0; i < imageData.data.length; i += 4) {\n    sourceColors.forEach((color, n) => {\n      if (\n        imageData.data[i] === color.r &&\n        imageData.data[i + 1] === color.g &&\n        imageData.data[i + 2] === color.b &&\n        imageData.data[i + 3] === color.a * 255\n      ) {\n        imageData.data[i] = (replaceColors[n] || replaceColors[0]).r;\n        imageData.data[i + 1] = (replaceColors[n] || replaceColors[0]).g;\n        imageData.data[i + 2] = (replaceColors[n] || replaceColors[0]).b;\n        imageData.data[i + 3] = Math.trunc(\n          (replaceColors[n] || replaceColors[0]).a * 255\n        );\n      }\n    });\n  }\n\n  context.putImageData(imageData, 0, 0);\n\n  return canvas;\n};\n\nexport default replaceColours;\n", "import { NeighbourDirection, Tile } from '../types';\nimport {\n  getPreloadedImage,\n  preloadContainer,\n  setPreloadContainer,\n} from './Map/lib/getPreloadedImage';\nimport World from './World';\nimport { e } from '../lib/html';\nimport replaceColours from './Map/lib/replaceColours';\n\nexport interface IMap {\n  context(): CanvasRenderingContext2D;\n  render(...args: any[]): void;\n  scale(): number;\n  tileSize(): number;\n  world(): World;\n}\n\ninterface DrawImageOptions {\n  augment?: (image: CanvasImageSource) => CanvasImageSource;\n  offsetX?: number;\n  offsetY?: number;\n}\n\nexport class Map implements IMap {\n  #canvas: HTMLCanvasElement;\n  #context: CanvasRenderingContext2D;\n  #visible: boolean = true;\n  #scale: number;\n  #tileSize: number;\n  #world: World;\n\n  constructor(\n    world: World,\n    scale: number = 2,\n    tileSize: number = 16,\n    canvas: HTMLCanvasElement = e('canvas') as HTMLCanvasElement\n  ) {\n    this.#canvas = canvas;\n    this.#world = world;\n    this.#tileSize = tileSize;\n    this.#scale = scale;\n\n    this.setCanvasSize();\n\n    this.#context = this.#canvas.getContext('2d') as CanvasRenderingContext2D;\n    setPreloadContainer(document.querySelector('#preload')!);\n  }\n\n  canvas(): HTMLCanvasElement {\n    return this.#canvas;\n  }\n\n  clear(): void {\n    this.context().clearRect(0, 0, this.canvas().width, this.canvas().height);\n  }\n\n  context(): CanvasRenderingContext2D {\n    return this.#context;\n  }\n\n  render(tiles: Tile[] = this.world().tiles()): void {\n    this.clear();\n\n    tiles.forEach(({ x, y }: Tile) => this.renderTile(this.world().get(x, y)));\n  }\n\n  renderTile({ x, y }: Tile): void {\n    const size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    this.context().clearRect(offsetX, offsetY, size, size);\n  }\n\n  scale(): number {\n    return this.#scale;\n  }\n\n  tileSize(): number {\n    return this.#tileSize * this.#scale;\n  }\n\n  update(tilesToUpdate: Tile[]): void {\n    tilesToUpdate.forEach(({ x, y }: Tile) =>\n      this.renderTile(this.world().get(x, y))\n    );\n  }\n\n  world(): World {\n    return this.#world;\n  }\n\n  protected drawImage(\n    path: string,\n    x: number,\n    y: number,\n    options: DrawImageOptions = {}\n  ): void {\n    const size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      image = this.getPreloadedImage(path);\n\n    this.putImage(\n      options.augment ? options.augment(image) : image,\n      offsetX + (options.offsetX ?? 0),\n      offsetY + (options.offsetY ?? 0)\n    );\n  }\n\n  protected filterNeighbours(\n    tile: Tile,\n    filter: (tile: Tile) => boolean,\n    directions: NeighbourDirection[] = ['n', 'e', 's', 'w']\n  ): NeighbourDirection[] {\n    return directions.filter((direction: NeighbourDirection): boolean =>\n      filter(this.#world.getNeighbour(tile, direction))\n    );\n  }\n\n  protected getPreloadedImage(path: string): CanvasImageSource {\n    return getPreloadedImage(path);\n  }\n\n  protected putImage(\n    image: CanvasImageSource,\n    offsetX: number,\n    offsetY: number\n  ): void {\n    this.#context.imageSmoothingEnabled = false;\n\n    this.#context.drawImage(\n      image,\n      offsetX,\n      offsetY,\n      (image.width as number) * this.#scale,\n      (image.height as number) * this.#scale\n    );\n  }\n\n  protected replaceColours(\n    image: CanvasImageSource,\n    source: string[],\n    replacement: string[]\n  ) {\n    return replaceColours(image, source, replacement);\n  }\n\n  protected setCanvasSize(): void {\n    this.#canvas.height = this.#world.height() * this.tileSize();\n    this.#canvas.width = this.#world.width() * this.tileSize();\n    // this.#canvas.setAttribute('height', this.#canvas.height.toString());\n    // this.#canvas.setAttribute('width',this.#canvas.width.toString());\n  }\n\n  isVisible(): boolean {\n    return this.#visible;\n  }\n\n  setVisible(visible: boolean): void {\n    this.#visible = visible;\n  }\n}\n\nexport default Map;\n", "import { Tile, Unit } from '../../types';\nimport { Map, IMap } from '../Map';\n\nexport class Cities extends Map {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (tile.city) {\n      const city = tile.city,\n        player = city.player,\n        civilization = player.civilization,\n        [colors] = civilization.attributes.filter(\n          (attribute) => attribute.name === 'colors'\n        );\n\n      if (tile.units.length > 0) {\n        this.context().fillStyle = '#000';\n        this.context().fillRect(offsetX, offsetY, size, size);\n      }\n\n      this.context().fillStyle = colors.value[0];\n      this.context().fillRect(\n        offsetX + this.scale(),\n        offsetY + this.scale(),\n        size - this.scale() * 2,\n        size - this.scale() * 2\n      );\n\n      this.drawImage(`map/city`, x, y, {\n        augment: (image) =>\n          this.replaceColours(\n            image,\n            // To come from theme manifest\n            ['#000'],\n            [colors.value[1]]\n          ),\n        offsetX: this.scale(),\n        offsetY: this.scale(),\n      });\n    }\n  }\n}\n\nexport default Cities;\n", "import {\n  NotificationWindow,\n  NotificationWindowOptions,\n} from './NotificationWindow';\nimport { e, h, t } from '../lib/html';\n\nexport interface ConfirmationWindowOptions extends NotificationWindowOptions {\n  okLabel?: string;\n  cancelLabel?: string;\n}\n\nexport class ConfirmationWindow extends NotificationWindow {\n  constructor(\n    title: string,\n    details: string,\n    onOK: () => void,\n    options: ConfirmationWindowOptions = {}\n  ) {\n    const confirmationButton = h(e('button', t(options.okLabel ?? 'OK')), {\n      click: () => {\n        onOK();\n\n        this.close();\n      },\n      keydown: (event) => {\n        if (event.key === 'Enter' || event.key === ' ') {\n          event.preventDefault();\n          event.stopPropagation();\n\n          onOK();\n\n          this.close();\n        }\n      },\n    });\n\n    super(\n      title,\n      e(\n        'div.content',\n        e('p', t(details)),\n        e(\n          'footer',\n          confirmationButton,\n          h(e('button', t(options.cancelLabel ?? 'Cancel')), {\n            click: () => this.close(),\n            keydown: (event) => {\n              if (event.key === 'Enter' || event.key === ' ') {\n                event.preventDefault();\n                event.stopPropagation();\n\n                this.close();\n              }\n            },\n          })\n        )\n      ),\n      {\n        ...options,\n        queue: false,\n      }\n    );\n\n    confirmationButton.focus();\n  }\n}\n\nexport default ConfirmationWindow;\n", "import { PlainObject } from '../types';\nimport { ObjectMap } from './reconstituteData';\n\nexport type dataUpdatedEvent = CustomEvent<{ data: PlainObject }>;\nexport type dataUpdatedHandler = (data: PlainObject) => void;\nexport type patchDataReceivedEvent = CustomEvent<{ value: ObjectMap }>;\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    dataupdated: dataUpdatedEvent;\n    patchdatareceived: patchDataReceivedEvent;\n  }\n}\n\nexport class DataObserver {\n  #handler: (event: patchDataReceivedEvent) => void;\n  #ids: string[] = [];\n\n  constructor(ids: string[], handler: dataUpdatedHandler) {\n    this.setIds(ids);\n\n    this.#handler = (event) => {\n      const { detail } = event,\n        objects = detail.value.objects;\n\n      if (!objects) {\n        return;\n      }\n\n      if (this.#ids.some((id) => id in objects)) {\n        document.addEventListener(\n          'dataupdated',\n          (event) => handler(event.detail.data),\n          {\n            once: true,\n          }\n        );\n      }\n    };\n\n    document.addEventListener('patchdatareceived', this.#handler);\n  }\n\n  dispose(): void {\n    document.removeEventListener('patchdatareceived', this.#handler);\n  }\n\n  setIds(ids: string[]): void {\n    this.#ids.splice(0, this.#ids.length, ...ids);\n  }\n}\n\nexport default DataObserver;\n", "import { NeighbourDirection, Tile } from '../../types';\nimport { Map, IMap } from '../Map';\n\nexport class TerrainAbstract extends Map implements IMap {\n  update(tilesToUpdate: Tile[]): void {\n    // we need to redraw the surrounding tiles to prevent the hidden terrain showing up incorrectly.\n    const extendedTilesToUpdate = [...tilesToUpdate];\n\n    tilesToUpdate.forEach((tile) => {\n      (\n        ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'] as NeighbourDirection[]\n      ).forEach((direction) => {\n        const target = this.world().getNeighbour(tile, direction);\n\n        if (extendedTilesToUpdate.includes(target)) {\n          return;\n        }\n\n        extendedTilesToUpdate.push(target);\n      });\n    });\n\n    return super.update(extendedTilesToUpdate);\n  }\n}\n\nexport default TerrainAbstract;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Feature extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    if (tile.terrain.features.length) {\n      tile.terrain.features.forEach((feature) =>\n        feature._ === 'Shield'\n          ? this.drawImage(`terrain/${feature._.toLowerCase()}`, x, y, {\n              offsetX: 4 * this.scale(),\n              offsetY: 4 * this.scale(),\n            })\n          : this.drawImage(`terrain/${feature._.toLowerCase()}`, x, y)\n      );\n    }\n  }\n}\n\nexport default Feature;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Fog extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    this.filterNeighbours(tile, (tile) => tile.terrain._ === 'Unknown').forEach(\n      (direction) => this.drawImage(`map/fog_${direction}`, x, y)\n    );\n  }\n}\n\nexport default Fog;\n", "import { EntityInstance, NeighbourDirection, Tile } from '../../types';\nimport TerrainAbstract from './TerrainAbstract';\n\ntype Improvement = 'Mine' | 'Pollution' | 'Railroad' | 'Road';\n\ntype ImprovementLookup = {\n  [key in Improvement]: boolean;\n};\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    const improvements = tile.improvements.reduce(\n      (\n        state: ImprovementLookup,\n        improvement: EntityInstance\n      ): ImprovementLookup => {\n        const improvementType = improvement._ as Improvement;\n\n        if (!(improvementType in state)) {\n          return state;\n        }\n\n        state[improvementType] = true;\n\n        return state;\n      },\n      {\n        Mine: false,\n        Road: false,\n        Railroad: false,\n        Pollution: false,\n      }\n    );\n\n    (['Mine', 'Pollution'] as (keyof ImprovementLookup)[]).forEach(\n      (improvementName: keyof ImprovementLookup) => {\n        if (improvements[improvementName]) {\n          this.drawImage(`improvements/${improvementName.toLowerCase()}`, x, y);\n        }\n      }\n    );\n\n    // Can't have Railroad without Road!\n    if (improvements.Road) {\n      const neighbouringRoad = this.filterNeighbours(\n          tile,\n          (adjoiningTile: Tile): boolean =>\n            adjoiningTile.improvements.some(\n              (improvement: EntityInstance): boolean => improvement._ === 'Road'\n            ),\n          ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw']\n        ),\n        neighbouringRailroad = this.filterNeighbours(\n          tile,\n          (adjoiningTile: Tile): boolean =>\n            !!adjoiningTile.city ||\n            adjoiningTile.improvements.some(\n              (improvement: EntityInstance): boolean =>\n                improvement._ === 'Railroad'\n            ),\n          ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw']\n        );\n\n      neighbouringRoad.forEach((direction: NeighbourDirection): void => {\n        if (\n          !improvements.Railroad ||\n          !neighbouringRailroad.includes(direction)\n        ) {\n          this.drawImage(`improvements/road_${direction}`, x, y);\n        }\n      });\n\n      if (improvements.Railroad) {\n        neighbouringRailroad.forEach((direction: NeighbourDirection): void =>\n          this.drawImage(`improvements/railroad_${direction}`, x, y)\n        );\n      }\n\n      if (neighbouringRoad.length === 0 && neighbouringRailroad.length === 0) {\n        const size = this.tileSize(),\n          offsetX = x * size,\n          offsetY = y * size,\n          center = Math.floor(this.tileSize() / 2) - this.scale();\n\n        this.context().fillStyle = improvements.Railroad ? '#000' : '#8c5828';\n        this.context().rect(\n          offsetX + center,\n          offsetY + center,\n          this.scale() * 2,\n          this.scale() * 2\n        );\n        this.context().fill();\n      }\n    }\n  }\n}\n\nexport default Terrain;\n", "import { ITransport, Unit } from '../types';\nimport SelectionWindow from './SelectionWindow';\n\ndeclare var transport: ITransport;\n\nexport class InactiveUnitSelectionWindow extends SelectionWindow {\n  constructor(units: Unit[], onComplete: (unit: Unit) => void = () => {}) {\n    super(\n      // TODO: i18n\n      'Activate unit',\n      units.map((unit: Unit) => ({\n        label:\n          unit._ +\n          ' [' +\n          (unit.city?.name ?? 'NONE') +\n          ']' +\n          (unit.busy ? ` (${unit.busy!._})` : ''),\n        value: unit.id,\n      })),\n      (selection: string) => {\n        const [unit] = units.filter((tileUnit) => tileUnit.id === selection);\n\n        if (!unit) {\n          return;\n        }\n\n        if (!unit.active) {\n          transport.send('action', {\n            name: 'InactiveUnit',\n            id: selection,\n          });\n\n          return;\n        }\n\n        onComplete(unit);\n      },\n      null\n    );\n  }\n}\n\nexport default InactiveUnitSelectionWindow;\n", "import { EntityInstance, NeighbourDirection, Tile } from '../../types';\nimport TerrainAbstract from './TerrainAbstract';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile,\n      hasIrrigation = tile.improvements.some(\n        (improvement: EntityInstance): boolean => improvement._ === 'Irrigation'\n      );\n\n    if (!hasIrrigation) {\n      return;\n    }\n\n    this.drawImage(`improvements/irrigation`, x, y);\n  }\n}\n\nexport default Terrain;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\nimport { e } from '../../lib/html';\n\nexport class Land extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    if (tile.isLand) {\n      this.drawImage('terrain/land', x, y);\n    } else if (tile.isWater) {\n      this.drawImage('terrain/ocean', x, y);\n\n      if (tile.isCoast) {\n        const sprite = this.getPreloadedImage(\n            'terrain/coast_sprite'\n          ) as HTMLImageElement,\n          // formula from: http://forums.civfanatics.com/showpost.php?p=13507808&postcount=40\n          // Build a bit mask of all 8 surrounding tiles, setting the bit if the tile is not an\n          // ocean tile. Starting with the tile to the left as the least significant bit and\n          // going clockwise\n          bitmask =\n            (this.world().getNeighbour(tile, 'w').isLand ? 1 : 0) |\n            (this.world().getNeighbour(tile, 'nw').isLand ? 2 : 0) |\n            (this.world().getNeighbour(tile, 'n').isLand ? 4 : 0) |\n            (this.world().getNeighbour(tile, 'ne').isLand ? 8 : 0) |\n            (this.world().getNeighbour(tile, 'e').isLand ? 16 : 0) |\n            (this.world().getNeighbour(tile, 'se').isLand ? 32 : 0) |\n            (this.world().getNeighbour(tile, 's').isLand ? 64 : 0) |\n            (this.world().getNeighbour(tile, 'sw').isLand ? 128 : 0);\n\n        if (bitmask > 0) {\n          // There are at least one surrounding tile that is not ocean, so we need to render\n          // coast. We divide the tile into four 8x8 subtiles and for each of these we want\n          // a 3 bit bitmask of the surrounding tiles. We do this by looking at the 3 least\n          // significant bits for the top left subtile and shift the mask to the right as we\n          // are going around the tile. This way we are \"rotating\" our bitmask. The result\n          // are our x offsets into ter257.pic\n          let topLeftSubtileOffset = bitmask & 7,\n            topRightSubtileOffset = (bitmask >> 2) & 7,\n            bottomRightSubtileOffset = (bitmask >> 4) & 7,\n            bottomLeftSubtileOffset =\n              ((bitmask >> 6) & 7) | ((bitmask & 1) << 2);\n\n          const image = e(\n              'canvas[height=\"16\"][width=\"16\"]'\n            ) as HTMLCanvasElement,\n            imageContext = image.getContext('2d') as CanvasRenderingContext2D;\n\n          imageContext.drawImage(\n            sprite,\n            topLeftSubtileOffset << 4,\n            0,\n            8,\n            8,\n            0,\n            0,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            (topRightSubtileOffset << 4) + 8,\n            0,\n            8,\n            8,\n            8,\n            0,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            (bottomRightSubtileOffset << 4) + 8,\n            8,\n            8,\n            8,\n            8,\n            8,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            bottomLeftSubtileOffset << 4,\n            8,\n            8,\n            8,\n            0,\n            8,\n            8,\n            8\n          );\n\n          this.putImage(image, offsetX, offsetY);\n        }\n\n        this.filterNeighbours(\n          tile,\n          (tile: Tile): boolean => tile.terrain._ === 'River'\n        ).forEach((direction) =>\n          this.drawImage(`terrain/river_mouth_${direction}`, x, y)\n        );\n      }\n    }\n  }\n}\n\nexport default Land;\n", "import { Coordinate, Tile, Unit } from '../types';\nimport { EventEmitter } from 'eventemitter3';\nimport Map from './Map';\nimport World from './World';\nimport { e } from '../lib/html';\n\nexport interface IPortal {\n  build(updatedTiles: Tile[]): void;\n  canvas(): HTMLCanvasElement;\n  center(): Coordinate;\n  getLayer(LayerType: typeof Map): Map | null;\n  getLayers(LayerType: typeof Map): Map[];\n  isVisible(x: number, y: number): boolean;\n  playerId(): string | null;\n  render(): void;\n  scale(): number;\n  setCenter(x: number, y: number): void;\n  tileSize(): number;\n  visibleBounds(): [number, number, number, number];\n  visibleRange(): [Coordinate, Coordinate];\n  world(): World;\n}\n\nexport interface PortalSettings {\n  playerId: string | null;\n  scale: number;\n  tileSize: number;\n}\n\ntype PortalOptions = {\n  [K in keyof PortalSettings]?: PortalSettings[K];\n};\n\nconst defaultPortalOptions: PortalSettings = {\n  playerId: null,\n  scale: 2,\n  tileSize: 16,\n};\n\nexport class Portal\n  extends EventEmitter<{\n    ['activate-unit']: [Unit];\n    ['focus-changed']: [number, number];\n  }>\n  implements IPortal\n{\n  #canvas: HTMLCanvasElement;\n  #center: Coordinate = { x: 0, y: 0 };\n  #context: CanvasRenderingContext2D;\n  #layers: Map[] = [];\n  #playerId: string | null = null;\n  #scale: number;\n  #tileSize: number;\n  #world: World;\n\n  constructor(\n    world: World,\n    canvas: HTMLCanvasElement = e('canvas') as HTMLCanvasElement,\n    options: PortalOptions = {\n      playerId: null,\n      scale: 2,\n    },\n    ...layers: typeof Map[]\n  ) {\n    const settings: PortalSettings = {\n      ...defaultPortalOptions,\n      ...options,\n    };\n\n    super();\n\n    this.#world = world;\n    this.#canvas = canvas;\n    this.#playerId = settings.playerId;\n    this.#tileSize = settings.tileSize;\n    this.#scale = settings.scale;\n\n    layers.forEach((MapType) =>\n      this.#layers.push(new MapType(this.#world, this.scale(), this.tileSize()))\n    );\n\n    this.#context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    this.bindEvents();\n  }\n\n  protected bindEvents(): void {}\n\n  public build(updatedTiles: Tile[]): void {\n    this.#layers.forEach((layer: Map) => layer.update(updatedTiles));\n  }\n\n  public canvas(): HTMLCanvasElement {\n    return this.#canvas;\n  }\n\n  public center(): Coordinate {\n    return this.#center;\n  }\n\n  public getLayer(LayerType: typeof Map): Map | null {\n    return this.getLayers(LayerType).shift() ?? null;\n  }\n\n  public getLayers(LayerType: typeof Map): Map[] {\n    return this.#layers.filter((layer) => layer instanceof LayerType);\n  }\n\n  public isVisible(x: number, y: number): boolean {\n    const [xLowerBound, xUpperBound, yLowerBound, yUpperBound] =\n      this.visibleBounds();\n\n    // I _think_ this logic is correct now...\n    return (\n      (xLowerBound > xUpperBound\n        ? x < xUpperBound || x > xLowerBound\n        : x < xUpperBound && x > xLowerBound) &&\n      (yLowerBound > yUpperBound\n        ? y < yUpperBound || y > yLowerBound\n        : y < yUpperBound && y > yLowerBound)\n    );\n  }\n\n  public playerId(): string | null {\n    return this.#playerId;\n  }\n\n  public render(): void {\n    const tileSize = this.#layers[0].tileSize(),\n      layerWidth = this.#world.width() * tileSize,\n      centerX = this.#center.x * tileSize + Math.trunc(tileSize / this.scale()),\n      portalCenterX = Math.trunc(this.#canvas.width / 2),\n      layerHeight = this.#world.height() * tileSize,\n      centerY = this.#center.y * tileSize + Math.trunc(tileSize / this.scale()),\n      portalCenterY = Math.trunc(this.#canvas.height / 2);\n\n    let startX = portalCenterX - centerX,\n      endX = portalCenterX + layerWidth,\n      startY = portalCenterY - centerY,\n      endY = portalCenterY + layerHeight;\n\n    while (startX > 0) {\n      startX -= layerWidth;\n    }\n\n    while (startY > 0) {\n      startY -= layerHeight;\n    }\n\n    while (endX < this.#canvas.width) {\n      endX += layerWidth;\n    }\n\n    while (endY < this.#canvas.height) {\n      endY += layerHeight;\n    }\n\n    this.#context.fillStyle = '#000';\n    this.#context.fillRect(\n      0,\n      0,\n      this.#world.width() * tileSize,\n      this.#world.height() * tileSize\n    );\n\n    for (let x = startX; x < endX; x += layerWidth) {\n      for (let y = startY; y < endY; y += layerHeight) {\n        this.#layers.forEach((layer) => {\n          if (!layer.isVisible()) {\n            return;\n          }\n\n          const canvas = layer.canvas();\n\n          this.#context.drawImage(canvas, x, y, canvas.width, canvas.height);\n        });\n      }\n    }\n  }\n\n  public scale(): number {\n    return this.#scale;\n  }\n\n  public setCenter(x: number, y: number): void {\n    this.#center.x = x;\n    this.#center.y = y;\n\n    this.render();\n\n    this.emit('focus-changed', x, y);\n  }\n\n  public tileSize(): number {\n    return this.#tileSize;\n  }\n\n  public visibleBounds(): [number, number, number, number] {\n    const xRange = Math.floor(\n        this.#canvas.width / this.#layers[0].tileSize() / this.#scale\n      ),\n      yRange = Math.floor(\n        this.#canvas.height / this.#layers[0].tileSize() / this.#scale\n      ),\n      xLowerBound =\n        (this.#center.x - xRange + this.#world.width()) % this.#world.width(),\n      xUpperBound = (this.#center.x + xRange) % this.#world.width(),\n      yLowerBound =\n        (this.#center.y - yRange + this.#world.height()) % this.#world.height(),\n      yUpperBound = (this.#center.y + yRange) % this.#world.height();\n\n    return [xLowerBound, xUpperBound, yLowerBound, yUpperBound];\n  }\n\n  public visibleRange(): [Coordinate, Coordinate] {\n    const xRange = Math.floor(\n        this.#canvas.width / this.#layers[0].tileSize() / this.#scale\n      ),\n      yRange = Math.floor(\n        this.#canvas.height / this.#layers[0].tileSize() / this.#scale\n      );\n\n    return [\n      { x: this.#center.x - xRange, y: this.#center.y - yRange },\n      { x: this.#center.x + xRange, y: this.#center.y + yRange },\n    ];\n  }\n\n  public world(): World {\n    return this.#world;\n  }\n}\n\nexport default Portal;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    const adjoining = this.filterNeighbours(\n      tile,\n      (adjoiningTile: Tile): boolean =>\n        (tile.terrain._ === 'River' && adjoiningTile.isWater) ||\n        tile.terrain._ === adjoiningTile.terrain._\n    ).join('');\n\n    // Ocean is covered with the land/ocean stuff above and if we re-do here, we lose the coastline\n    if (tile.terrain._ !== 'Ocean') {\n      if (adjoining) {\n        this.drawImage(\n          `terrain/${tile.terrain._.toLowerCase()}_${adjoining}`,\n          x,\n          y\n        );\n      } else {\n        this.drawImage(`terrain/${tile.terrain._.toLowerCase()}`, x, y);\n      }\n    }\n  }\n}\n\nexport default Terrain;\n", "import { NeighbourDirection, Tile, World as WorldData } from '../types';\n\nexport class World {\n  #unknown = (x: number, y: number): Tile => ({\n    _: 'Tile',\n    id: `Tile-${x}--${y}`,\n    city: null,\n    goodyHut: null,\n    improvements: [],\n    isCoast: false,\n    isLand: false,\n    isWater: false,\n    terrain: {\n      _: 'Unknown',\n      id: `UnknownTerrain-${x}--${y}`,\n      features: [],\n    },\n    units: [],\n    x,\n    y,\n    yields: [],\n  });\n  #lookupCache: { [key: string]: number } = {};\n  #tiles: Tile[];\n  #height: number;\n  #width: number;\n\n  constructor(world: WorldData) {\n    this.#height = world.height;\n    this.#width = world.width;\n    this.#tiles = world.tiles || [];\n  }\n\n  get(x: number, y: number): Tile {\n    while (x < 0) {\n      x += this.#width;\n    }\n\n    while (y < 0) {\n      y += this.#height;\n    }\n\n    while (x >= this.#width) {\n      x -= this.#width;\n    }\n\n    while (y >= this.#height) {\n      y -= this.#height;\n    }\n\n    const key = [x, y].toString();\n\n    if (!(key in this.#lookupCache)) {\n      const index = this.#tiles.findIndex(\n        (tile) => tile.x === x && tile.y === y\n      );\n\n      if (index === -1) {\n        return this.#unknown(x, y);\n      }\n\n      this.#lookupCache[key] = index;\n    }\n\n    return this.#tiles[this.#lookupCache[key]];\n  }\n\n  getNeighbour(tile: Tile, direction: NeighbourDirection): Tile {\n    if (direction === 'n') {\n      return this.get(tile.x, tile.y - 1);\n    }\n\n    if (direction === 'ne') {\n      return this.get(tile.x + 1, tile.y - 1);\n    }\n\n    if (direction === 'e') {\n      return this.get(tile.x + 1, tile.y);\n    }\n\n    if (direction === 'se') {\n      return this.get(tile.x + 1, tile.y + 1);\n    }\n\n    if (direction === 's') {\n      return this.get(tile.x, tile.y + 1);\n    }\n\n    if (direction === 'sw') {\n      return this.get(tile.x - 1, tile.y + 1);\n    }\n\n    if (direction === 'w') {\n      return this.get(tile.x - 1, tile.y);\n    }\n\n    if (direction === 'nw') {\n      return this.get(tile.x - 1, tile.y - 1);\n    }\n\n    throw new TypeError('Invalid direction.');\n  }\n\n  height(): number {\n    return this.#height;\n  }\n\n  tiles(): Tile[] {\n    return this.#tiles;\n  }\n\n  width(): number {\n    return this.#width;\n  }\n\n  setTiles(tiles: Tile[]): void {\n    this.#tiles = tiles;\n  }\n}\n\nexport default World;\n", "import Map from '../Map';\nimport { Tile } from '../../types';\n\nexport class Yields extends Map {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      total = tile.yields.reduce(\n        (total, tileYield) => total + tileYield.value,\n        0\n      ),\n      // TODO: use a more effective sort than this, this only works by luck (Food -> Production -> Trade)\n      yields = tile.yields.sort(\n        (a, b) => a._.charCodeAt(0) - b._.charCodeAt(0)\n      );\n\n    let i = 0;\n\n    if (total < 5) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 2, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 2, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 7) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 3, offsetY],\n        [offsetX + (size / 3) * 2, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 3, offsetY + size / 2],\n        [offsetX + (size / 3) * 2, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            offsets[i][0],\n            offsets[i++][1]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 9) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 4, offsetY],\n        [offsetX + (size / 4) * 2, offsetY],\n        [offsetX + (size / 4) * 3, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 4, offsetY + size / 2],\n        [offsetX + (size / 4) * 2, offsetY + size / 2],\n        [offsetX + (size / 4) * 3, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 11) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 5, offsetY],\n        [offsetX + (size / 5) * 2, offsetY],\n        [offsetX + (size / 5) * 3, offsetY],\n        [offsetX + (size / 5) * 4, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 5, offsetY + size / 2],\n        [offsetX + (size / 5) * 2, offsetY + size / 2],\n        [offsetX + (size / 5) * 3, offsetY + size / 2],\n        [offsetX + (size / 5) * 4, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    const offsets: [number, number][] = [\n      [offsetX, offsetY],\n      [offsetX + size / 6, offsetY],\n      [offsetX + (size / 6) * 2, offsetY],\n      [offsetX + (size / 6) * 3, offsetY],\n      [offsetX + (size / 6) * 4, offsetY],\n      [offsetX + (size / 6) * 5, offsetY],\n      [offsetX, offsetY + size / 2],\n      [offsetX + size / 6, offsetY + size / 2],\n      [offsetX + (size / 6) * 2, offsetY + size / 2],\n      [offsetX + (size / 6) * 3, offsetY + size / 2],\n      [offsetX + (size / 6) * 4, offsetY + size / 2],\n      [offsetX + (size / 6) * 5, offsetY + size / 2],\n    ];\n\n    yields.forEach((tileYield) => {\n      for (let n = 0; n < tileYield.value; n++) {\n        this.putImage(\n          this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n          ...offsets[i++]\n        );\n      }\n    });\n  }\n}\nexport default Yields;\n", "import { Unit } from '../../../types';\nimport getPreloadedImage from './getPreloadedImage';\nimport replaceColours from './replaceColours';\n\nconst busyLookup: { [key: string]: string } = {\n  BuildingIrrigation: 'I',\n  BuildingMine: 'M',\n  BuildingRoad: 'R',\n  BuildingRailroad: 'RR',\n  // 'ClearingForest': 'CF',\n  // 'ClearingJungle': 'CJ',\n  // 'ClearingSwamp': 'CS',\n  // 'Fortifying': 'F',\n  // 'Sleeping': 'S',\n  // 'PlantingForest': 'PF',\n};\n\nexport const renderUnit = (\n  unit: Unit,\n  // scale: number = 2,\n  tileSize: number = 16\n): CanvasImageSource => {\n  const player = unit.player,\n    civilization = player.civilization,\n    [colors] = civilization.attributes.filter(\n      (attribute) => attribute.name === 'colors'\n    ),\n    unitCanvas = replaceColours(\n      getPreloadedImage(`units/${unit._.toLowerCase()}`),\n      // To come from theme manifest\n      ['#60E064', '#2C7800'],\n      colors.value\n    ),\n    context = unitCanvas.getContext('2d')!;\n\n  context.imageSmoothingEnabled = false;\n\n  if (unit.improvements?.some((improvement) => improvement._ === 'Fortified')) {\n    context.drawImage(getPreloadedImage('map/fortify'), 0, 0);\n  }\n\n  if (unit.busy) {\n    // if (unit.busy._ === 'Sleeping') {} // TODO: fade the unit like in Civ 1\n    const sizeOffsetX = tileSize / 2,\n      sizeOffsetY = tileSize * 0.75,\n      identifier =\n        busyLookup[unit.busy._] ?? unit.busy._.replace(/[a-z]+/g, '');\n\n    context.font = `bold 8px sans-serif`;\n    context.fillStyle = 'black';\n    context.textAlign = 'center';\n    context.fillText(identifier, sizeOffsetX, sizeOffsetY);\n    context.fillStyle = 'white';\n    context.fillText(identifier, sizeOffsetX, sizeOffsetY);\n  }\n\n  return unitCanvas;\n};\n\nexport default renderUnit;\n", "import Element from './Element';\nimport { Unit as UnitData } from '../types';\nimport { e } from '../lib/html';\nimport renderUnit from './Map/lib/renderUnit';\n\nexport class Unit extends Element {\n  #scale: number = 2;\n\n  constructor(unit: UnitData, scale: number = 2) {\n    super(e('canvas[width=\"32\"][height=\"32\"]'));\n\n    this.#scale = scale;\n\n    this.build(unit);\n  }\n\n  build(unit: UnitData) {\n    const unitCanvas = renderUnit(unit);\n    const context = this.element().getContext('2d')!;\n    context.imageSmoothingEnabled = false;\n\n    const sizeX = this.size(unitCanvas.width as number),\n      sizeY = this.size(unitCanvas.height as number);\n\n    const offsetX = Math.floor((this.size(16) - sizeX) / 2),\n      offsetY = Math.floor((this.size(16) - sizeY) / 2);\n\n    context.drawImage(unitCanvas, offsetX, offsetY, sizeX, sizeY);\n  }\n\n  element(): HTMLCanvasElement {\n    return super.element() as HTMLCanvasElement;\n  }\n\n  size(size: number = 16): number {\n    return size * this.#scale;\n  }\n}\n\nexport default Unit;\n", "export const knownGroups: { [key: string]: string } = {\n  Food: 'Food',\n  UnitSupportFood: 'Food',\n  PopulationSupportFood: 'Food',\n  Production: 'Production',\n  UnitSupportProduction: 'Production',\n  Trade: 'Trade',\n  Corruption: 'Trade',\n  Happiness: 'Happiness',\n  LuxuryHappiness: 'Happiness',\n  Unhappiness: 'Unhappiness',\n  MartialLawContent: 'Unhappiness',\n  MilitaryUnhappiness: 'Unhappiness',\n  PopulationUnhappiness: 'Unhappiness',\n  CityImprovementContent: 'Unhappiness',\n  Research: 'Research',\n  Luxuries: 'Luxuries',\n  Gold: 'Gold',\n  CityImprovementMaintenanceGold: 'Gold',\n};\n\nexport const knownGroupLookup = Object.entries(knownGroups).reduce(\n  (object, [yieldName, group]) => {\n    if (!Object.prototype.hasOwnProperty.call(object, group)) {\n      object[group] = [];\n    }\n\n    object[group].push(yieldName);\n\n    return object;\n  },\n  {} as { [key: string]: string[] }\n);\n\nexport const knownIcons: { [key: string]: string } = {\n  Food: 'city/food.png',\n  Production: 'city/production.png',\n  Trade: 'city/trade.png',\n  Gold: 'city/gold.png',\n  Luxuries: 'city/luxury.png',\n  Pollution: 'city/pollution.png',\n  Research: 'city/bulb.png',\n  Unhappiness: 'city/sad.png',\n};\n", "import {\n  City as CityData,\n  CityGrowth,\n  CityImprovementMaintenanceGold,\n  ITransport,\n  MilitaryUnhappiness,\n  PlainObject,\n  Unit as UnitData,\n  UnitSupportFood,\n  UnitSupportProduction,\n  Yield,\n} from '../types';\nimport { e, h, t } from '../lib/html';\nimport Cities from './Map/Cities';\nimport CityBuildSelectionWindow from './CityBuildSelectionWindow';\nimport ConfirmationWindow from './ConfirmationWindow';\nimport DataObserver from '../lib/DataObserver';\nimport Feature from './Map/Feature';\nimport Fog from './Map/Fog';\nimport Improvements from './Map/Improvements';\nimport InactiveUnitSelectionWindow from './InactiveUnitSelectionWindow';\nimport Irrigation from './Map/Irrigation';\nimport Land from './Map/Land';\nimport Portal from './Portal';\nimport Terrain from './Map/Terrain';\nimport Window from './Window';\nimport World from './World';\nimport Yields from './Map/Yields';\nimport Unit from './Unit';\nimport { knownGroupLookup, knownGroups, knownIcons } from './lib/yieldMap';\n\ndeclare var transport: ITransport;\n\nconst buildTurns = (city: CityData) =>\n    Math.max(\n      1,\n      Math.ceil(\n        (city.build.cost.value - city.build.progress.value) /\n          city.yields\n            .filter((cityYield) =>\n              knownGroupLookup.Production.includes(cityYield._)\n            )\n            .reduce((total, cityYield) => total + cityYield.value, 0)\n      )\n    ),\n  growthTurns = (city: CityData) =>\n    Math.max(\n      1,\n      Math.ceil(\n        (city.growth.cost.value - city.growth.progress.value) /\n          city.yields\n            .filter((cityYield) => knownGroupLookup.Food.includes(cityYield._))\n            .reduce((total, cityYield) => total + cityYield.value, 0)\n      )\n    ),\n  renderPopulation = (city: CityData): Node => {\n    const growth = city.growth,\n      mask = parseInt(city.name.replace(/[^a-z]/gi, ''), 36).toString(2);\n\n    let [happiness, unhappiness] = city.yields.reduce(\n      ([happiness, unhappiness], cityYield) => {\n        if (knownGroupLookup.Happiness.includes(cityYield._)) {\n          happiness += cityYield.value;\n        }\n\n        if (knownGroupLookup.Unhappiness.includes(cityYield._)) {\n          unhappiness += cityYield.value;\n        }\n\n        return [happiness, unhappiness];\n      },\n      [0, 0]\n    );\n\n    const state = new Array(growth.size).fill(1);\n\n    let currentIndex = state.length - 1;\n\n    while (unhappiness > 0 && currentIndex > -1) {\n      state[currentIndex--] = 0;\n      unhappiness--;\n    }\n\n    currentIndex = 0;\n\n    while (happiness > 0 && currentIndex < state.length) {\n      if (state[currentIndex] === 0) {\n        state[currentIndex]++;\n        happiness--;\n      }\n\n      if (state[currentIndex] === 1) {\n        state[currentIndex++]++;\n        happiness--;\n      }\n\n      if (state[currentIndex] === 2) {\n        currentIndex++;\n      }\n    }\n\n    return e(\n      'div.population',\n      ...state.map((status, index) =>\n        e(\n          'span.citizen',\n          e(\n            `img[src=\"../assets/city/people_${\n              ['unhappy', 'content', 'happy'][status]\n            }_${['f', 'm'][parseInt(mask[index % mask.length], 10)]}.png\"]`\n          )\n        )\n      )\n    );\n  },\n  reduceYield = (type: string, cityYields: Yield[]): [number, number] =>\n    cityYields\n      .filter((cityYield) => knownGroupLookup[type].includes(cityYield._))\n      .reduce(\n        ([used, free], cityYield) => [\n          used + (cityYield.value < 0 ? -cityYield.value : 0),\n          free + cityYield.value,\n        ],\n        [0, 0]\n      ),\n  renderYields = (city: CityData): Node => {\n    return e(\n      'div.yields-detail',\n      ...[\n        ['Food'],\n        ['Production'],\n        ['Trade'],\n        ['Luxuries', 'Gold', 'Research'],\n      ].map((cityYieldNames) =>\n        e(\n          `div.yields[data-yields=\"${cityYieldNames.join(' ')}\"]`,\n          ...cityYieldNames.map((cityYieldName) =>\n            e(\n              `span.yield[data-yield=\"${cityYieldName}\"]`,\n              ...reduceYield(cityYieldName, city.yields).map((n, i) =>\n                e(\n                  `span.${['used', 'free'][i]}`,\n                  ...yieldImages({\n                    id: '',\n                    _: cityYieldName,\n                    value: n,\n                    values: [],\n                  })\n                  // ...new Array(n)\n                  //   .fill(1)\n                  //   .map(() =>\n                  //     e(\n                  //       'span.yield-icon',\n                  //       e(`img[src=\"../assets/${knownIcons[cityYieldName]}\"]`)\n                  //     )\n                  //   )\n                )\n              )\n            )\n          )\n        )\n      ),\n      // Other, unknown yields\n      ...Object.entries(\n        city.yields\n          .filter(\n            (cityYield) => !Object.keys(knownGroups).includes(cityYield._)\n          )\n          .reduce((yieldObject, cityYield) => {\n            if (!(cityYield._ in yieldObject)) {\n              yieldObject[cityYield._] = 0;\n            }\n\n            yieldObject[cityYield._] += cityYield.value;\n\n            return yieldObject;\n          }, {} as PlainObject)\n      ).map(([label, value]) =>\n        e('div', e('div', t(label)), e('div', t(value)))\n      )\n    );\n  },\n  renderMap = (portal: Portal, city: CityData): Node => {\n    const portalCanvas = e('canvas') as HTMLCanvasElement,\n      cityPortal = new Portal(\n        new World(city.player.world),\n        portalCanvas,\n        {\n          playerId: city.player.id,\n          scale: portal.scale(),\n          tileSize: portal.tileSize(),\n        },\n        Land,\n        Irrigation,\n        Terrain,\n        Improvements,\n        Feature,\n        Fog,\n        Cities,\n        Yields\n      );\n\n    portalCanvas.height = portal.tileSize() * portal.scale() * 5;\n    portalCanvas.width = portal.tileSize() * portal.scale() * 5;\n\n    cityPortal.setCenter(city.tile.x, city.tile.y);\n    cityPortal.build(city.tiles);\n\n    const yieldMap = cityPortal.getLayer(Yields) as Yields;\n    yieldMap.render(city.tilesWorked);\n\n    cityPortal.render();\n\n    return h(e('div.city-map', portalCanvas), {\n      click: () =>\n        transport.send('action', {\n          name: 'ReassignWorkers',\n          city: city.id,\n        }),\n    });\n  },\n  yieldImages = (cityYield: Yield): Node[] =>\n    new Array(Math.abs(cityYield.value))\n      .fill(0)\n      .map(() =>\n        e(\n          'span.yield-icon',\n          e(`img[src=\"../assets/${knownIcons[knownGroups[cityYield._]]}\"]`)\n        )\n      ),\n  renderBuildDetails = (\n    city: CityData,\n    chooseProduction: () => void,\n    completeProduction: () => void\n  ): HTMLElement => {\n    const turnsLeft = buildTurns(city);\n\n    return e(\n      'div.build',\n      e(\n        'header',\n        t(\n          `Building ${\n            city.build.building ? city.build.building.item._ : 'nothing'\n          }`\n        )\n      ),\n      h(e('button', t(city.build.building ? 'Change' : 'Choose')), {\n        click() {\n          chooseProduction();\n        },\n      }),\n      h(e('button', t('Buy')), {\n        click() {\n          completeProduction();\n        },\n      }),\n      city.build.building\n        ? e(\n            'p',\n            t(\n              `Progress ${city.build.progress.value} / ${\n                city.build.cost.value\n              } (${turnsLeft} turn${turnsLeft === 1 ? '' : 's'})`\n            )\n          )\n        : t('')\n    );\n  },\n  renderGrowth = (city: CityData): Node => {\n    const growth: CityGrowth = city.growth,\n      turnsLeft = growthTurns(city);\n\n    return e(\n      'div.growth',\n      e('header', t('Growth')),\n      e('p', t(`Size ${growth.size.toString()}`)),\n      e(\n        'p',\n        t(\n          `Progress ${city.build.progress.value} / ${\n            city.build.cost.value\n          } (${turnsLeft} turn${turnsLeft === 1 ? '' : 's'})`\n        )\n      )\n    );\n  },\n  renderImprovements = (city: CityData): Node => {\n    return e(\n      'div.improvements',\n      e(\n        'div',\n        ...city.improvements.map((improvement) =>\n          e(\n            'div',\n            t(improvement._),\n            ...city.yields\n              .filter(\n                (cityYield): cityYield is CityImprovementMaintenanceGold =>\n                  cityYield._ === 'CityImprovementMaintenanceGold'\n              )\n              .filter(\n                (cityYield) => cityYield.cityImprovement.id === improvement.id\n              )\n              .flatMap((cityYield) => yieldImages(cityYield))\n          )\n        )\n      )\n    );\n  },\n  renderGarrisonedUnits = (city: CityData): Node => {\n    return h(\n      e(\n        'div.garrisoned-units',\n        e('header', t('Garrisoned Units')),\n        e(\n          'div.units',\n          ...city.tile.units.map((unit) => new Unit(unit).element())\n        )\n      ),\n      {\n        click() {\n          const cityPlayerUnits = city.tile.units.filter(\n            (unit: UnitData) => unit.player.id === city.player.id\n          );\n\n          if (cityPlayerUnits.length === 0) {\n            return;\n          }\n\n          new InactiveUnitSelectionWindow(cityPlayerUnits);\n        },\n      }\n    );\n  },\n  renderSupportedUnits = (city: CityData): Node => {\n    return e(\n      'div.supported-units',\n      e('header', t('Supported Units')),\n      e(\n        'div.units',\n        ...city.units.map((unit) =>\n          e(\n            'span.unit',\n            new Unit(unit).element(),\n            ...city.yields\n              .filter(\n                (\n                  cityYield\n                ): cityYield is\n                  | UnitSupportFood\n                  | UnitSupportProduction\n                  | MilitaryUnhappiness =>\n                  [\n                    'UnitSupportFood',\n                    'UnitSupportProduction',\n                    'MilitaryUnhappiness',\n                  ].includes(cityYield._)\n              )\n              .filter((cityYield) => cityYield.unit.id === unit.id)\n              .flatMap((cityYield) => yieldImages(cityYield))\n          )\n        )\n      )\n    );\n  },\n  buildDetails = (\n    city: CityData,\n    portal: Portal,\n    chooseProduction: () => void,\n    completeProduction: () => void\n  ) => {\n    return e(\n      'div.city-screen',\n      e(\n        'div.top-row',\n        e(\n          'div.yield-details',\n          renderPopulation(city),\n          renderYields(city),\n          renderSupportedUnits(city)\n        ),\n        renderMap(portal, city),\n        renderImprovements(city)\n      ),\n      e(\n        'div.bottom-row',\n        renderGrowth(city),\n        e(\n          'div.tabbed-details',\n          // TODO: add a tab bar\n          e('div.info', renderGarrisonedUnits(city))\n        ),\n        renderBuildDetails(city, chooseProduction, completeProduction)\n      )\n    );\n  };\n\nexport class City extends Window {\n  #city: CityData;\n  #dataObserver: DataObserver;\n  #portal: Portal;\n\n  constructor(city: CityData, portal: Portal) {\n    super(\n      city.name,\n      buildDetails(\n        city,\n        portal,\n        () => this.changeProduction(),\n        () => this.completeProduction()\n      ),\n      {\n        size: 'maximised',\n      }\n    );\n\n    this.element().classList.add('city-screen-window');\n\n    this.#city = city;\n    this.#portal = portal;\n    this.#dataObserver = new DataObserver(\n      [\n        city.id,\n        city.build.id,\n        city.growth.id,\n        ...city.units.map((unit) => unit.id),\n      ],\n      (data: PlainObject) => {\n        const [updatedCity] = (\n          (data.player?.cities ?? []) as CityData[]\n        ).filter((cityData: CityData) => city.id === cityData.id);\n\n        // City must have been captured or destroyed\n        if (!updatedCity) {\n          this.close();\n\n          return;\n        }\n\n        this.#city = updatedCity;\n\n        this.#dataObserver.setIds([\n          updatedCity.id,\n          updatedCity.build.id,\n          updatedCity.growth.id,\n          ...updatedCity.units.map((unit) => unit.id),\n        ]);\n\n        this.update(\n          buildDetails(\n            updatedCity,\n            this.#portal,\n            () => this.changeProduction(),\n            () => this.completeProduction()\n          )\n        );\n\n        this.element().focus();\n      }\n    );\n\n    this.element().addEventListener('keydown', (event) => {\n      if (['c', 'C'].includes(event.key)) {\n        this.changeProduction();\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (['b', 'B'].includes(event.key)) {\n        this.completeProduction();\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (['Enter', 'x', 'X'].includes(event.key)) {\n        this.close();\n      }\n    });\n  }\n\n  changeProduction(): void {\n    new CityBuildSelectionWindow(this.#city.build, () =>\n      this.element().focus()\n    );\n  }\n\n  close(): void {\n    this.#dataObserver.dispose();\n\n    super.close();\n  }\n\n  completeProduction(): void {\n    if (!this.#city.build.building) {\n      return;\n    }\n\n    new ConfirmationWindow(\n      'Are you sure?',\n      `Do you want to rush building of ${this.#city.build.building.item._}`,\n      () =>\n        transport.send('action', {\n          name: 'CompleteProduction',\n          id: this.#city.id,\n        })\n    );\n  }\n}\n\nexport default City;\n", "import { BuildItem, City as CityData, CityBuild, ITransport } from '../types';\nimport { SelectionWindow, SelectionWindowActions } from './SelectionWindow';\nimport City from './City';\nimport Portal from './Portal';\n\ndeclare var transport: ITransport;\n\ntype onCompleteHandler = (hasSelected: boolean, ...args: any[]) => void;\n\nexport class CityBuildSelectionWindow extends SelectionWindow {\n  private onComplete: onCompleteHandler;\n\n  public static showCityAction = (city: CityData, portal: Portal) => ({\n    label: 'View city',\n    action(selectionWindow: SelectionWindow) {\n      selectionWindow.close();\n\n      new City(city, portal);\n    },\n  });\n  public static showCityOnMapAction = (city: CityData, portal: Portal) => ({\n    label: 'Show on map',\n    action(selectionWindow: SelectionWindow) {\n      selectionWindow.close();\n\n      portal.setCenter(city.tile.x, city.tile.y);\n    },\n  });\n\n  constructor(\n    cityBuild: CityBuild,\n    onComplete: onCompleteHandler = () => {},\n    additionalActions: SelectionWindowActions = {}\n  ) {\n    const production = cityBuild.city.yields\n        .filter((cityYield) => cityYield._ === 'Production')\n        .reduce((total, cityYield) => total + cityYield.value, 0),\n      turns = (buildItem: BuildItem) =>\n        Math.ceil(\n          (buildItem.cost.value - cityBuild.progress.value) / production\n        );\n\n    super(\n      `What would you like to build in ${cityBuild.city.name}?`,\n      cityBuild.available.map((buildItem) => ({\n        label: `${buildItem.item._} (Cost: ${buildItem.cost.value} / ${turns(\n          buildItem\n        )} turn${turns(buildItem) === 1 ? '' : 's'})`,\n        value: buildItem.item._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        transport.send('action', {\n          name: cityBuild.building === null ? 'CityBuild' : 'ChangeProduction',\n          id: cityBuild.id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.close(true);\n      },\n      null,\n      {\n        actions: additionalActions,\n        displayAll: true,\n      }\n    );\n\n    this.onComplete = onComplete;\n  }\n\n  close(hasSelected: boolean = false): void {\n    super.close();\n\n    if (hasSelected) {\n      this.onComplete(hasSelected);\n    }\n  }\n}\n\nexport default CityBuildSelectionWindow;\n", "import { CityBuild as CityBuildObject, PlayerAction } from '../../types';\nimport { e, h } from '../../lib/html';\nimport Action from './Action';\nimport CityBuildSelectionWindow from '../CityBuildSelectionWindow';\nimport Portal from '../Portal';\n\nexport class CityBuild extends Action {\n  #portal: Portal;\n\n  constructor(action: PlayerAction, portal: Portal) {\n    super(action);\n\n    this.#portal = portal;\n  }\n\n  public activate(): void {\n    new CityBuildSelectionWindow(this.value(), () => this.complete(), {\n      showCity: CityBuildSelectionWindow.showCityAction(\n        this.value().city,\n        this.#portal\n      ),\n      showCityOnMap: CityBuildSelectionWindow.showCityOnMapAction(\n        this.value().city,\n        this.#portal\n      ),\n    });\n  }\n\n  build(): void {\n    const cityBuild = this.value();\n\n    this.element().append(\n      e(\n        `button.cityBuild[title=\"What would you like to build in ${cityBuild.city.name}?\"]`\n      )\n    );\n  }\n\n  value(): CityBuildObject {\n    return super.value() as CityBuildObject;\n  }\n}\n\nexport default CityBuild;\n", "import { e } from '../../lib/html';\nimport Action from './Action';\nimport { ITransport } from '../../types';\n\ndeclare var transport: ITransport;\n\nexport class EndTurn extends Action {\n  activate(): void {\n    transport.send('action', {\n      name: 'EndTurn',\n    });\n  }\n\n  build(): void {\n    this.element().append(e(`button.endTurn[title=\"End turn\"]`));\n  }\n}\n\nexport default EndTurn;\n", "import Action from './Action';\nimport { e } from '../../lib/html';\nimport SelectionWindow from '../SelectionWindow';\nimport { ITransport, PlayerGovernment } from '../../types';\n\ndeclare var transport: ITransport;\n\nexport class Revolution extends Action {\n  public activate(): void {\n    const chooseWindow = new SelectionWindow(\n      'Choose government',\n      this.value().available.map((government) => ({\n        value: government._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        transport.send('action', {\n          name: 'Revolution',\n          id: this.value().id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.complete();\n\n        chooseWindow.close();\n      },\n      'Which government would you like to convert to?',\n      {\n        displayAll: true,\n      }\n    );\n  }\n\n  build(): void {\n    this.element().append(\n      e('button.chooseGovernment[title=\"Choose government\"]')\n    );\n  }\n\n  value(): PlayerGovernment {\n    return super.value() as PlayerGovernment;\n  }\n}\n\nexport default Revolution;\n", "import { Element, IElement } from './Element';\nimport { e, h } from '../lib/html';\nimport Action from './Actions/Action';\nimport AdjustTradeRates from './Actions/AdjustTradeRates';\nimport ChooseResearch from './Actions/ChooseResearch';\nimport CityBuild from './Actions/CityBuild';\nimport EndTurn from './Actions/EndTurn';\nimport { PlayerAction } from '../types';\nimport Portal from './Portal';\nimport Revolution from './Actions/Revolution';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    actioned: CustomEvent<Action>;\n  }\n}\n\nexport interface IActions extends IElement {\n  build(mandatoryActions: PlayerAction[], actions: PlayerAction[]): void;\n}\n\nexport class Actions extends Element implements IActions {\n  #portal: Portal;\n\n  constructor(container: HTMLElement = e('div.actions'), portal: Portal) {\n    super(container);\n\n    this.#portal = portal;\n\n    this.element().addEventListener('actioned', (event) =>\n      event.detail.element().remove()\n    );\n\n    this.element().addEventListener(\n      'keydown',\n      (event) => {\n        const currentChild = document.activeElement;\n\n        if (!this.element().contains(currentChild)) {\n          return;\n        }\n\n        const { key } = event,\n          children = Array.from(this.element().children) as HTMLElement[];\n\n        if (\n          !['ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowUp'].includes(key) ||\n          children.length === 0\n        ) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        let currentAction =\n          currentChild === this.element()\n            ? ['ArrowLeft', 'ArrowUp'].includes(key)\n              ? (currentChild.firstElementChild as HTMLElement)\n              : (currentChild.lastElementChild as HTMLElement)\n            : (currentChild as HTMLElement);\n\n        while (currentAction.parentElement !== this.element()) {\n          currentAction = currentAction.parentElement as HTMLElement;\n        }\n\n        const currentIndex = children.indexOf(currentAction);\n\n        if (['ArrowUp', 'ArrowLeft'].includes(key)) {\n          if (currentIndex > 0) {\n            children[currentIndex - 1].querySelector('button')?.focus();\n\n            return;\n          }\n\n          children.pop()!.querySelector('button')!.focus();\n\n          return;\n        }\n\n        if (['ArrowDown', 'ArrowRight'].includes(key)) {\n          if (currentIndex < children.length - 1) {\n            children[currentIndex + 1]!.querySelector('button')!.focus();\n\n            return;\n          }\n\n          children.shift()!.querySelector('button')!.focus();\n\n          return;\n        }\n      },\n      true\n    );\n  }\n\n  build(actions: PlayerAction[]): void {\n    this.empty();\n\n    actions.forEach((playerAction) => {\n      let action: Action;\n\n      switch (playerAction._) {\n        // This is handled separately so no need to worry.\n        case 'ActiveUnit':\n          return;\n\n        case 'AdjustTradeRates':\n          action = new AdjustTradeRates(playerAction);\n\n          break;\n\n        case 'ChooseResearch':\n          action = new ChooseResearch(playerAction);\n\n          break;\n\n        case 'CityBuild':\n          action = new CityBuild(playerAction, this.#portal);\n\n          break;\n\n        case 'EndTurn':\n          action = new EndTurn(playerAction);\n\n          break;\n\n        case 'Revolution':\n          action = new Revolution(playerAction);\n\n          break;\n\n        default:\n          console.log('need to handle ' + playerAction._);\n          return;\n        // throw new TypeError(`Unknown action type '${action._}'.`);\n      }\n\n      this.element().prepend(\n        h(action.element(), {\n          click: () => action.activate(),\n          keydown: ({ key }) => {\n            if (key === ' ' || key === 'Enter') {\n              action.activate();\n            }\n          },\n        })\n      );\n    });\n  }\n}\n\nexport default Actions;\n", "import { Tile, Unit } from '../../types';\nimport { Map, IMap } from '../Map';\nimport renderUnit from './lib/renderUnit';\n\nexport class Units extends Map implements IMap {\n  #activeUnit: Unit | null = null;\n\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (\n      tile.units.length > 0 &&\n      (this.#activeUnit !== null ? this.#activeUnit.tile.id !== tile.id : true)\n    ) {\n      const [unit] = tile.units.sort(\n          (a: Unit, b: Unit): number => b.defence?.value - a.defence?.value\n        ),\n        image = this.renderUnit(unit);\n\n      if (tile.units.length > 1) {\n        this.putImage(image, offsetX - this.scale(), offsetY - this.scale());\n      }\n\n      this.putImage(image, offsetX, offsetY);\n    }\n  }\n\n  protected renderUnit(unit: Unit): CanvasImageSource {\n    return renderUnit(unit);\n  }\n\n  setActiveUnit(unit: Unit | null): void {\n    this.#activeUnit = unit;\n  }\n\n  protected activeUnit(): Unit | null {\n    return this.#activeUnit;\n  }\n}\n\nexport default Units;\n", "import { IMap } from '../Map';\nimport Units from './Units';\n\nexport class ActiveUnit extends Units implements IMap {\n  render(): void {\n    this.clear();\n\n    const activeUnit = this.activeUnit();\n\n    if (activeUnit === null) {\n      return;\n    }\n\n    const { x, y } = activeUnit.tile,\n      tile = this.world().get(x, y),\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      image = this.renderUnit(activeUnit);\n\n    if (tile.units.length > 1) {\n      this.putImage(image, offsetX - this.scale(), offsetY - this.scale());\n    }\n\n    this.putImage(image, offsetX, offsetY);\n  }\n\n  update(): void {\n    this.render();\n  }\n}\n\nexport default ActiveUnit;\n", "import { Tile } from '../../types';\nimport { Map } from '../Map';\n\nexport class CityNames extends Map {\n  renderTile(tile: Tile): void {\n    if (!tile.city) {\n      return;\n    }\n\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      city = tile.city,\n      sizeOffsetX = this.tileSize() / 2,\n      sizeOffsetY = this.tileSize() * 0.75,\n      textOffsetX = this.tileSize() / 2,\n      textOffsetY = this.tileSize() * 1.6;\n\n    this.context().font = `bold ${8 * this.scale()}px sans-serif`;\n    this.context().fillStyle = 'black';\n    this.context().textAlign = 'center';\n    this.context().fillText(\n      city.growth.size.toString(),\n      offsetX + sizeOffsetX + this.scale(),\n      offsetY + sizeOffsetY\n    );\n    this.context().fillText(\n      city.name,\n      offsetX + textOffsetX + this.scale(),\n      offsetY + textOffsetY\n    );\n    this.context().fillStyle = 'white';\n    this.context().fillText(\n      city.growth.size.toString(),\n      offsetX + sizeOffsetX,\n      offsetY + sizeOffsetY - this.scale()\n    );\n    this.context().fillText(\n      city.name,\n      offsetX + textOffsetX,\n      offsetY + textOffsetY - this.scale()\n    );\n  }\n\n  update(): void {\n    this.clear();\n\n    // TODO: Could be a little smarter about this...\n    this.world()\n      .tiles()\n      .filter((tile) => !!tile.city)\n      .forEach((tile) => this.renderTile(tile));\n  }\n}\n\nexport default CityNames;\n", "import { e, t } from '../lib/html';\nimport { Yield } from '../types';\nimport Element from './Element';\n\nexport class GameDetails extends Element {\n  #turn: Yield;\n  #year: Yield;\n\n  constructor(element: HTMLElement, turn: Yield, year: Yield) {\n    super(element);\n\n    this.#turn = turn;\n    this.#year = year;\n  }\n\n  build(): void {\n    this.empty();\n\n    this.element().append(\n      e(\n        'h3',\n        e('span#year', t(this.year())),\n        e('span#turn', t(`(${this.#turn.value.toString()})`))\n      )\n    );\n  }\n\n  year(year = this.#year.value): string {\n    if (year < 0) {\n      return Math.abs(year) + ' BCE';\n    }\n\n    if (year === 0) {\n      return '1 CE';\n    }\n\n    return year + ' CE';\n  }\n}\n\nexport default GameDetails;\n", "import { ITransport, Unit } from '../types';\nimport City from './City';\nimport Portal from './Portal';\nimport SelectionWindow from './SelectionWindow';\nimport InactiveUnitSelectionWindow from './InactiveUnitSelectionWindow';\n\ndeclare var transport: ITransport;\n\nexport class GamePortal extends Portal {\n  protected bindEvents(): void {\n    this.canvas().addEventListener('click', (event) => {\n      const currentCenter = this.center();\n\n      let x = event.offsetX,\n        y = event.offsetY;\n\n      x =\n        (x - (this.canvas().width / 2 - this.tileSize())) /\n          (this.tileSize() * this.scale()) +\n        currentCenter.x;\n      y =\n        (y - (this.canvas().height / 2 - this.tileSize())) /\n          (this.tileSize() * this.scale()) +\n        currentCenter.y;\n\n      while (x < 0) {\n        x += this.world().width();\n      }\n\n      while (y < 0) {\n        y += this.world().height();\n      }\n\n      while (x > this.world().width()) {\n        x -= this.world().width();\n      }\n\n      while (y > this.world().height()) {\n        y -= this.world().height();\n      }\n\n      const tile = this.world().get(Math.trunc(x), Math.trunc(y)),\n        playerTileUnits = tile.units.filter(\n          (unit: Unit) => unit.player.id === this.playerId()\n        );\n\n      if (tile.city) {\n        new City(tile.city, this);\n      } else if (playerTileUnits.length) {\n        new InactiveUnitSelectionWindow(playerTileUnits, (unit: Unit) =>\n          this.emit('activate-unit', unit)\n        );\n\n        return;\n      }\n\n      this.setCenter(tile.x, tile.y);\n    });\n  }\n}\n\nexport default GamePortal;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    if (tile.goodyHut !== null) {\n      this.drawImage('map/hut', x, y);\n    }\n  }\n}\n\nexport default Terrain;\n", "export interface IIntervalHandler {\n  check(): void;\n  clear(): void;\n  off(handler: () => void): void;\n  on(handler: () => void): void;\n  pause(): void;\n  isPaused(): boolean;\n  resume(): void;\n}\n\nexport class IntervalHandler implements IIntervalHandler {\n  #paused: boolean = false;\n  #stack: (() => void)[] = [];\n\n  constructor(tick: number = 500) {\n    setInterval(() => this.check(), tick);\n  }\n\n  check(): void {\n    if (this.#paused) {\n      return;\n    }\n\n    this.#stack.forEach((item) => item());\n  }\n\n  clear(): void {\n    this.#stack = [];\n  }\n\n  off(handler: () => void): void {\n    this.#stack = this.#stack.filter((item) => item !== handler);\n  }\n\n  on(handler: () => void): void {\n    this.#stack.push(handler);\n  }\n\n  pause(): void {\n    this.#paused = true;\n  }\n\n  isPaused(): boolean {\n    return this.#paused;\n  }\n\n  resume(): void {\n    this.#paused = false;\n  }\n}\n\nexport default IntervalHandler;\n", "import {\n  SelectionWindow,\n  SelectionWindowOption,\n  SelectionWindowOptions,\n} from './SelectionWindow';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    selection: CustomEvent<string>;\n  }\n}\n\nexport class MandatorySelection extends SelectionWindow {\n  constructor(\n    title: string,\n    optionList: SelectionWindowOption[],\n    onChoose: (selection: string) => void,\n    body: string | Node | null = 'Please choose one of the following:',\n    options: SelectionWindowOptions = {\n      autoDisplay: false, // as we need to call display and wait for it to be complete.\n      canClose: false,\n      displayAll: false,\n    }\n  ) {\n    super(title, optionList, onChoose, body, {\n      ...options,\n      autoDisplay: false,\n      displayAll: true,\n    });\n  }\n\n  display(): Promise<string> {\n    return new Promise<string>((resolve) => {\n      this.element().addEventListener('selection', ({ detail }) =>\n        resolve(detail)\n      );\n\n      super.display();\n    });\n  }\n}\n\nexport default MandatorySelection;\n", "import { e, h, t } from '../lib/html';\nimport Element from './Element';\nimport { ITransport } from '../types';\nimport MandatorySelection from './MandatorySelection';\n\ndeclare var transport: ITransport;\n\nexport class MainMenu extends Element {\n  constructor(element: HTMLElement) {\n    super(element);\n\n    this.build();\n\n    const backgroundImage = document.querySelector(\n      '#preload img[src$=\"main-menu-bg.jpg\"]'\n    ) as HTMLImageElement;\n\n    if (backgroundImage.loading) {\n      backgroundImage.addEventListener('load', () => {\n        element.classList.add('active');\n      });\n    } else {\n      element.classList.add('active');\n    }\n  }\n\n  build() {\n    this.element().append(\n      e(\n        'nav',\n        h(e('button', t('Start a New Game')), {\n          click: () => {\n            this.disableButtons();\n\n            // TODO: This needs to be done via some `Rule`s or something and ordered via `Priority`, so that other\n            //  plugins can add items into the flow\n            (\n              [\n                () => {\n                  const numberOfPlayers = new MandatorySelection(\n                    'How many players?',\n                    [\n                      {\n                        label: '7 civilizations',\n                        value: 7,\n                      },\n                      {\n                        label: '6 civilizations',\n                        value: 6,\n                      },\n                      {\n                        label: '5 civilizations',\n                        value: 5,\n                      },\n                      {\n                        label: '4 civilizations',\n                        value: 4,\n                      },\n                      {\n                        label: '3 civilizations',\n                        value: 3,\n                      },\n                    ],\n                    (selection) =>\n                      transport.send('setOption', {\n                        name: 'players',\n                        value: selection,\n                      })\n                  );\n\n                  return numberOfPlayers.display();\n                },\n              ] as (() => Promise<any>)[]\n            )\n              .reduce(\n                (promise, menu) => promise.then(() => menu()),\n                Promise.resolve()\n              )\n              .then(() => {\n                this.remove();\n\n                transport.send('start');\n              });\n          },\n        }),\n        // h(e('button', t('Customise World')), {\n        //   click: () => {\n        //     // TODO: show options panel\n        //   },\n        // }),\n        h(e('button', t('Quit')), {\n          click: () => {\n            this.remove();\n\n            transport.send('quit');\n          },\n        })\n      )\n    );\n  }\n\n  disableButtons(): void {\n    this.element()\n      .querySelectorAll('button')\n      .forEach((button): void => button.setAttribute('disabled', ''));\n  }\n\n  remove(): void {\n    this.element().classList.remove('active');\n\n    setTimeout((): void => {\n      this.element().remove();\n    }, 2000);\n  }\n}\n\nexport default MainMenu;\n", "import Map from './Map';\nimport Portal from './Portal';\nimport World from './World';\n\nexport class Minimap {\n  #context: CanvasRenderingContext2D;\n  #element: HTMLCanvasElement;\n  #layers: Map[];\n  #portal: Portal;\n  #world: World;\n\n  constructor(\n    element: HTMLCanvasElement,\n    world: World,\n    portal: Portal,\n    ...layers: Map[]\n  ) {\n    this.#element = element;\n    this.#world = world;\n    this.#portal = portal;\n    this.#layers = layers;\n\n    this.#context = this.#element.getContext('2d')!;\n\n    this.#element.addEventListener('click', (event) => {\n      const x = event.offsetX - this.#element.offsetLeft,\n        y = event.offsetY - this.#element.offsetTop,\n        tileX = Math.ceil(\n          (x / this.#element.offsetWidth) * this.#world.width()\n        ),\n        tileY = Math.ceil(\n          (y / this.#element.offsetHeight) * this.#world.height()\n        );\n\n      this.#portal.setCenter(tileX, tileY);\n      this.update();\n    });\n  }\n\n  update(): void {\n    const targetHeight =\n      this.#layers[0].canvas().height * (190 / this.#layers[0].canvas().width);\n\n    this.#element.height = targetHeight;\n    this.#context.clearRect(0, 0, 190, targetHeight);\n\n    this.#layers.forEach((layer) =>\n      this.#context.drawImage(layer.canvas(), 0, 0, 190, targetHeight)\n    );\n\n    const [start, end] = this.#portal.visibleRange();\n\n    // TODO: draw the rectangle replicated when close to the sides\n    this.#context.lineWidth = 1;\n    this.#context.strokeStyle = '#fff';\n    this.#context.fillStyle = 'rgba(255, 255, 255, .2)';\n    this.#context.rect(\n      Math.floor((190 / this.#world.width()) * start.x),\n      Math.floor((targetHeight / this.#world.height()) * start.y),\n      Math.floor((190 / this.#world.width()) * (end.x - start.x)),\n      Math.floor((targetHeight / this.#world.height()) * (end.y - start.y))\n    );\n    this.#context.stroke();\n    this.#context.fill();\n  }\n}\n\nexport default Minimap;\n", "import NotificationWindow from './NotificationWindow';\n\nexport interface Notification {\n  message: string;\n  title?: string;\n}\n\nexport class Notifications {\n  #container: HTMLElement;\n  #notifications: Notification[] = [];\n\n  constructor(container: HTMLElement = document.body) {\n    this.#container = container;\n  }\n\n  receive(notification: Notification): void {\n    this.#notifications.push(notification);\n\n    this.check();\n  }\n\n  private check(): void {\n    const active = document.querySelector('.notificationWindow');\n\n    if (!this.#notifications.length || active) {\n      return;\n    }\n\n    const notification = this.#notifications.shift() as Notification;\n\n    this.publish(notification);\n  }\n\n  private publish(notification: Notification): void {\n    const notificationWindow = new NotificationWindow(\n      notification.title ?? 'Notification',\n      notification.message,\n      {\n        parent: this.#container,\n      }\n    );\n\n    notificationWindow.element().addEventListener('close', () => this.check());\n  }\n}\n\nexport default Notifications;\n", "import { e, t } from '../lib/html';\nimport { City, Player, Yield } from '../types';\nimport Element from './Element';\nimport { knownGroupLookup } from './lib/yieldMap';\n\nexport class PlayerDetails extends Element {\n  #player: Player;\n\n  constructor(element: HTMLElement, player: Player) {\n    super(element);\n\n    this.#player = player;\n  }\n\n  build(): void {\n    this.empty();\n\n    const { civilization, treasury, research, cities } = this.#player;\n\n    const [totalGold, totalResearch] = cities.reduce(\n        ([totalGold, totalResearch], city: City) =>\n          city.yields.reduce(\n            ([totalGold, totalResearch], cityYield: Yield) => {\n              if (cityYield._ === 'Research') {\n                return [totalGold, totalResearch + cityYield.value];\n              }\n\n              if (knownGroupLookup.Gold.includes(cityYield._)) {\n                return [totalGold + cityYield.value, totalResearch];\n              }\n\n              return [totalGold, totalResearch];\n            },\n            [totalGold, totalResearch]\n          ),\n        [0, 0]\n      ),\n      researchTurns = Math.ceil(\n        (research.cost.value - research.progress.value) / totalResearch\n      );\n\n    this.element().append(\n      e('h3', t(`${civilization.leader.name} of the ${civilization._} empire`)),\n      e(\n        'p',\n        e('strong', t('Researching')),\n        e('br'),\n        t(\n          research.researching\n            ? `${research.researching._} ${research.progress.value} / ${\n                research.cost.value\n              } (${researchTurns} turn${researchTurns === 1 ? '' : 's'})`\n            : 'Nothing'\n        )\n      ),\n      e(\n        'p',\n        e('strong', t('Treasury')),\n        e('br'),\n        t(`${treasury.value} (${totalGold} / turn)`)\n      )\n    );\n  }\n}\n\nexport default PlayerDetails;\n", "import { Unit } from '../types';\nimport { e, t } from '../lib/html';\nimport Element from './Element';\n\nexport class UnitDetails extends Element {\n  #activeUnit: Unit | null;\n\n  constructor(element: HTMLElement, activeUnit: Unit | null) {\n    super(element);\n\n    this.#activeUnit = activeUnit;\n\n    this.build();\n  }\n\n  build(): void {\n    this.empty();\n\n    if (this.#activeUnit === null) {\n      return;\n    }\n\n    this.element().append(\n      e(\n        'p',\n        t(\n          `${this.#activeUnit._} (${this.#activeUnit.tile.x}, ${\n            this.#activeUnit.tile.y\n          })`\n        )\n      ),\n      e('p', t(this.#activeUnit.city?.name ?? 'NONE')),\n      e(\n        'p',\n        t(\n          `${\n            Number.isInteger(this.#activeUnit.moves.value)\n              ? this.#activeUnit.moves.value\n              : this.#activeUnit.moves.value.toFixed(2)\n          } / ${this.#activeUnit.movement.value} moves`\n        )\n      ),\n      e(\n        'p',\n        t(\n          `A: ${this.#activeUnit.attack.value} / D: ${\n            this.#activeUnit.defence.value\n          } / V: ${this.#activeUnit.visibility.value}`\n        )\n      ),\n      e(\n        'p',\n        t(\n          `${this.#activeUnit.improvements\n            .map((improvement) => improvement._)\n            .join(', ')}`\n        )\n      ),\n      e(\n        'p',\n        t(\n          `${this.#activeUnit.tile.terrain._}${\n            this.#activeUnit.tile.terrain.features\n              ? ' ' +\n                this.#activeUnit.tile.terrain.features\n                  .map((feature) => feature._)\n                  .join(', ')\n              : ''\n          }${\n            this.#activeUnit.tile.improvements.length\n              ? ' (' +\n                this.#activeUnit.tile.improvements\n                  .map((improvement) => improvement._)\n                  .join(', ') +\n                ')'\n              : ''\n          }`\n        )\n      ),\n      e(\n        'p',\n        t(\n          `${this.#activeUnit.tile.units\n            .filter((unit) => unit !== this.#activeUnit)\n            .map((unit) => unit._)\n            .join(', ')}`\n        )\n      )\n    );\n  }\n}\n\nexport default UnitDetails;\n", "import {\n  DataPatch,\n  GameData,\n  ITransport,\n  NeighbourDirection,\n  PlainObject,\n  PlayerAction,\n  Tile,\n  Unit,\n} from './types';\nimport { e, t } from './lib/html';\nimport { reconstituteData, ObjectMap } from './lib/reconstituteData';\nimport Actions from './components/Actions';\nimport ActiveUnit from './components/Map/ActiveUnit';\nimport Cities from './components/Map/Cities';\nimport CityNames from './components/Map/CityNames';\nimport Feature from './components/Map/Feature';\nimport Fog from './components/Map/Fog';\nimport GameDetails from './components/GameDetails';\nimport GamePortal from './components/GamePortal';\nimport GoodyHuts from './components/Map/GoodyHuts';\nimport Improvements from './components/Map/Improvements';\nimport IntervalHandler from './lib/IntervalHandler';\nimport Irrigation from './components/Map/Irrigation';\nimport Land from './components/Map/Land';\nimport MainMenu from './components/MainMenu';\nimport Minimap from './components/Minimap';\nimport NotificationWindow from './components/NotificationWindow';\nimport Notifications from './components/Notifications';\nimport PlayerDetails from './components/PlayerDetails';\nimport Portal from './components/Portal';\nimport SelectionWindow from './components/SelectionWindow';\nimport Terrain from './components/Map/Terrain';\nimport UnitDetails from './components/UnitDetails';\nimport Units from './components/Map/Units';\nimport World from './components/World';\nimport Yields from './components/Map/Yields';\n\n// TODO: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//  ! Break this down and use a front-end framework? !\n//  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\ndeclare var transport: ITransport;\n\nconst options = {\n  autoEndOfTurn: true,\n};\n\ntry {\n  const notificationArea = document.getElementById(\n      'notification'\n    ) as HTMLElement,\n    mainMenuElement = document.querySelector('#mainmenu') as HTMLElement,\n    actionArea = document.getElementById('actions') as HTMLElement,\n    secondaryActionArea = document.getElementById(\n      'other-actions'\n    ) as HTMLElement,\n    gameArea = document.getElementById('game') as HTMLElement,\n    mapWrapper = document.getElementById('map') as HTMLElement,\n    mapPortal = mapWrapper.querySelector('canvas') as HTMLCanvasElement,\n    gameInfo = document.getElementById('gameDetails') as HTMLElement,\n    playerInfo = document.getElementById('playerDetails') as HTMLElement,\n    minimapCanvas = document.getElementById('minimap') as HTMLCanvasElement,\n    unitInfo = document.getElementById('unitInfo') as HTMLCanvasElement,\n    notifications = new Notifications(),\n    mainMenu = new MainMenu(mainMenuElement),\n    setActiveUnit = (\n      unit: Unit | null,\n      portal: Portal,\n      unitsMap: Units,\n      activeUnitsMap: ActiveUnit\n    ) => {\n      const unitDetails = new UnitDetails(unitInfo, unit);\n\n      activeUnit = unit;\n\n      unitDetails.build();\n\n      unitsMap.setActiveUnit(unit);\n      unitsMap.render();\n      unitsMap.setVisible(true);\n      activeUnitsMap.setActiveUnit(unit);\n      activeUnitsMap.render();\n      activeUnitsMap.setVisible(true);\n\n      if (unit === null) {\n        portal.render();\n\n        return;\n      }\n\n      lastUnit = unit;\n\n      unitsMap.update([...(lastUnit?.tile ? [lastUnit.tile] : []), unit.tile]);\n\n      if (!portal.isVisible(unit.tile.x, unit.tile.y)) {\n        portal.setCenter(unit.tile.x, unit.tile.y);\n      }\n\n      portal.render();\n    };\n\n  const tilesToRender: Tile[] = [];\n\n  let globalNotificationTimer: number | undefined,\n    lastUnit: Unit | null = null,\n    activeUnit: Unit | null = null;\n\n  transport.receive('notification', (data): void => {\n    notificationArea.innerHTML = data;\n\n    if (globalNotificationTimer) {\n      window.clearTimeout(globalNotificationTimer);\n    }\n\n    globalNotificationTimer = window.setTimeout((): void => {\n      globalNotificationTimer = undefined;\n\n      notificationArea.innerText = '';\n    }, 4000);\n  });\n\n  [\n    ['chooseCivilization', 'Choose your civilization'],\n    ['chooseLeader', 'Choose your leader'],\n  ].forEach(([channel, label]) =>\n    transport.receive(channel, (rawData) => {\n      const { choices } = reconstituteData(rawData);\n\n      new SelectionWindow(\n        label,\n        choices.map(({ _: choice }: { _: string }) => ({\n          label: choice,\n          value: choice,\n        })),\n        (choice) => transport.send(channel, choice),\n        label,\n        {\n          displayAll: true,\n        }\n      );\n    })\n  );\n\n  transport.receiveOnce('gameData', (objectMap: ObjectMap) => {\n    try {\n      const data: GameData = reconstituteData(objectMap) as GameData,\n        // @ts-ignore\n        formatter = new Intl.ListFormat();\n\n      new NotificationWindow(\n        'Welcome',\n        e(\n          'div.welcome',\n          e(\n            'p',\n            t(\n              `${data.player.civilization.leader.name}, you have risen to become leader of the ${data.player.civilization._}.`\n            )\n          ),\n          e(\n            'p',\n            t(\n              `Your people have knowledge of ${formatter.format([\n                'Irrigation',\n                'Mining',\n                'Roads',\n                ...data.player.research.complete.map((advance) => advance._),\n              ])}`\n            )\n          )\n        )\n      );\n\n      gameArea.classList.add('active');\n\n      mapPortal.width = (mapPortal.parentElement as HTMLElement).offsetWidth;\n      mapPortal.height = (mapPortal.parentElement as HTMLElement).offsetHeight;\n\n      const scale = 2,\n        world = new World(data.player.world);\n\n      let activeUnits: PlayerAction[] = [];\n\n      const intervalHandler = new IntervalHandler();\n\n      const portal = new GamePortal(\n          world,\n          mapPortal,\n          {\n            playerId: data.player.id,\n            // TODO: this needs to be a user-controllable item\n            scale,\n            // TODO: this needs to come from the theme\n            tileSize: 16,\n          },\n          Land,\n          Irrigation,\n          Terrain,\n          Improvements,\n          Feature,\n          GoodyHuts,\n          Fog,\n          Yields,\n          Units,\n          Cities,\n          CityNames,\n          ActiveUnit\n        ),\n        landMap = portal.getLayer(Land) as Land,\n        yieldsMap = portal.getLayer(Yields) as Yields,\n        unitsMap = portal.getLayer(Units) as Units,\n        citiesMap = portal.getLayer(Cities) as Cities,\n        cityNamesMap = portal.getLayer(CityNames) as CityNames,\n        activeUnitsMap = portal.getLayer(ActiveUnit) as ActiveUnit;\n\n      yieldsMap.setVisible(false);\n\n      const minimap = new Minimap(\n          minimapCanvas,\n          world,\n          portal,\n          landMap,\n          citiesMap\n        ),\n        primaryActions = new Actions(actionArea, portal),\n        secondaryActions = new Actions(secondaryActionArea, portal);\n\n      portal.on('focus-changed', () => minimap.update());\n      portal.on('activate-unit', (unit) =>\n        setActiveUnit(unit, portal, unitsMap, activeUnitsMap)\n      );\n\n      intervalHandler.on(() => {\n        activeUnitsMap.setVisible(!activeUnitsMap.isVisible());\n\n        portal.build(tilesToRender.splice(0));\n        portal.render();\n      });\n\n      window.addEventListener('resize', () => {\n        mapPortal.width = (mapPortal.parentElement as HTMLElement).offsetWidth;\n        mapPortal.height = (\n          mapPortal.parentElement as HTMLElement\n        ).offsetHeight;\n      });\n\n      // This needs wrapping.\n      let lastTurn = 1,\n        clearNextTurn = false;\n\n      const handler = (objectMap: ObjectMap): void => {\n        let orphanIds: string[] | null = clearNextTurn ? [] : null;\n\n        // TODO: look into if it's possible to have data reconstituted in a worker thread\n        const data: GameData = reconstituteData(\n          objectMap,\n          orphanIds\n        ) as GameData;\n\n        // A bit crude, I'd like to run this as as background job too\n        if (orphanIds) {\n          // clean up orphan data - late game there can be tens of thousands of these to clean up\n          ((orphanIds) => {\n            const maxCount = 1000,\n              delay = 200;\n\n            for (\n              let i = 0, max = Math.ceil(orphanIds.length / maxCount);\n              i < max;\n              i++\n            ) {\n              setTimeout(\n                () =>\n                  orphanIds\n                    .slice(i * maxCount, (i + 1) * maxCount - 1)\n                    .forEach((id) => delete objectMap.objects[id]),\n                (i + 1) * delay\n              );\n            }\n          })(orphanIds);\n\n          clearNextTurn = false;\n        }\n\n        document.dispatchEvent(\n          new CustomEvent('dataupdated', {\n            detail: {\n              data,\n            },\n          })\n        );\n\n        if (lastTurn !== data.turn.value) {\n          clearNextTurn = true;\n          lastTurn = data.turn.value;\n        }\n\n        primaryActions.build(data.player.mandatoryActions);\n        secondaryActions.build(\n          data.player.actions.filter((action: PlayerAction) =>\n            ['AdjustTradeRates', 'Revolution'].includes(action._)\n          )\n        );\n\n        gameArea.append(primaryActions.element());\n\n        world.setTiles(data.player.world.tiles);\n\n        const gameDetails = new GameDetails(gameInfo, data.turn, data.year);\n\n        gameDetails.build();\n\n        const playerDetails = new PlayerDetails(playerInfo, data.player);\n\n        playerDetails.build();\n\n        activeUnits = data.player.actions.filter(\n          (action: PlayerAction): boolean => action._ === 'ActiveUnit'\n        );\n\n        // This prioritises units that are already on screen\n        const [activeUnitAction] = activeUnits.sort(\n          ({ value: unitA }, { value: unitB }): number =>\n            unitB === lastUnit\n              ? 1\n              : unitA === lastUnit\n              ? -1\n              : (portal.isVisible(\n                  (unitB as Unit).tile.x,\n                  (unitB as Unit).tile.y\n                )\n                  ? 1\n                  : 0) -\n                (portal.isVisible(\n                  (unitA as Unit).tile.x,\n                  (unitA as Unit).tile.y\n                )\n                  ? 1\n                  : 0)\n        );\n\n        if (lastUnit !== activeUnitAction?.value) {\n          lastUnit = null;\n        }\n\n        setActiveUnit(\n          lastUnit?.active\n            ? lastUnit\n            : activeUnitAction\n            ? (activeUnitAction.value as Unit)\n            : null,\n          portal,\n          unitsMap,\n          activeUnitsMap\n        );\n\n        // ensure UI looks responsive\n        portal.build(tilesToRender.splice(0));\n        portal.render();\n\n        minimap.update();\n\n        if (\n          options.autoEndOfTurn &&\n          data.player.mandatoryActions.length === 1 &&\n          data.player.mandatoryActions.every((action) => action._ === 'EndTurn')\n        ) {\n          transport.send('action', {\n            name: 'EndTurn',\n          });\n\n          return;\n        }\n      };\n\n      handler(objectMap);\n\n      transport.receive('gameData', (data) => {\n        console.log('gameData called again');\n\n        handler(data);\n      });\n\n      const pathToParts = (path: string) =>\n          path.replace(/]/g, '').split(/[.[]/),\n        getPenultimateObject = (\n          object: PlainObject,\n          path: string\n        ): [PlainObject, string | undefined] => {\n          const parts = pathToParts(path),\n            lastPart = parts.pop();\n\n          const tmpObj = parts.reduce((tmpObj, part) => {\n            if (!tmpObj || !(part in tmpObj)) {\n              return null;\n            }\n\n            return tmpObj[part];\n          }, object);\n\n          return [tmpObj, lastPart];\n        },\n        setObjectPath = (\n          object: PlainObject,\n          path: string,\n          value: any\n        ): void => {\n          const [tmpObj, lastPart] = getPenultimateObject(object, path);\n\n          if (!tmpObj || !lastPart) {\n            console.warn(`unable to set ${path} of ${object} (${lastPart})`);\n            return;\n          }\n\n          tmpObj[lastPart] = value;\n        },\n        removeObjectPath = (object: PlainObject, path: string): void => {\n          const [tmpObj, lastPart] = getPenultimateObject(object, path);\n\n          if (!tmpObj || !lastPart) {\n            console.warn(`unable to set ${path} of ${object} (${lastPart})`);\n            return;\n          }\n\n          delete tmpObj[lastPart];\n        };\n\n      transport.receive('gameDataPatch', (data: DataPatch[]) => {\n        data.forEach((patch) =>\n          Object.entries(patch).forEach(([key, { type, index, value }]) => {\n            if (type === 'add' || type === 'update') {\n              if (!value!.hierarchy) {\n                console.error('No hierarchy');\n                console.error(value);\n\n                return;\n              }\n\n              if (index) {\n                setObjectPath(objectMap.objects[key], index, value!.hierarchy);\n              } else {\n                objectMap.objects[key] = value!.hierarchy;\n              }\n\n              document.dispatchEvent(\n                new CustomEvent('patchdatareceived', {\n                  detail: {\n                    value,\n                  },\n                })\n              );\n\n              Object.entries(value!.objects as PlainObject).forEach(\n                ([key, value]) => {\n                  objectMap.objects[key] = value;\n\n                  if (value._ === 'PlayerTile') {\n                    // Since we only use tilesToRender for x and y this should be fine...\n                    tilesToRender.push(value);\n                  }\n                }\n              );\n            }\n\n            if (type === 'remove') {\n              if (index) {\n                removeObjectPath(objectMap.objects[key], index);\n\n                return;\n              }\n\n              delete objectMap.objects[key];\n            }\n          })\n        );\n\n        handler(objectMap);\n      });\n\n      transport.receive('gameNotification', (data): void =>\n        notifications.receive(data)\n      );\n\n      const keyToActionsMap: {\n          [key: string]: string[];\n        } = {\n          ' ': ['NoOrders'],\n          b: ['FoundCity'],\n          D: ['Disband'],\n          f: ['Fortify', 'BuildFortress'],\n          i: ['BuildIrrigation', 'ClearForest', 'ClearSwamp', 'ClearJungle'],\n          m: ['BuildMine', 'PlantForest'],\n          P: ['Pillage'],\n          r: ['BuildRoad', 'BuildRailroad'],\n          s: ['Sleep'],\n          u: ['Unload'],\n          w: ['Wait'],\n        },\n        directionKeyMap: { [key: string]: NeighbourDirection } = {\n          ArrowUp: 'n',\n          PageUp: 'ne',\n          ArrowRight: 'e',\n          PageDown: 'se',\n          ArrowDown: 's',\n          End: 'sw',\n          ArrowLeft: 'w',\n          Home: 'nw',\n        },\n        directionKeyMapNumpad: { [key: string]: NeighbourDirection } = {\n          8: 'n',\n          9: 'ne',\n          6: 'e',\n          3: 'se',\n          2: 's',\n          1: 'sw',\n          4: 'w',\n          7: 'nw',\n        },\n        directionKeyTypeMap: { [key: string]: { [key: string]: string } } = {\n          [KeyboardEvent.DOM_KEY_LOCATION_STANDARD]: directionKeyMap,\n          [KeyboardEvent.DOM_KEY_LOCATION_NUMPAD]: directionKeyMapNumpad,\n        };\n\n      let lastKey = '';\n\n      document.addEventListener('keydown', (event) => {\n        if (activeUnit) {\n          if (event.key in keyToActionsMap) {\n            const actions = [...keyToActionsMap[event.key]];\n\n            while (actions.length) {\n              const actionName = actions.shift(),\n                [unitAction] = activeUnit.actions.filter(\n                  (action): boolean => action._ === actionName\n                );\n\n              if (unitAction) {\n                transport.send('action', {\n                  name: 'ActiveUnit',\n                  id: activeUnit.id,\n                  unitAction: unitAction._,\n                  target: unitAction.to.id,\n                });\n\n                event.stopPropagation();\n                event.preventDefault();\n\n                return;\n              }\n            }\n          }\n\n          // if (event.key in directionKeyTypeMap[event.location]) {\n          if (event.key in directionKeyMap) {\n            const [unitAction] =\n              activeUnit.actionsForNeighbours[directionKeyMap[event.key]];\n\n            if (unitAction) {\n              transport.send('action', {\n                name: 'ActiveUnit',\n                id: activeUnit.id,\n                unitAction: unitAction._,\n                target: unitAction.to.id,\n              });\n\n              event.stopPropagation();\n              event.preventDefault();\n\n              return;\n            }\n          }\n        }\n\n        if (event.key === 'Escape' && document.activeElement !== null) {\n          (document.activeElement as HTMLElement).blur();\n\n          return;\n        }\n\n        if (\n          event.key === 'Enter' &&\n          data.player.mandatoryActions.some(\n            (action) => action._ === 'EndOfTurn'\n          )\n        ) {\n          transport.send('action', {\n            name: 'EndTurn',\n          });\n\n          event.stopPropagation();\n          event.preventDefault();\n\n          return;\n        }\n\n        if (event.key === 'Tab') {\n          const topAction = actionArea.querySelector(\n            'div.action:first-child button'\n          ) as HTMLButtonElement | null;\n\n          if (topAction !== null) {\n            topAction.focus();\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            return;\n          }\n        }\n\n        if (event.key === 'c' && activeUnit) {\n          portal.setCenter(activeUnit.tile.x, activeUnit.tile.y);\n\n          portal.render();\n          minimap.update();\n\n          return;\n        }\n\n        if (event.key === 'w' && activeUnit && activeUnits.length > 1) {\n          const units = activeUnits.map(\n              (unitAction) => unitAction.value as Unit\n            ),\n            current = units.indexOf(activeUnit),\n            unit = units[current === units.length - 1 ? 0 : current + 1];\n\n          setActiveUnit(unit, portal, unitsMap, activeUnitsMap);\n        }\n\n        if (event.key === 't') {\n          unitsMap.setVisible(!unitsMap.isVisible());\n          citiesMap.setVisible(!citiesMap.isVisible());\n          cityNamesMap.setVisible(!cityNamesMap.isVisible());\n\n          portal.render();\n\n          return;\n        }\n\n        if (event.key === 'y') {\n          yieldsMap.setVisible(!yieldsMap.isVisible());\n\n          portal.render();\n\n          return;\n        }\n\n        if (lastKey === '%' && event.key === '^') {\n          transport.send('cheat', { name: 'RevealMap' });\n\n          return;\n        }\n\n        lastKey = event.key;\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  });\n} catch (e) {\n  console.error(e);\n}\n"],
  "mappings": "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",
  "names": ["require_eventemitter3", "__commonJSMin", "exports", "module", "has", "prefix", "Events", "EE", "fn", "context", "once", "addListener", "emitter", "event", "listener", "evt", "clearEvent", "EventEmitter", "names", "events", "name", "handlers", "i", "l", "ee", "listeners", "a1", "a2", "a3", "a4", "a5", "len", "args", "length", "j", "parseSelector", "selector", "classes", "attributes", "strings", "element", "string", "part", "_a", "match", "id", "t", "e", "nodes", "a", "a", "element", "attributes", "name", "value", "h", "handlers", "eventName", "handler", "reconstituteData", "hierarchy", "objects", "orphanIds", "seenObjects", "id", "getReferences", "value", "updated", "key", "childValue", "_element", "Element", "element", "e", "__privateAdd", "__privateSet", "args", "__privateGet", "Element_default", "_action", "_element", "Action", "action", "__privateAdd", "__privateSet", "e", "__privateGet", "event", "Action_default", "template", "label", "value", "e", "t", "_label", "_range", "_number", "_lock", "_listeners", "LockedSlider", "Element_default", "currentValue", "__privateAdd", "__privateSet", "__privateGet", "handler", "listener", "LockedSlider_default", "_sliders", "LockedSliderGroup", "sliders", "__privateAdd", "__privateSet", "__privateGet", "slider", "otherSliders", "otherSlider", "otherActiveSliders", "overage", "chunk", "remaining", "total", "LockedSliderGroup_default", "_parent", "TransientElement", "Element", "parent", "element", "e", "__privateAdd", "event", "__privateSet", "__privateGet", "TransientElement_default", "defaultOptions", "_body", "_title", "Window", "TransientElement_default", "title", "body", "options", "_a", "e", "__privateAdd", "__privateSet", "dimension", "value", "axis", "property", "headerActions", "h", "t", "show", "element", "__privateGet", "event", "focus", "content", "Window_default", "_sliderGroup", "AdjustTradeRates", "Action_default", "__privateAdd", "sliders", "Window_default", "e", "tradeRate", "slider", "LockedSlider_default", "__privateGet", "__privateSet", "LockedSliderGroup_default", "AdjustTradeRates_default", "notificationQueue", "_options", "_NotificationWindow", "Window", "title", "body", "passedOptions", "options", "__privateAdd", "__privateSet", "event", "__privateGet", "notification", "focus", "resolve", "NotificationWindow", "NotificationWindow_default", "_resizeHandler", "_selectionList", "SelectionWindow", "NotificationWindow", "title", "optionList", "onChoose", "body", "options", "selectionWindow", "chooseHandler", "selection", "selectionList", "h", "e", "option", "t", "event", "label", "action", "__privateAdd", "__privateSet", "__privateGet", "select", "_a", "_b", "SelectionWindow_default", "ChooseResearch", "Action_default", "chooseWindow", "SelectionWindow_default", "advance", "selection", "e", "ChooseResearch_default", "preloadContainer", "setPreloadContainer", "preloadContainerElement", "getPreloadedImage", "path", "image", "e", "getPreloadedImage_default", "replaceColours", "image", "source", "replacement", "canvas", "e", "context", "imageData", "getColor", "input", "_a", "match", "color", "sourceColors", "replaceColors", "i", "n", "replaceColours_default", "_canvas", "_context", "_visible", "_scale", "_tileSize", "_world", "Map", "world", "scale", "tileSize", "canvas", "e", "__privateAdd", "__privateSet", "__privateGet", "setPreloadContainer", "tiles", "x", "y", "size", "offsetX", "offsetY", "tilesToUpdate", "path", "options", "_a", "_b", "image", "tile", "filter", "directions", "direction", "getPreloadedImage", "source", "replacement", "replaceColours_default", "visible", "Map_default", "Cities", "Map", "tile", "x", "y", "size", "offsetX", "offsetY", "city", "player", "civilization", "colors", "attribute", "image", "Cities_default", "ConfirmationWindow", "NotificationWindow", "title", "details", "onOK", "options", "_a", "_b", "confirmationButton", "h", "e", "t", "event", "ConfirmationWindow_default", "_handler", "_ids", "DataObserver", "ids", "handler", "__privateAdd", "__privateSet", "event", "detail", "objects", "__privateGet", "id", "DataObserver_default", "TerrainAbstract", "Map", "tilesToUpdate", "extendedTilesToUpdate", "tile", "direction", "target", "TerrainAbstract_default", "Feature", "TerrainAbstract_default", "tile", "x", "y", "feature", "Feature_default", "Fog", "TerrainAbstract_default", "tile", "x", "y", "direction", "Fog_default", "Terrain", "TerrainAbstract_default", "tile", "x", "y", "improvements", "state", "improvement", "improvementType", "improvementName", "neighbouringRoad", "adjoiningTile", "neighbouringRailroad", "direction", "size", "offsetX", "offsetY", "center", "Improvements_default", "InactiveUnitSelectionWindow", "SelectionWindow_default", "units", "onComplete", "unit", "_a", "_b", "selection", "tileUnit", "InactiveUnitSelectionWindow_default", "Terrain", "TerrainAbstract_default", "tile", "x", "y", "improvement", "Irrigation_default", "Land", "TerrainAbstract_default", "tile", "x", "y", "size", "offsetX", "offsetY", "sprite", "bitmask", "topLeftSubtileOffset", "topRightSubtileOffset", "bottomRightSubtileOffset", "bottomLeftSubtileOffset", "image", "e", "imageContext", "direction", "Land_default", "import_eventemitter3", "defaultPortalOptions", "_canvas", "_center", "_context", "_layers", "_playerId", "_scale", "_tileSize", "_world", "Portal", "world", "canvas", "e", "options", "layers", "settings", "__privateAdd", "__privateSet", "MapType", "__privateGet", "updatedTiles", "layer", "LayerType", "_a", "x", "y", "xLowerBound", "xUpperBound", "yLowerBound", "yUpperBound", "tileSize", "layerWidth", "centerX", "portalCenterX", "layerHeight", "centerY", "portalCenterY", "startX", "endX", "startY", "endY", "xRange", "yRange", "Portal_default", "Terrain", "TerrainAbstract_default", "tile", "x", "y", "adjoining", "adjoiningTile", "Terrain_default", "_unknown", "_lookupCache", "_tiles", "_height", "_width", "World", "world", "__privateAdd", "x", "y", "__privateSet", "__privateGet", "key", "index", "tile", "direction", "tiles", "World_default", "Yields", "Map_default", "tile", "x", "y", "size", "offsetX", "offsetY", "total", "tileYield", "yields", "a", "i", "offsets", "n", "Yields_default", "busyLookup", "renderUnit", "unit", "tileSize", "_a", "_b", "player", "civilization", "colors", "attribute", "unitCanvas", "replaceColours_default", "getPreloadedImage_default", "context", "improvement", "sizeOffsetX", "sizeOffsetY", "identifier", "renderUnit_default", "_scale", "Unit", "Element_default", "unit", "scale", "e", "__privateAdd", "__privateSet", "unitCanvas", "renderUnit_default", "context", "sizeX", "sizeY", "offsetX", "offsetY", "size", "__privateGet", "Unit_default", "knownGroups", "knownGroupLookup", "object", "yieldName", "group", "knownIcons", "buildTurns", "city", "cityYield", "knownGroupLookup", "total", "growthTurns", "renderPopulation", "growth", "mask", "happiness", "unhappiness", "state", "currentIndex", "e", "status", "index", "reduceYield", "type", "cityYields", "used", "free", "renderYields", "cityYieldNames", "cityYieldName", "n", "i", "yieldImages", "knownGroups", "yieldObject", "label", "value", "t", "renderMap", "portal", "portalCanvas", "cityPortal", "Portal_default", "World_default", "Land_default", "Irrigation_default", "Terrain_default", "Improvements_default", "Feature_default", "Fog_default", "Cities_default", "Yields_default", "h", "knownIcons", "renderBuildDetails", "chooseProduction", "completeProduction", "turnsLeft", "renderGrowth", "renderImprovements", "improvement", "renderGarrisonedUnits", "unit", "Unit_default", "cityPlayerUnits", "InactiveUnitSelectionWindow_default", "renderSupportedUnits", "buildDetails", "_city", "_dataObserver", "_portal", "City", "Window_default", "__privateAdd", "__privateSet", "DataObserver_default", "data", "_a", "_b", "updatedCity", "cityData", "__privateGet", "event", "CityBuildSelectionWindow_default", "ConfirmationWindow_default", "City_default", "CityBuildSelectionWindow", "SelectionWindow", "cityBuild", "onComplete", "additionalActions", "production", "cityYield", "total", "turns", "buildItem", "selection", "hasSelected", "city", "portal", "selectionWindow", "City_default", "CityBuildSelectionWindow_default", "_portal", "CityBuild", "Action_default", "action", "portal", "__privateAdd", "__privateSet", "CityBuildSelectionWindow_default", "__privateGet", "cityBuild", "e", "CityBuild_default", "EndTurn", "Action_default", "e", "EndTurn_default", "Revolution", "Action_default", "chooseWindow", "SelectionWindow_default", "government", "selection", "e", "Revolution_default", "_portal", "Actions", "Element", "container", "e", "portal", "__privateAdd", "__privateSet", "event", "_a", "currentChild", "key", "children", "currentAction", "currentIndex", "actions", "playerAction", "action", "AdjustTradeRates_default", "ChooseResearch_default", "CityBuild_default", "__privateGet", "EndTurn_default", "Revolution_default", "h", "Actions_default", "_activeUnit", "Units", "Map", "__privateAdd", "tile", "x", "y", "size", "offsetX", "offsetY", "__privateGet", "unit", "a", "b", "_a", "_b", "image", "renderUnit_default", "__privateSet", "Units_default", "ActiveUnit", "Units_default", "activeUnit", "x", "y", "tile", "size", "offsetX", "offsetY", "image", "ActiveUnit_default", "CityNames", "Map", "tile", "x", "y", "size", "offsetX", "offsetY", "city", "sizeOffsetX", "sizeOffsetY", "textOffsetX", "textOffsetY", "CityNames_default", "_turn", "_year", "GameDetails", "Element_default", "element", "turn", "year", "__privateAdd", "__privateSet", "e", "t", "__privateGet", "GameDetails_default", "GamePortal", "Portal_default", "event", "currentCenter", "x", "y", "tile", "playerTileUnits", "unit", "City_default", "InactiveUnitSelectionWindow_default", "GamePortal_default", "Terrain", "TerrainAbstract_default", "tile", "x", "y", "GoodyHuts_default", "_paused", "_stack", "IntervalHandler", "tick", "__privateAdd", "__privateGet", "item", "__privateSet", "handler", "IntervalHandler_default", "MandatorySelection", "SelectionWindow", "title", "optionList", "onChoose", "body", "options", "resolve", "detail", "MandatorySelection_default", "MainMenu", "Element_default", "element", "backgroundImage", "e", "h", "t", "MandatorySelection_default", "selection", "promise", "menu", "button", "MainMenu_default", "_context", "_element", "_layers", "_portal", "_world", "Minimap", "element", "world", "portal", "layers", "__privateAdd", "__privateSet", "__privateGet", "event", "x", "y", "tileX", "tileY", "targetHeight", "layer", "start", "end", "Minimap_default", "_container", "_notifications", "Notifications", "container", "__privateAdd", "__privateSet", "notification", "__privateGet", "active", "_a", "NotificationWindow_default", "Notifications_default", "_player", "PlayerDetails", "Element_default", "element", "player", "__privateAdd", "__privateSet", "civilization", "treasury", "research", "cities", "__privateGet", "totalGold", "totalResearch", "city", "cityYield", "knownGroupLookup", "researchTurns", "e", "t", "PlayerDetails_default", "_activeUnit", "UnitDetails", "Element_default", "element", "activeUnit", "__privateAdd", "__privateSet", "_a", "_b", "__privateGet", "e", "t", "improvement", "feature", "unit", "UnitDetails_default", "options", "notificationArea", "mainMenuElement", "actionArea", "secondaryActionArea", "gameArea", "mapWrapper", "mapPortal", "gameInfo", "playerInfo", "minimapCanvas", "unitInfo", "notifications", "Notifications_default", "mainMenu", "MainMenu_default", "setActiveUnit", "unit", "portal", "unitsMap", "activeUnitsMap", "unitDetails", "UnitDetails_default", "activeUnit", "lastUnit", "tilesToRender", "globalNotificationTimer", "data", "channel", "label", "rawData", "choices", "reconstituteData", "SelectionWindow_default", "choice", "objectMap", "formatter", "NotificationWindow_default", "e", "t", "advance", "scale", "world", "World_default", "activeUnits", "intervalHandler", "IntervalHandler_default", "GamePortal_default", "Land_default", "Irrigation_default", "Terrain_default", "Improvements_default", "Feature_default", "GoodyHuts_default", "Fog_default", "Yields_default", "Units_default", "Cities_default", "CityNames_default", "ActiveUnit_default", "landMap", "yieldsMap", "citiesMap", "cityNamesMap", "minimap", "Minimap_default", "primaryActions", "Actions_default", "secondaryActions", "lastTurn", "clearNextTurn", "handler", "orphanIds", "i", "max", "id", "action", "GameDetails_default", "PlayerDetails_default", "activeUnitAction", "unitA", "unitB", "pathToParts", "path", "getPenultimateObject", "object", "parts", "lastPart", "tmpObj", "part", "setObjectPath", "value", "removeObjectPath", "patch", "key", "type", "index", "keyToActionsMap", "directionKeyMap", "directionKeyMapNumpad", "directionKeyTypeMap", "lastKey", "event", "actions", "actionName", "unitAction", "topAction", "units", "current"]
}
