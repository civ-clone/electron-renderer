{
  "version": 3,
  "sources": ["../../node_modules/eventemitter3/index.js", "lib/html.ts", "lib/reconstituteData.ts", "components/Element.ts", "components/Actions/Action.ts", "components/LockedSlider.ts", "components/LockedSliderGroup.ts", "components/TransientElement.ts", "components/Window.ts", "components/Actions/AdjustTradeRates.ts", "components/NotificationWindow.ts", "components/SelectionWindow.ts", "components/Actions/ChooseResearch.ts", "components/Map.ts", "components/Map/Cities.ts", "components/ConfirmationWindow.ts", "lib/DataObserver.ts", "components/Map/TerrainAbstract.ts", "components/Map/Feature.ts", "components/Map/Fog.ts", "components/Map/Improvements.ts", "components/Map/Irrigation.ts", "components/Map/Land.ts", "components/Portal.ts", "components/Map/Terrain.ts", "components/World.ts", "components/Map/Yields.ts", "components/City.ts", "components/CityBuildSelectionWindow.ts", "components/Actions/CityBuild.ts", "components/Actions/EndTurn.ts", "components/Actions/Revolution.ts", "components/Actions.ts", "components/Map/Units.ts", "components/Map/ActiveUnit.ts", "components/Map/CityNames.ts", "components/GameDetails.ts", "components/GamePortal.ts", "components/Map/GoodyHuts.ts", "lib/IntervalHandler.ts", "components/MandatorySelection.ts", "components/MainMenu.ts", "components/Minimap.ts", "components/Notifications.ts", "components/PlayerDetails.ts", "components/UnitDetails.ts", "renderer.ts"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "export const parseSelector = (\n  selector: string\n): [\n  string,\n  string[],\n  {\n    [key: string]: string;\n  }\n] => {\n  const classes: string[] = [],\n    attributes: {\n      [key: string]: string;\n    } = {},\n    strings: string[] = [];\n\n  let element = 'div';\n\n  const parts = selector\n    .replace(\n      /(?!<\\\\)([\"']).+?(?!<\\\\)(\\1)/g,\n      (string) => 'string$' + (strings.push(string.slice(1, -1)) - 1)\n    )\n    .split(/(?=[.#[])/);\n\n  parts.forEach((part) => {\n    if (!part.match(/^[.#\\[]/)) {\n      element = part;\n\n      return;\n    }\n\n    if (part[0] === '.') {\n      classes.push(part.slice(1));\n\n      return;\n    }\n\n    if (part[0] === '#') {\n      attributes.id = part[0].slice(1);\n\n      return;\n    }\n\n    if (part[0] === '[') {\n      const match = part.match(/\\[([^=]+)(=([\"']?)(.+?)\\3)?]/);\n\n      if (match !== null) {\n        attributes[match[1]] = (match[4] ?? '').replace(\n          /string\\$(\\d+)/,\n          (match, id) => strings[id]\n        );\n      }\n\n      return;\n    }\n  });\n\n  return [element, classes, attributes];\n};\n\nexport const t = (string: string): Text => document.createTextNode(string);\n\nexport const e = (selector: string, ...nodes: Node[]): HTMLElement => {\n  const [element, classes, attributes] = parseSelector(selector),\n    e = document.createElement(element);\n\n  if (classes.length) {\n    e.classList.add(...classes);\n  }\n\n  a(e, attributes);\n\n  if (nodes.length) {\n    e.append(...nodes);\n  }\n\n  return e;\n};\n\nexport const a = (\n  element: HTMLElement,\n  attributes: { [key: string]: string }\n) => {\n  Object.entries(attributes).forEach(([name, value]) =>\n    element.setAttribute(name, value)\n  );\n\n  return element;\n};\n\nexport const h = <T extends HTMLElement>(\n  element: T,\n  handlers: { [key: string]: (event: any) => void }\n): T => {\n  Object.entries(handlers).forEach(([eventName, handler]): void =>\n    element.addEventListener(eventName, handler)\n  );\n\n  return element;\n};\n", "export type PlainObject = {\n  [key: string]: any;\n};\n\nexport type ObjectStore = {\n  [key: string]: PlainObject;\n};\n\nexport type ObjectMap = {\n  hierarchy: PlainObject;\n  objects: ObjectStore;\n};\n\nexport const reconstituteData = (\n  { hierarchy, objects }: ObjectMap,\n  orphanIds: string[] | null = null\n): PlainObject => {\n  const seenObjects: Map<PlainObject, PlainObject> = new Map();\n\n  if (orphanIds) {\n    Object.keys(objects).forEach((id) => orphanIds.push(id));\n  }\n\n  const getReferences = (value: any): PlainObject => {\n    if (seenObjects.has(value)) {\n      return seenObjects.get(value)!;\n    }\n\n    if (Array.isArray(value)) {\n      const updated: any[] = [];\n\n      seenObjects.set(value, updated);\n\n      value.forEach((value) => updated.push(getReferences(value)));\n\n      return updated;\n    }\n\n    if (value && value['#ref']) {\n      if (orphanIds) {\n        orphanIds.splice(orphanIds.indexOf(value['#ref']), 1);\n      }\n\n      if (!(value['#ref'] in objects)) {\n        throw new TypeError(`missing ${value['#ref']}`);\n      }\n\n      const updated = getReferences(objects[value['#ref']]);\n\n      seenObjects.set(value, updated);\n\n      return updated;\n    }\n\n    if (value instanceof Object) {\n      const updated: PlainObject = {};\n\n      seenObjects.set(value, updated);\n\n      Object.entries(value).forEach(([key, childValue]) => {\n        updated[key] = getReferences(childValue);\n      });\n\n      return updated;\n    }\n\n    return value;\n  };\n\n  return getReferences(hierarchy);\n};\n\nexport default reconstituteData;\n", "import { e } from '../lib/html';\n\nexport interface IElement {\n  build(...args: any[]): void;\n  element(): HTMLElement;\n}\n\nexport class Element implements IElement {\n  #element: HTMLElement;\n\n  constructor(element: HTMLElement = e('div')) {\n    this.#element = element;\n  }\n\n  build(...args: any[]): void {}\n\n  element(): HTMLElement {\n    return this.#element;\n  }\n\n  protected empty(): void {\n    while (this.#element.firstChild !== null) {\n      this.#element.firstChild.remove();\n    }\n  }\n}\n\nexport default Element;\n", "import {\n  CityBuild,\n  PlayerAction,\n  PlayerGovernment,\n  PlayerResearch,\n  PlayerTradeRates,\n  Unit,\n} from '../../types';\nimport { e } from '../../lib/html';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    actioned: CustomEvent<Action>;\n  }\n}\n\nexport interface IAction {\n  activate(): void;\n  build(): void;\n  complete(): void;\n  element(): HTMLElement;\n  value():\n    | CityBuild\n    | PlayerResearch\n    | Unit\n    | PlayerGovernment\n    | PlayerTradeRates;\n}\n\nexport class Action implements IAction {\n  #action: PlayerAction;\n  #element: HTMLElement;\n\n  constructor(action: PlayerAction) {\n    this.#action = action;\n    this.#element = e('div.action');\n\n    this.#element.addEventListener('keydown', (event) => {\n      if (event.key === 'Escape') {\n        return;\n      }\n\n      event.stopPropagation();\n    });\n\n    this.build();\n  }\n\n  public activate(): void {}\n\n  build(): void {}\n\n  complete(): void {\n    const event = new CustomEvent('actioned', {\n      bubbles: true,\n      detail: this,\n    });\n\n    this.#element.dispatchEvent(event);\n  }\n\n  element(): HTMLElement {\n    return this.#element;\n  }\n\n  value():\n    | CityBuild\n    | PlayerResearch\n    | Unit\n    | PlayerGovernment\n    | PlayerTradeRates {\n    return this.#action.value;\n  }\n}\n\nexport default Action;\n", "import Element from './Element';\nimport { e, t } from '../lib/html';\n\nconst template: (label: string, value: number) => HTMLFieldSetElement = (\n  label: string,\n  value: number\n) =>\n  e(\n    'fieldset',\n    e('legend', t(label)),\n    e(`input[type=\"range\"][max=\"100\"][min=\"0\"][step=\"1\"][value=\"${value}\"]`),\n    e('input[type=\"number\"]'),\n    e('label', e('input[type=\"checkbox\"]'), t('Lock'))\n  ) as HTMLFieldSetElement;\n\nexport type onInputHandler = () => void;\n\nexport class LockedSlider extends Element {\n  #label: string;\n  #range: HTMLInputElement;\n  #number: HTMLInputElement;\n  #lock: HTMLInputElement;\n  #listeners: onInputHandler[] = [];\n\n  constructor(label: string, currentValue: number) {\n    super(template(label, currentValue));\n\n    this.#label = label;\n    this.#range = this.element().querySelector(\n      'input[type=\"range\"]'\n    ) as HTMLInputElement;\n    this.#number = this.element().querySelector(\n      'input[type=\"number\"]'\n    ) as HTMLInputElement;\n    this.#lock = this.element().querySelector(\n      'input[type=\"checkbox\"]'\n    ) as HTMLInputElement;\n\n    this.build();\n  }\n\n  build(): void {\n    this.set(this.#range.value);\n\n    this.#range.addEventListener('input', () => this.set(this.#range.value));\n\n    this.#number.addEventListener('input', () => this.set(this.#number.value));\n\n    this.#lock.addEventListener('input', () => this.lock());\n\n    this.lock();\n  }\n\n  label(): string {\n    return this.#label;\n  }\n\n  private lock(): void {\n    if (this.isLocked()) {\n      this.#range.setAttribute('disabled', '');\n      this.#number.setAttribute('disabled', '');\n\n      return;\n    }\n\n    this.#range.removeAttribute('disabled');\n    this.#number.removeAttribute('disabled');\n  }\n\n  onInput(handler: onInputHandler): void {\n    this.#listeners.push(handler);\n  }\n\n  isLocked(): boolean {\n    return this.#lock.checked;\n  }\n\n  set(value: string): void {\n    value = Math.max(parseInt(value, 10), 0).toString();\n\n    if (this.#range.value !== value) {\n      this.#range.value = value;\n    }\n\n    if (this.#number.value !== value) {\n      this.#number.value = value;\n    }\n\n    this.#listeners.forEach((listener) => listener());\n  }\n\n  value(): number {\n    return parseInt(this.#range.value, 10);\n  }\n}\n\nexport default LockedSlider;\n", "import LockedSlider from './LockedSlider';\n\nexport class LockedSliderGroup {\n  #sliders;\n\n  constructor(...sliders: LockedSlider[]) {\n    this.#sliders = sliders;\n\n    this.#sliders.forEach((slider) =>\n      slider.onInput(() => {\n        if (this.total() === 100) {\n          return;\n        }\n\n        const otherSliders = this.#sliders.filter(\n            (otherSlider) => otherSlider !== slider\n          ),\n          otherActiveSliders = otherSliders.filter(\n            (slider) => !slider.isLocked()\n          );\n\n        if (this.total() !== 100 && otherActiveSliders.length === 0) {\n          slider.set((100 - this.total(otherSliders)).toString());\n\n          return;\n        }\n\n        if (this.total() > 100) {\n          let overage = this.total() - 100,\n            chunk = Math.ceil(overage / otherActiveSliders.length);\n\n          otherActiveSliders.forEach((otherSlider) => {\n            otherSlider.set(\n              (otherSlider.value() - Math.min(chunk, overage)).toString()\n            );\n\n            overage -= chunk;\n          });\n\n          if (this.total() > 100) {\n            slider.set((100 - this.total(otherSliders)).toString());\n          }\n        }\n\n        if (this.total() < 100) {\n          let remaining = 100 - this.total(),\n            chunk = Math.ceil(remaining / otherActiveSliders.length);\n\n          otherActiveSliders.forEach((otherSlider) => {\n            otherSlider.set(\n              (otherSlider.value() + Math.min(chunk, remaining)).toString()\n            );\n\n            remaining -= chunk;\n          });\n\n          if (this.total() < 100) {\n            slider.set((100 - this.total(otherSliders)).toString());\n          }\n        }\n      })\n    );\n  }\n\n  sliders(): LockedSlider[] {\n    return this.#sliders;\n  }\n\n  private total(sliders = this.#sliders): number {\n    return sliders.reduce((total, slider) => total + slider.value(), 0);\n  }\n}\n\nexport default LockedSliderGroup;\n", "import { e } from '../lib/html';\nimport { Element, IElement } from './Element';\n\nexport interface ITransientElement extends IElement {\n  display(): void;\n  parent(): HTMLElement;\n}\n\nexport class TransientElement extends Element implements ITransientElement {\n  #parent: HTMLElement;\n\n  constructor(parent: HTMLElement, element: HTMLElement = e('div')) {\n    super(element);\n\n    // capture keys in the notification window\n    this.element().addEventListener('keydown', (event: KeyboardEvent) => {\n      event.stopPropagation();\n    });\n\n    this.element().setAttribute('tabindex', '0');\n\n    this.#parent = parent;\n  }\n\n  public display(): void {\n    this.build();\n\n    this.#parent.append(this.element());\n  }\n\n  public parent(): HTMLElement {\n    return this.#parent;\n  }\n}\n\nexport default TransientElement;\n", "import { e, h, t } from '../lib/html';\nimport TransientElement, { ITransientElement } from './TransientElement';\n\nexport interface IWindow extends ITransientElement {\n  close(): void;\n  maximise(): void;\n}\n\ntype WindowSize = {\n  height: number | string;\n  width: number | string;\n};\n\ntype WindowPosition = {\n  x: number;\n  y: number;\n};\n\nexport type WindowSettings = {\n  autoDisplay: boolean;\n  canClose: boolean;\n  canMaximise: boolean;\n  canResize: boolean;\n  parent: HTMLElement;\n  position: WindowPosition | 'auto';\n  size: WindowSize | 'auto' | 'maximised';\n};\n\nexport type WindowOptions = { [K in keyof WindowSettings]?: WindowSettings[K] };\n\nconst defaultOptions: WindowSettings = {\n  autoDisplay: true,\n  canClose: true,\n  canMaximise: false,\n  canResize: false,\n  parent: document.body,\n  position: 'auto',\n  size: 'auto',\n};\n\nexport class Window extends TransientElement implements IWindow {\n  private options: WindowSettings;\n  #body: string | Node;\n  #title: string;\n\n  constructor(title: string, body: string | Node, options: WindowOptions = {}) {\n    super(options.parent ?? defaultOptions.parent, e('div.window'));\n\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.#body = body;\n    this.#title = title;\n\n    if (this.options.size === 'auto') {\n      this.element().classList.add('size-auto');\n    }\n\n    if (this.options.size === 'maximised') {\n      this.element().classList.add('maximised');\n    }\n\n    if (this.options.size !== 'auto') {\n      (['height', 'width'] as ('height' | 'width')[]).forEach((dimension) => {\n        const value = (this.options.size as WindowSize)[dimension];\n\n        if (typeof value === 'number') {\n          this.element().style[dimension] = value + 'px';\n\n          return;\n        }\n\n        this.element().style[dimension] = value;\n      });\n    }\n\n    if (this.options.position === 'auto') {\n      this.element().classList.add('position-auto');\n    }\n\n    if (this.options.position !== 'auto') {\n      (\n        [\n          ['x', 'left'],\n          ['y', 'top'],\n        ] as ['x' | 'y', 'left' | 'top'][]\n      ).forEach(([axis, property]) => {\n        this.element().style[property] =\n          Math.min(\n            0,\n            Math.max(\n              document.body.clientHeight - 20,\n              (this.options.position as WindowPosition)[axis]\n            )\n          ) + 'px';\n      });\n    }\n\n    if (this.options.autoDisplay) {\n      this.display();\n    }\n  }\n\n  public build(): void {\n    this.empty();\n\n    const headerActions: HTMLElement[] = (\n      [\n        [\n          this.options.canMaximise,\n          h(\n            e(\n              'button.maximise[aria-label=\"Maximise\"]',\n              t('Maximise'),\n              e(\n                'img.maximise[src=\"../../node_modules/feather-icons/dist/icons/maximize.svg\"][alt=\"Maximise\"]'\n              ),\n              e(\n                'img.restore[src=\"../../node_modules/feather-icons/dist/icons/minimize.svg\"][alt=\"Restore\"]'\n              )\n            ),\n            {\n              click: () => this.maximise(),\n            }\n          ),\n        ],\n        [\n          this.options.canClose,\n          h(\n            e(\n              'button.close[aria-label=\"Close\"]',\n              t('Close'),\n              e(\n                'img[src=\"../../node_modules/feather-icons/dist/icons/x.svg\"][alt=\"Close\"]'\n              )\n            ),\n            {\n              click: () => this.close(),\n            }\n          ),\n        ],\n      ] as [boolean, HTMLElement][]\n    )\n      .filter(([show]: [boolean, HTMLElement]) => show)\n      .map(([, element]) => element);\n\n    this.element().append(\n      h(e('header', e('h3', t(this.#title)), ...headerActions), {\n        dblclick: () => this.maximise(),\n      }),\n      e(\n        'div.body',\n        this.#body instanceof Node ? this.#body : e('p', t(this.#body))\n      )\n    );\n\n    this.element().addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && this.options.canClose) {\n        this.close();\n      }\n\n      // Capture all keypresses whilst this is focused\n      event.stopPropagation();\n    });\n  }\n\n  public close(): void {\n    this.element().remove();\n\n    this.element().dispatchEvent(new CustomEvent('close'));\n  }\n\n  public display(focus = true): void {\n    super.display();\n\n    if (!focus) {\n      return;\n    }\n\n    this.element().focus();\n  }\n\n  public maximise(): void {\n    if (!this.options.canMaximise) {\n      return;\n    }\n\n    this.element().classList.toggle('maximised');\n  }\n\n  public update(content: string | Node): void {\n    this.element().lastElementChild!.remove();\n\n    this.element().append(\n      content instanceof Node ? content : e('p', t(content))\n    );\n  }\n}\n\nexport default Window;\n", "import { ITransport, PlayerTradeRates } from '../../types';\nimport Action from './Action';\nimport LockedSlider from '../LockedSlider';\nimport LockedSliderGroup from '../LockedSliderGroup';\nimport Window from '../Window';\nimport { e } from '../../lib/html';\n\ndeclare var transport: ITransport;\n\nexport class AdjustTradeRates extends Action {\n  #sliderGroup: LockedSliderGroup | undefined;\n\n  public activate(): void {\n    const sliders: LockedSlider[] = [];\n\n    const window = new Window(\n      'Adjust trade rates',\n      e(\n        'div',\n        ...this.value().all.map((tradeRate) => {\n          const slider = new LockedSlider(tradeRate._, tradeRate.value * 100);\n\n          sliders.push(slider);\n\n          return slider.element();\n        })\n      )\n    );\n\n    window.element().addEventListener('close', () => {\n      transport.send('action', {\n        name: 'AdjustTradeRates',\n        id: this.value().id,\n        value: this.#sliderGroup!.sliders().map((slider) => [\n          slider.label(),\n          parseFloat((slider.value() / 100).toFixed(2)),\n        ]),\n      });\n    });\n\n    this.#sliderGroup = new LockedSliderGroup(...sliders);\n  }\n\n  build(): void {\n    this.element().append(\n      e('button.adjustTradeRates[title=\"Adjust trade rates\"]')\n    );\n  }\n\n  value(): PlayerTradeRates {\n    return super.value() as PlayerTradeRates;\n  }\n}\n\nexport default AdjustTradeRates;\n", "import { Window, IWindow, WindowOptions } from './Window';\n\nexport interface INotificationWindow extends IWindow {}\n\nconst notificationQueue: [\n  NotificationWindow,\n  boolean,\n  (...args: any[]) => void\n][] = [];\n\nexport interface NotificationWindowOptions extends WindowOptions {\n  queue?: boolean;\n}\n\nexport class NotificationWindow extends Window implements INotificationWindow {\n  #options: NotificationWindowOptions = {};\n\n  constructor(\n    title: string,\n    body: string | Node,\n    passedOptions: NotificationWindowOptions = {}\n  ) {\n    const options = {\n      queue: true,\n      ...passedOptions,\n    };\n\n    super(title, body, options);\n\n    this.#options = options;\n\n    this.element().classList.add('notificationWindow');\n\n    this.element().addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.close();\n\n        event.stopPropagation();\n      }\n    });\n  }\n\n  close(): void {\n    super.close();\n\n    if (\n      this.#options.queue &&\n      notificationQueue.length &&\n      NotificationWindow.hasOpenWindow()\n    ) {\n      const [notification, focus, resolve] = notificationQueue.shift()!;\n\n      notification.display(focus);\n\n      resolve();\n    }\n  }\n\n  display(focus = true): Promise<any> {\n    return new Promise((resolve) => {\n      if (NotificationWindow.hasOpenWindow()) {\n        notificationQueue.push([this, focus, resolve]);\n\n        return;\n      }\n\n      super.display();\n\n      if (!focus) {\n        resolve(undefined);\n\n        return;\n      }\n\n      this.element().focus();\n\n      resolve(undefined);\n    });\n  }\n\n  public static hasOpenWindow(): boolean {\n    return !!document.querySelector('div.notificationWindow');\n  }\n}\n\nexport default NotificationWindow;\n", "import { e, h, t } from '../lib/html';\nimport {\n  NotificationWindow,\n  NotificationWindowOptions,\n} from './NotificationWindow';\n\nexport interface SelectionWindowOption {\n  label?: string;\n  value: any;\n}\n\nexport interface SelectionWindowAction {\n  label: string;\n  action: (select: SelectionWindow) => void;\n}\n\nexport interface SelectionWindowActions {\n  [key: string]: SelectionWindowAction;\n}\n\nexport interface SelectionWindowOptions extends NotificationWindowOptions {\n  actions?: SelectionWindowActions;\n  autoFocus?: boolean;\n  displayAll?: boolean;\n}\n\nexport class SelectionWindow extends NotificationWindow {\n  #resizeHandler = () => this.resize();\n  #selectionList: HTMLSelectElement;\n\n  constructor(\n    title: string,\n    optionList: SelectionWindowOption[],\n    onChoose: (selection: string) => void,\n    body: string | Node | null = 'Please choose one of the following:',\n    options: SelectionWindowOptions = {}\n  ) {\n    options = {\n      autoFocus: true,\n      displayAll: false,\n      ...options,\n      actions: {\n        primary: {\n          label: 'OK',\n          action: (selectionWindow) =>\n            chooseHandler(selectionWindow.selectionList().value),\n        },\n        ...options.actions,\n      },\n    };\n\n    const chooseHandler = (selection: string): void => {\n        this.element().dispatchEvent(\n          new CustomEvent<string>('selection', {\n            detail: selection,\n          })\n        );\n\n        this.close();\n\n        onChoose(selection);\n      },\n      selectionList: HTMLSelectElement = h(\n        e(\n          'select',\n          ...optionList.map((option) =>\n            e(\n              `option[value=\"${option.value}\"]`,\n              t(option.label || option.value)\n            )\n          )\n        ) as HTMLSelectElement,\n        {\n          keydown: (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n              chooseHandler(selectionList.value);\n            }\n          },\n          dblclick: () => chooseHandler(selectionList.value),\n        }\n      );\n\n    if (options.displayAll && optionList.length > 1) {\n      selectionList.setAttribute('size', optionList.length.toString());\n    }\n\n    if (options.autoFocus) {\n      selectionList.setAttribute('autofocus', '');\n    }\n\n    super(\n      title,\n      e(\n        'div',\n        ...(body instanceof Node\n          ? [body]\n          : body === null\n          ? []\n          : [e('p', t(body))]),\n        selectionList,\n        e(\n          'footer',\n          ...Object.entries(options.actions!).map(([, { label, action }]) =>\n            h(e('button', t(label)), {\n              click: () => action(this),\n              keydown: (event) => {\n                if (event.key === 'Enter') {\n                  action(this);\n                }\n              },\n            })\n          )\n        )\n      )\n    );\n\n    this.element().classList.add('selectionWindow');\n    this.#selectionList = selectionList;\n\n    this.resize();\n\n    window.addEventListener('resize', this.#resizeHandler);\n  }\n\n  close() {\n    window.removeEventListener('resize', this.#resizeHandler);\n\n    super.close();\n  }\n\n  display(): Promise<any> {\n    return super.display(false).then(() => {\n      const select = this.element().querySelector('select');\n\n      if (select && select.hasAttribute('autofocus')) {\n        select.focus();\n      }\n    });\n  }\n\n  resize(): void {\n    // TODO: I'd like to have this height scaled automatically.\n    //  Feels like it should be possible using CSS flexbox, but can't get it to work...\n    try {\n      this.selectionList().style.maxHeight = 'none';\n      this.selectionList().style.maxHeight = `calc(${\n        this.element().offsetHeight -\n        3 -\n        (this.element().firstElementChild! as HTMLElement).offsetHeight -\n        ((this.selectionList().previousElementSibling as HTMLElement)\n          ?.offsetHeight ?? 0) -\n        (this.selectionList().nextElementSibling as HTMLElement).offsetHeight\n      }px - 2em)`;\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  selectionList(): HTMLSelectElement {\n    return this.#selectionList;\n  }\n}\n\nexport default SelectionWindow;\n", "import Action from './Action';\nimport { e } from '../../lib/html';\nimport SelectionWindow from '../SelectionWindow';\nimport { ITransport, PlayerResearch } from '../../types';\n\ndeclare var transport: ITransport;\n\nexport class ChooseResearch extends Action {\n  public activate(): void {\n    const chooseWindow = new SelectionWindow(\n      'Choose research',\n      this.value().available.map((advance) => ({\n        value: advance._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        transport.send('action', {\n          name: 'ChooseResearch',\n          id: this.value().id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.complete();\n\n        chooseWindow.close();\n      },\n      'Which advance would you like to research next?',\n      {\n        displayAll: true,\n      }\n    );\n  }\n\n  build(): void {\n    this.element().append(e('button.chooseResearch[title=\"Choose research\"]'));\n  }\n\n  value(): PlayerResearch {\n    return super.value() as PlayerResearch;\n  }\n}\n\nexport default ChooseResearch;\n", "import { e } from '../lib/html';\nimport { NeighbourDirection, Tile } from '../types';\nimport World from './World';\n\nexport interface IMap {\n  context(): CanvasRenderingContext2D;\n  render(...args: any[]): void;\n  scale(): number;\n  tileSize(): number;\n  world(): World;\n}\n\ninterface DrawImageOptions {\n  augment?: (image: CanvasImageSource) => CanvasImageSource;\n  offsetX?: number;\n  offsetY?: number;\n}\n\nexport class Map implements IMap {\n  #canvas: HTMLCanvasElement;\n  #context: CanvasRenderingContext2D;\n  #visible: boolean = true;\n  #preload: HTMLElement;\n  #scale: number;\n  #tileSize: number;\n  #world: World;\n\n  constructor(\n    world: World,\n    scale: number = 2,\n    tileSize: number = 16,\n    canvas: HTMLCanvasElement = e('canvas') as HTMLCanvasElement\n  ) {\n    this.#canvas = canvas;\n    this.#world = world;\n    this.#tileSize = tileSize;\n    this.#scale = scale;\n\n    this.setCanvasSize();\n\n    this.#context = this.#canvas.getContext('2d') as CanvasRenderingContext2D;\n    this.#preload = document.querySelector('#preload') as HTMLElement;\n  }\n\n  canvas(): HTMLCanvasElement {\n    return this.#canvas;\n  }\n\n  clear(): void {\n    this.context().clearRect(0, 0, this.canvas().width, this.canvas().height);\n  }\n\n  context(): CanvasRenderingContext2D {\n    return this.#context;\n  }\n\n  render(tiles: Tile[] = this.world().tiles()): void {\n    this.clear();\n\n    tiles.forEach(({ x, y }: Tile) => this.renderTile(this.world().get(x, y)));\n  }\n\n  renderTile({ x, y }: Tile): void {\n    const size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    this.context().clearRect(offsetX, offsetY, size, size);\n  }\n\n  scale(): number {\n    return this.#scale;\n  }\n\n  tileSize(): number {\n    return this.#tileSize * this.#scale;\n  }\n\n  update(tilesToUpdate: Tile[]): void {\n    tilesToUpdate.forEach(({ x, y }: Tile) =>\n      this.renderTile(this.world().get(x, y))\n    );\n  }\n\n  world(): World {\n    return this.#world;\n  }\n\n  protected drawImage(\n    path: string,\n    x: number,\n    y: number,\n    options: DrawImageOptions = {}\n  ): void {\n    const size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      image = this.getPreloadedImage(path);\n\n    this.putImage(\n      options.augment ? options.augment(image) : image,\n      offsetX + (options.offsetX ?? 0),\n      offsetY + (options.offsetY ?? 0)\n    );\n  }\n\n  protected filterNeighbours(\n    tile: Tile,\n    filter: (tile: Tile) => boolean,\n    directions: NeighbourDirection[] = ['n', 'e', 's', 'w']\n  ): NeighbourDirection[] {\n    return directions.filter((direction: NeighbourDirection): boolean =>\n      filter(this.#world.getNeighbour(tile, direction))\n    );\n  }\n\n  protected getPreloadedImage(path: string): CanvasImageSource {\n    const image = this.#preload.querySelector(`[src$=\"${path}.png\"]`);\n\n    if (image === null) {\n      console.error(`Missing image: ${path}.`);\n\n      return e('canvas') as HTMLCanvasElement;\n    }\n\n    return image as HTMLImageElement;\n  }\n\n  protected putImage(\n    image: CanvasImageSource,\n    offsetX: number,\n    offsetY: number\n  ): void {\n    this.#context.imageSmoothingEnabled = false;\n\n    this.#context.drawImage(\n      image,\n      offsetX,\n      offsetY,\n      (image.width as number) * this.#scale,\n      (image.height as number) * this.#scale\n    );\n  }\n\n  protected replaceColors(\n    image: CanvasImageSource,\n    source: string[],\n    replacement: string[]\n  ) {\n    const canvas = e('canvas') as HTMLCanvasElement,\n      context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    canvas.width = image.width as number;\n    canvas.height = image.height as number;\n\n    context.drawImage(\n      image,\n      0,\n      0,\n      image.width as number,\n      image.height as number\n    );\n\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height),\n      getColor = (input: string | number[]) => {\n        let match: RegExpMatchArray | null = null,\n          color: { r: number; g: number; b: number; a: number } = {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 0,\n          };\n\n        if (typeof input === 'string') {\n          if (\n            (match = input.match(\n              /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i\n            )) !== null\n          ) {\n            color = {\n              r: parseInt(match[1], 16),\n              g: parseInt(match[2], 16),\n              b: parseInt(match[3], 16),\n              a: 1,\n            };\n          } else if (\n            (match = input.match(\n              /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/\n            )) !== null\n          ) {\n            color = {\n              r: parseInt(match[1] + match[1], 16),\n              g: parseInt(match[2] + match[2], 16),\n              b: parseInt(match[3] + match[3], 16),\n              a: 1,\n            };\n          } else if (\n            (match = input.match(\n              /^rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/\n            )) !== null\n          ) {\n            color = {\n              r: parseInt(match[1]),\n              g: parseInt(match[2]),\n              b: parseInt(match[3]),\n              a: 1,\n            };\n          } else if (\n            (match = input.match(\n              /^rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)\\s*\\)\\s*$/\n            )) !== null\n          ) {\n            color = {\n              r: parseInt(match[1]),\n              g: parseInt(match[2]),\n              b: parseInt(match[3]),\n              a: parseFloat(match[4] ?? 1),\n            };\n          }\n        } else if ('length' in input) {\n          color = {\n            r: input[0] || 0,\n            g: input[1] || 0,\n            b: input[2] || 0,\n            a: input[3] || 1,\n          };\n        }\n\n        return color;\n      };\n\n    let sourceColors = source.map(getColor),\n      replaceColors = replacement.map(getColor);\n\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      sourceColors.forEach((color, n) => {\n        if (\n          imageData.data[i] === color.r &&\n          imageData.data[i + 1] === color.g &&\n          imageData.data[i + 2] === color.b &&\n          imageData.data[i + 3] === color.a * 255\n        ) {\n          imageData.data[i] = (replaceColors[n] || replaceColors[0]).r;\n          imageData.data[i + 1] = (replaceColors[n] || replaceColors[0]).g;\n          imageData.data[i + 2] = (replaceColors[n] || replaceColors[0]).b;\n          imageData.data[i + 3] = Math.trunc(\n            (replaceColors[n] || replaceColors[0]).a * 255\n          );\n        }\n      });\n    }\n\n    context.putImageData(imageData, 0, 0);\n\n    return canvas;\n  }\n\n  protected setCanvasSize(): void {\n    this.#canvas.height = this.#world.height() * this.tileSize();\n    this.#canvas.width = this.#world.width() * this.tileSize();\n    // this.#canvas.setAttribute('height', this.#canvas.height.toString());\n    // this.#canvas.setAttribute('width',this.#canvas.width.toString());\n  }\n\n  isVisible(): boolean {\n    return this.#visible;\n  }\n\n  setVisible(visible: boolean): void {\n    this.#visible = visible;\n  }\n}\n\nexport default Map;\n", "import { Tile, Unit } from '../../types';\nimport { Map, IMap } from '../Map';\n\nexport class Cities extends Map {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (tile.city) {\n      const city = tile.city,\n        player = city.player,\n        civilization = player.civilization,\n        [colors] = civilization.attributes.filter(\n          (attribute) => attribute.name === 'colors'\n        );\n\n      if (tile.units.length > 0) {\n        this.context().fillStyle = '#000';\n        this.context().fillRect(offsetX, offsetY, size, size);\n      }\n\n      this.context().fillStyle = colors.value[0];\n      this.context().fillRect(\n        offsetX + this.scale(),\n        offsetY + this.scale(),\n        size - this.scale() * 2,\n        size - this.scale() * 2\n      );\n\n      this.drawImage(`map/city`, x, y, {\n        augment: (image) =>\n          this.replaceColors(\n            image,\n            // To come from theme manifest\n            ['#000'],\n            [colors.value[1]]\n          ),\n        offsetX: this.scale(),\n        offsetY: this.scale(),\n      });\n    }\n  }\n}\n\nexport default Cities;\n", "import {\n  NotificationWindow,\n  NotificationWindowOptions,\n} from './NotificationWindow';\nimport { e, h, t } from '../lib/html';\n\nexport interface ConfirmationWindowOptions extends NotificationWindowOptions {\n  okLabel?: string;\n  cancelLabel?: string;\n}\n\nexport class ConfirmationWindow extends NotificationWindow {\n  constructor(\n    title: string,\n    details: string,\n    onOK: () => void,\n    options: ConfirmationWindowOptions = {}\n  ) {\n    const confirmationButton = h(e('button', t(options.okLabel ?? 'OK')), {\n      click: () => {\n        onOK();\n\n        this.close();\n      },\n      keydown: (event) => {\n        if (event.key === 'Enter' || event.key === ' ') {\n          event.preventDefault();\n          event.stopPropagation();\n\n          onOK();\n\n          this.close();\n        }\n      },\n    });\n\n    super(\n      title,\n      e(\n        'div.content',\n        e('p', t(details)),\n        e(\n          'footer',\n          confirmationButton,\n          h(e('button', t(options.cancelLabel ?? 'Cancel')), {\n            click: () => this.close(),\n            keydown: (event) => {\n              if (event.key === 'Enter' || event.key === ' ') {\n                event.preventDefault();\n                event.stopPropagation();\n\n                this.close();\n              }\n            },\n          })\n        )\n      ),\n      {\n        ...options,\n        queue: false,\n      }\n    );\n\n    confirmationButton.focus();\n  }\n}\n\nexport default ConfirmationWindow;\n", "import { PlainObject } from '../types';\nimport { ObjectMap } from './reconstituteData';\n\nexport type dataUpdatedEvent = CustomEvent<{ data: PlainObject }>;\nexport type dataUpdatedHandler = (data: PlainObject) => void;\nexport type patchDataReceivedEvent = CustomEvent<{ value: ObjectMap }>;\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    dataupdated: dataUpdatedEvent;\n    patchdatareceived: patchDataReceivedEvent;\n  }\n}\n\nexport class DataObserver {\n  #handler: (event: patchDataReceivedEvent) => void;\n  #ids: string[] = [];\n\n  constructor(ids: string[], handler: dataUpdatedHandler) {\n    this.setIds(ids);\n\n    this.#handler = (event) => {\n      const { detail } = event,\n        objects = detail.value.objects;\n\n      if (!objects) {\n        return;\n      }\n\n      if (this.#ids.some((id) => id in objects)) {\n        document.addEventListener(\n          'dataupdated',\n          (event) => handler(event.detail.data),\n          {\n            once: true,\n          }\n        );\n      }\n    };\n\n    document.addEventListener('patchdatareceived', this.#handler);\n  }\n\n  dispose(): void {\n    document.removeEventListener('patchdatareceived', this.#handler);\n  }\n\n  setIds(ids: string[]): void {\n    this.#ids.splice(0, this.#ids.length, ...ids);\n  }\n}\n\nexport default DataObserver;\n", "import { NeighbourDirection, Tile } from '../../types';\nimport { Map, IMap } from '../Map';\n\nexport class TerrainAbstract extends Map implements IMap {\n  update(tilesToUpdate: Tile[]): void {\n    // we need to redraw the surrounding tiles to prevent the hidden terrain showing up incorrectly.\n    const extendedTilesToUpdate = [...tilesToUpdate];\n\n    tilesToUpdate.forEach((tile) => {\n      (\n        ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'] as NeighbourDirection[]\n      ).forEach((direction) => {\n        const target = this.world().getNeighbour(tile, direction);\n\n        if (extendedTilesToUpdate.includes(target)) {\n          return;\n        }\n\n        extendedTilesToUpdate.push(target);\n      });\n    });\n\n    return super.update(extendedTilesToUpdate);\n  }\n}\n\nexport default TerrainAbstract;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Feature extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    if (tile.terrain.features.length) {\n      tile.terrain.features.forEach((feature) =>\n        feature._ === 'Shield'\n          ? this.drawImage(`terrain/${feature._.toLowerCase()}`, x, y, {\n              offsetX: 4 * this.scale(),\n              offsetY: 4 * this.scale(),\n            })\n          : this.drawImage(`terrain/${feature._.toLowerCase()}`, x, y)\n      );\n    }\n  }\n}\n\nexport default Feature;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Fog extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    this.filterNeighbours(tile, (tile) => tile.terrain._ === 'Unknown').forEach(\n      (direction) => this.drawImage(`map/fog_${direction}`, x, y)\n    );\n  }\n}\n\nexport default Fog;\n", "import { EntityInstance, NeighbourDirection, Tile } from '../../types';\nimport TerrainAbstract from './TerrainAbstract';\n\ntype Improvement = 'Mine' | 'Pollution' | 'Railroad' | 'Road';\n\ntype ImprovementLookup = {\n  [key in Improvement]: boolean;\n};\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    const improvements = tile.improvements.reduce(\n      (\n        state: ImprovementLookup,\n        improvement: EntityInstance\n      ): ImprovementLookup => {\n        const improvementType = improvement._ as Improvement;\n\n        if (!(improvementType in state)) {\n          return state;\n        }\n\n        state[improvementType] = true;\n\n        return state;\n      },\n      {\n        Mine: false,\n        Road: false,\n        Railroad: false,\n        Pollution: false,\n      }\n    );\n\n    (['Mine', 'Pollution'] as (keyof ImprovementLookup)[]).forEach(\n      (improvementName: keyof ImprovementLookup) => {\n        if (improvements[improvementName]) {\n          this.drawImage(`improvements/${improvementName.toLowerCase()}`, x, y);\n        }\n      }\n    );\n\n    // Can't have Railroad without Road!\n    if (improvements.Road) {\n      const neighbouringRoad = this.filterNeighbours(\n          tile,\n          (adjoiningTile: Tile): boolean =>\n            adjoiningTile.improvements.some(\n              (improvement: EntityInstance): boolean => improvement._ === 'Road'\n            ),\n          ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw']\n        ),\n        neighbouringRailroad = this.filterNeighbours(\n          tile,\n          (adjoiningTile: Tile): boolean =>\n            !!adjoiningTile.city ||\n            adjoiningTile.improvements.some(\n              (improvement: EntityInstance): boolean =>\n                improvement._ === 'Railroad'\n            ),\n          ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw']\n        );\n\n      neighbouringRoad.forEach((direction: NeighbourDirection): void => {\n        if (\n          !improvements.Railroad ||\n          !neighbouringRailroad.includes(direction)\n        ) {\n          this.drawImage(`improvements/road_${direction}`, x, y);\n        }\n      });\n\n      if (improvements.Railroad) {\n        neighbouringRailroad.forEach((direction: NeighbourDirection): void =>\n          this.drawImage(`improvements/railroad_${direction}`, x, y)\n        );\n      }\n\n      if (neighbouringRoad.length === 0 && neighbouringRailroad.length === 0) {\n        const size = this.tileSize(),\n          offsetX = x * size,\n          offsetY = y * size,\n          center = Math.floor(this.tileSize() / 2) - this.scale();\n\n        this.context().fillStyle = improvements.Railroad ? '#000' : '#8c5828';\n        this.context().rect(\n          offsetX + center,\n          offsetY + center,\n          this.scale() * 2,\n          this.scale() * 2\n        );\n        this.context().fill();\n      }\n    }\n  }\n}\n\nexport default Terrain;\n", "import { EntityInstance, NeighbourDirection, Tile } from '../../types';\nimport TerrainAbstract from './TerrainAbstract';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile,\n      hasIrrigation = tile.improvements.some(\n        (improvement: EntityInstance): boolean => improvement._ === 'Irrigation'\n      );\n\n    if (!hasIrrigation) {\n      return;\n    }\n\n    this.drawImage(`improvements/irrigation`, x, y);\n  }\n}\n\nexport default Terrain;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\nimport { e } from '../../lib/html';\n\nexport class Land extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    if (tile.isLand) {\n      this.drawImage('terrain/land', x, y);\n    } else if (tile.isWater) {\n      this.drawImage('terrain/ocean', x, y);\n\n      if (tile.isCoast) {\n        const sprite = this.getPreloadedImage(\n            'terrain/coast_sprite'\n          ) as HTMLImageElement,\n          // formula from: http://forums.civfanatics.com/showpost.php?p=13507808&postcount=40\n          // Build a bit mask of all 8 surrounding tiles, setting the bit if the tile is not an\n          // ocean tile. Starting with the tile to the left as the least significant bit and\n          // going clockwise\n          bitmask =\n            (this.world().getNeighbour(tile, 'w').isLand ? 1 : 0) |\n            (this.world().getNeighbour(tile, 'nw').isLand ? 2 : 0) |\n            (this.world().getNeighbour(tile, 'n').isLand ? 4 : 0) |\n            (this.world().getNeighbour(tile, 'ne').isLand ? 8 : 0) |\n            (this.world().getNeighbour(tile, 'e').isLand ? 16 : 0) |\n            (this.world().getNeighbour(tile, 'se').isLand ? 32 : 0) |\n            (this.world().getNeighbour(tile, 's').isLand ? 64 : 0) |\n            (this.world().getNeighbour(tile, 'sw').isLand ? 128 : 0);\n\n        if (bitmask > 0) {\n          // There are at least one surrounding tile that is not ocean, so we need to render\n          // coast. We divide the tile into four 8x8 subtiles and for each of these we want\n          // a 3 bit bitmask of the surrounding tiles. We do this by looking at the 3 least\n          // significant bits for the top left subtile and shift the mask to the right as we\n          // are going around the tile. This way we are \"rotating\" our bitmask. The result\n          // are our x offsets into ter257.pic\n          let topLeftSubtileOffset = bitmask & 7,\n            topRightSubtileOffset = (bitmask >> 2) & 7,\n            bottomRightSubtileOffset = (bitmask >> 4) & 7,\n            bottomLeftSubtileOffset =\n              ((bitmask >> 6) & 7) | ((bitmask & 1) << 2);\n\n          const image = e(\n              'canvas[height=\"16\"][width=\"16\"]'\n            ) as HTMLCanvasElement,\n            imageContext = image.getContext('2d') as CanvasRenderingContext2D;\n\n          imageContext.drawImage(\n            sprite,\n            topLeftSubtileOffset << 4,\n            0,\n            8,\n            8,\n            0,\n            0,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            (topRightSubtileOffset << 4) + 8,\n            0,\n            8,\n            8,\n            8,\n            0,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            (bottomRightSubtileOffset << 4) + 8,\n            8,\n            8,\n            8,\n            8,\n            8,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            bottomLeftSubtileOffset << 4,\n            8,\n            8,\n            8,\n            0,\n            8,\n            8,\n            8\n          );\n\n          this.putImage(image, offsetX, offsetY);\n        }\n\n        this.filterNeighbours(\n          tile,\n          (tile: Tile): boolean => tile.terrain._ === 'River'\n        ).forEach((direction) =>\n          this.drawImage(`terrain/river_mouth_${direction}`, x, y)\n        );\n      }\n    }\n  }\n}\n\nexport default Land;\n", "import { Coordinate, Tile, Unit } from '../types';\nimport { EventEmitter } from 'eventemitter3';\nimport Map from './Map';\nimport World from './World';\nimport { e } from '../lib/html';\n\nexport interface IPortal {\n  build(updatedTiles: Tile[]): void;\n  canvas(): HTMLCanvasElement;\n  center(): Coordinate;\n  getLayer(LayerType: typeof Map): Map | null;\n  getLayers(LayerType: typeof Map): Map[];\n  isVisible(x: number, y: number): boolean;\n  playerId(): string | null;\n  render(): void;\n  scale(): number;\n  setCenter(x: number, y: number): void;\n  tileSize(): number;\n  visibleBounds(): [number, number, number, number];\n  visibleRange(): [Coordinate, Coordinate];\n  world(): World;\n}\n\nexport interface PortalSettings {\n  playerId: string | null;\n  scale: number;\n  tileSize: number;\n}\n\ntype PortalOptions = {\n  [K in keyof PortalSettings]?: PortalSettings[K];\n};\n\nconst defaultPortalOptions: PortalSettings = {\n  playerId: null,\n  scale: 2,\n  tileSize: 16,\n};\n\nexport class Portal\n  extends EventEmitter<{\n    ['activate-unit']: [Unit];\n    ['focus-changed']: [number, number];\n  }>\n  implements IPortal\n{\n  #canvas: HTMLCanvasElement;\n  #center: Coordinate = { x: 0, y: 0 };\n  #context: CanvasRenderingContext2D;\n  #layers: Map[] = [];\n  #playerId: string | null = null;\n  #scale: number;\n  #tileSize: number;\n  #world: World;\n\n  constructor(\n    world: World,\n    canvas: HTMLCanvasElement = e('canvas') as HTMLCanvasElement,\n    options: PortalOptions = {\n      playerId: null,\n      scale: 2,\n    },\n    ...layers: typeof Map[]\n  ) {\n    const settings: PortalSettings = {\n      ...defaultPortalOptions,\n      ...options,\n    };\n\n    super();\n\n    this.#world = world;\n    this.#canvas = canvas;\n    this.#playerId = settings.playerId;\n    this.#tileSize = settings.tileSize;\n    this.#scale = settings.scale;\n\n    layers.forEach((MapType) =>\n      this.#layers.push(new MapType(this.#world, this.scale(), this.tileSize()))\n    );\n\n    this.#context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    this.bindEvents();\n  }\n\n  protected bindEvents(): void {}\n\n  public build(updatedTiles: Tile[]): void {\n    this.#layers.forEach((layer: Map) => layer.update(updatedTiles));\n  }\n\n  public canvas(): HTMLCanvasElement {\n    return this.#canvas;\n  }\n\n  public center(): Coordinate {\n    return this.#center;\n  }\n\n  public getLayer(LayerType: typeof Map): Map | null {\n    return this.getLayers(LayerType).shift() ?? null;\n  }\n\n  public getLayers(LayerType: typeof Map): Map[] {\n    return this.#layers.filter((layer) => layer instanceof LayerType);\n  }\n\n  public isVisible(x: number, y: number): boolean {\n    const [xLowerBound, xUpperBound, yLowerBound, yUpperBound] =\n      this.visibleBounds();\n\n    // I _think_ this logic is correct now...\n    return (\n      (xLowerBound > xUpperBound\n        ? x < xUpperBound || x > xLowerBound\n        : x < xUpperBound && x > xLowerBound) &&\n      (yLowerBound > yUpperBound\n        ? y < yUpperBound || y > yLowerBound\n        : y < yUpperBound && y > yLowerBound)\n    );\n  }\n\n  public playerId(): string | null {\n    return this.#playerId;\n  }\n\n  public render(): void {\n    const tileSize = this.#layers[0].tileSize(),\n      layerWidth = this.#world.width() * tileSize,\n      centerX = this.#center.x * tileSize + Math.trunc(tileSize / this.scale()),\n      portalCenterX = Math.trunc(this.#canvas.width / 2),\n      layerHeight = this.#world.height() * tileSize,\n      centerY = this.#center.y * tileSize + Math.trunc(tileSize / this.scale()),\n      portalCenterY = Math.trunc(this.#canvas.height / 2);\n\n    let startX = portalCenterX - centerX,\n      endX = portalCenterX + layerWidth,\n      startY = portalCenterY - centerY,\n      endY = portalCenterY + layerHeight;\n\n    while (startX > 0) {\n      startX -= layerWidth;\n    }\n\n    while (startY > 0) {\n      startY -= layerHeight;\n    }\n\n    while (endX < this.#canvas.width) {\n      endX += layerWidth;\n    }\n\n    while (endY < this.#canvas.height) {\n      endY += layerHeight;\n    }\n\n    this.#context.fillStyle = '#000';\n    this.#context.fillRect(\n      0,\n      0,\n      this.#world.width() * tileSize,\n      this.#world.height() * tileSize\n    );\n\n    for (let x = startX; x < endX; x += layerWidth) {\n      for (let y = startY; y < endY; y += layerHeight) {\n        this.#layers.forEach((layer) => {\n          if (!layer.isVisible()) {\n            return;\n          }\n\n          const canvas = layer.canvas();\n\n          this.#context.drawImage(canvas, x, y, canvas.width, canvas.height);\n        });\n      }\n    }\n  }\n\n  public scale(): number {\n    return this.#scale;\n  }\n\n  public setCenter(x: number, y: number): void {\n    this.#center.x = x;\n    this.#center.y = y;\n\n    this.render();\n\n    this.emit('focus-changed', x, y);\n  }\n\n  public tileSize(): number {\n    return this.#tileSize;\n  }\n\n  public visibleBounds(): [number, number, number, number] {\n    const xRange = Math.floor(\n        this.#canvas.width / this.#layers[0].tileSize() / this.#scale\n      ),\n      yRange = Math.floor(\n        this.#canvas.height / this.#layers[0].tileSize() / this.#scale\n      ),\n      xLowerBound =\n        (this.#center.x - xRange + this.#world.width()) % this.#world.width(),\n      xUpperBound = (this.#center.x + xRange) % this.#world.width(),\n      yLowerBound =\n        (this.#center.y - yRange + this.#world.height()) % this.#world.height(),\n      yUpperBound = (this.#center.y + yRange) % this.#world.height();\n\n    return [xLowerBound, xUpperBound, yLowerBound, yUpperBound];\n  }\n\n  public visibleRange(): [Coordinate, Coordinate] {\n    const xRange = Math.floor(\n        this.#canvas.width / this.#layers[0].tileSize() / this.#scale\n      ),\n      yRange = Math.floor(\n        this.#canvas.height / this.#layers[0].tileSize() / this.#scale\n      );\n\n    return [\n      { x: this.#center.x - xRange, y: this.#center.y - yRange },\n      { x: this.#center.x + xRange, y: this.#center.y + yRange },\n    ];\n  }\n\n  public world(): World {\n    return this.#world;\n  }\n}\n\nexport default Portal;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    const adjoining = this.filterNeighbours(\n      tile,\n      (adjoiningTile: Tile): boolean =>\n        (tile.terrain._ === 'River' && adjoiningTile.isWater) ||\n        tile.terrain._ === adjoiningTile.terrain._\n    ).join('');\n\n    // Ocean is covered with the land/ocean stuff above and if we re-do here, we lose the coastline\n    if (tile.terrain._ !== 'Ocean') {\n      if (adjoining) {\n        this.drawImage(\n          `terrain/${tile.terrain._.toLowerCase()}_${adjoining}`,\n          x,\n          y\n        );\n      } else {\n        this.drawImage(`terrain/${tile.terrain._.toLowerCase()}`, x, y);\n      }\n    }\n  }\n}\n\nexport default Terrain;\n", "import { NeighbourDirection, Tile, World as WorldData } from '../types';\n\nexport class World {\n  #unknown = (x: number, y: number): Tile => ({\n    _: 'Tile',\n    id: `Tile-${x}--${y}`,\n    city: null,\n    goodyHut: null,\n    improvements: [],\n    isCoast: false,\n    isLand: false,\n    isWater: false,\n    terrain: {\n      _: 'Unknown',\n      id: `UnknownTerrain-${x}--${y}`,\n      features: [],\n    },\n    units: [],\n    x,\n    y,\n    yields: [],\n  });\n  #lookupCache: { [key: string]: number } = {};\n  #tiles: Tile[];\n  #height: number;\n  #width: number;\n\n  constructor(world: WorldData) {\n    this.#height = world.height;\n    this.#width = world.width;\n    this.#tiles = world.tiles || [];\n  }\n\n  get(x: number, y: number): Tile {\n    while (x < 0) {\n      x += this.#width;\n    }\n\n    while (y < 0) {\n      y += this.#height;\n    }\n\n    while (x >= this.#width) {\n      x -= this.#width;\n    }\n\n    while (y >= this.#height) {\n      y -= this.#height;\n    }\n\n    const key = [x, y].toString();\n\n    if (!(key in this.#lookupCache)) {\n      const index = this.#tiles.findIndex(\n        (tile) => tile.x === x && tile.y === y\n      );\n\n      if (index === -1) {\n        return this.#unknown(x, y);\n      }\n\n      this.#lookupCache[key] = index;\n    }\n\n    return this.#tiles[this.#lookupCache[key]];\n  }\n\n  getNeighbour(tile: Tile, direction: NeighbourDirection): Tile {\n    if (direction === 'n') {\n      return this.get(tile.x, tile.y - 1);\n    }\n\n    if (direction === 'ne') {\n      return this.get(tile.x + 1, tile.y - 1);\n    }\n\n    if (direction === 'e') {\n      return this.get(tile.x + 1, tile.y);\n    }\n\n    if (direction === 'se') {\n      return this.get(tile.x + 1, tile.y + 1);\n    }\n\n    if (direction === 's') {\n      return this.get(tile.x, tile.y + 1);\n    }\n\n    if (direction === 'sw') {\n      return this.get(tile.x - 1, tile.y + 1);\n    }\n\n    if (direction === 'w') {\n      return this.get(tile.x - 1, tile.y);\n    }\n\n    if (direction === 'nw') {\n      return this.get(tile.x - 1, tile.y - 1);\n    }\n\n    throw new TypeError('Invalid direction.');\n  }\n\n  height(): number {\n    return this.#height;\n  }\n\n  tiles(): Tile[] {\n    return this.#tiles;\n  }\n\n  width(): number {\n    return this.#width;\n  }\n\n  setTiles(tiles: Tile[]): void {\n    this.#tiles = tiles;\n  }\n}\n\nexport default World;\n", "import Map from '../Map';\nimport { Tile } from '../../types';\n\nexport class Yields extends Map {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      total = tile.yields.reduce(\n        (total, tileYield) => total + tileYield.value,\n        0\n      ),\n      // TODO: use a more effective sort than this, this only works by luck (Food -> Production -> Trade)\n      yields = tile.yields.sort(\n        (a, b) => a._.charCodeAt(0) - b._.charCodeAt(0)\n      );\n\n    let i = 0;\n\n    if (total < 5) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 2, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 2, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 7) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 3, offsetY],\n        [offsetX + (size / 3) * 2, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 3, offsetY + size / 2],\n        [offsetX + (size / 3) * 2, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            offsets[i][0],\n            offsets[i++][1]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 9) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 4, offsetY],\n        [offsetX + (size / 4) * 2, offsetY],\n        [offsetX + (size / 4) * 3, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 4, offsetY + size / 2],\n        [offsetX + (size / 4) * 2, offsetY + size / 2],\n        [offsetX + (size / 4) * 3, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 11) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 5, offsetY],\n        [offsetX + (size / 5) * 2, offsetY],\n        [offsetX + (size / 5) * 3, offsetY],\n        [offsetX + (size / 5) * 4, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 5, offsetY + size / 2],\n        [offsetX + (size / 5) * 2, offsetY + size / 2],\n        [offsetX + (size / 5) * 3, offsetY + size / 2],\n        [offsetX + (size / 5) * 4, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    const offsets: [number, number][] = [\n      [offsetX, offsetY],\n      [offsetX + size / 6, offsetY],\n      [offsetX + (size / 6) * 2, offsetY],\n      [offsetX + (size / 6) * 3, offsetY],\n      [offsetX + (size / 6) * 4, offsetY],\n      [offsetX + (size / 6) * 5, offsetY],\n      [offsetX, offsetY + size / 2],\n      [offsetX + size / 6, offsetY + size / 2],\n      [offsetX + (size / 6) * 2, offsetY + size / 2],\n      [offsetX + (size / 6) * 3, offsetY + size / 2],\n      [offsetX + (size / 6) * 4, offsetY + size / 2],\n      [offsetX + (size / 6) * 5, offsetY + size / 2],\n    ];\n\n    yields.forEach((tileYield) => {\n      for (let n = 0; n < tileYield.value; n++) {\n        this.putImage(\n          this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n          ...offsets[i++]\n        );\n      }\n    });\n  }\n}\nexport default Yields;\n", "import {\n  City as CityData,\n  CityGrowth,\n  ITransport,\n  PlainObject,\n} from '../types';\nimport { e, h, t } from '../lib/html';\nimport Cities from './Map/Cities';\nimport CityBuildSelectionWindow from './CityBuildSelectionWindow';\nimport ConfirmationWindow from './ConfirmationWindow';\nimport DataObserver from '../lib/DataObserver';\nimport Feature from './Map/Feature';\nimport Fog from './Map/Fog';\nimport Improvements from './Map/Improvements';\nimport Irrigation from './Map/Irrigation';\nimport Land from './Map/Land';\nimport Portal from './Portal';\nimport Terrain from './Map/Terrain';\nimport Window from './Window';\nimport World from './World';\nimport Yields from './Map/Yields';\n\ndeclare var transport: ITransport;\n\nconst turns = (city: CityData) =>\n    Math.max(\n      1,\n      Math.ceil(\n        (city.build.cost.value - city.build.progress.value) /\n          city.yields\n            .filter((cityYield) => cityYield._ === 'Production')\n            .reduce((total, cityYield) => total + cityYield.value, 0)\n      )\n    ),\n  buildCityBuildDetails = (\n    city: CityData,\n    chooseProduction: () => void,\n    completeProduction: () => void\n  ): HTMLElement =>\n    e(\n      'div.build',\n      e(\n        'header',\n        t(\n          `Building ${\n            city.build.building ? city.build.building.item._ : 'nothing'\n          }`\n        )\n      ),\n      city.build.building\n        ? e(\n            'p',\n            t(\n              `Progress ${city.build.progress.value} / ${\n                city.build.cost.value\n              } (${turns(city)} turn${turns(city) === 1 ? '' : 's'})`\n            )\n          )\n        : t(''),\n      h(e('button', t(city.build.building ? 'Change' : 'Choose')), {\n        click: () => chooseProduction(),\n      }),\n      h(e('button', t('Buy')), {\n        click: () => completeProduction(),\n      })\n    ),\n  buildDetails = (\n    city: CityData,\n    portal: Portal,\n    chooseProduction: () => void,\n    completeProduction: () => void\n  ) => {\n    const portalCanvas = e('canvas') as HTMLCanvasElement,\n      growth: CityGrowth = city.growth,\n      cityPortal = new Portal(\n        new World(city.player.world),\n        portalCanvas,\n        {\n          playerId: city.player.id,\n          scale: portal.scale(),\n          tileSize: portal.tileSize(),\n        },\n        Land,\n        Irrigation,\n        Terrain,\n        Improvements,\n        Feature,\n        Fog,\n        Cities,\n        Yields\n      );\n\n    portalCanvas.height = portal.tileSize() * portal.scale() * 5;\n    portalCanvas.width = portal.tileSize() * portal.scale() * 5;\n\n    cityPortal.setCenter(city.tile.x, city.tile.y);\n    cityPortal.build(city.tiles);\n\n    const yieldMap = cityPortal.getLayer(Yields) as Yields;\n    yieldMap.render(city.tilesWorked);\n\n    cityPortal.render();\n\n    return e(\n      'div',\n      e(\n        'div.yields-detail',\n        ...Object.entries(\n          city.yields.reduce((yieldObject, cityYield) => {\n            if (!(cityYield._ in yieldObject)) {\n              yieldObject[cityYield._] = 0;\n            }\n\n            yieldObject[cityYield._] += cityYield.value;\n\n            return yieldObject;\n          }, {} as PlainObject)\n        ).map(([label, value]) =>\n          e('div', e('div', t(label)), e('div', t(value)))\n        )\n      ),\n      h(e('div.cityPortal', portalCanvas), {\n        click: () =>\n          transport.send('action', {\n            name: 'ReassignWorkers',\n            city: city.id,\n          }),\n      }),\n      buildCityBuildDetails(city, chooseProduction, completeProduction),\n      e(\n        'div.growth',\n        e('header', t(growth.size.toString())),\n        e('p', t(`Growth ${growth.progress.value} / ${growth.cost.value}`))\n      ),\n      e(\n        'div.improvements',\n        e('header', t('Improvements')),\n        e(\n          'ul',\n          ...city.improvements.map((improvement) => e('li', t(improvement._)))\n        )\n      ),\n      e(\n        'div.garrisoned-units',\n        e('header', t('Garrisoned Units')),\n        e(\n          'ul',\n          ...city.tile.units.map((unit) =>\n            e(\n              'li',\n              t(\n                unit._ +\n                  (unit.improvements.length\n                    ? ' (' +\n                      unit.improvements\n                        .map((improvement) => improvement._)\n                        .join(', ') +\n                      ')'\n                    : '')\n              )\n            )\n          )\n        )\n      ),\n      e(\n        'div.supported-units',\n        e('header', t('Supported Units')),\n        e(\n          'ul',\n          ...city.units.map((unit) =>\n            e(\n              'li',\n              t(\n                unit._ +\n                  (unit.improvements.length\n                    ? ' (' +\n                      unit.improvements\n                        .map((improvement) => improvement._)\n                        .join(', ') +\n                      ')'\n                    : '')\n              )\n            )\n          )\n        )\n      ),\n      e(\n        'div.yields-detail',\n        ...city.yields.map((cityYield) =>\n          e(\n            `div.${cityYield._.toLowerCase()}`,\n            e(\n              'div',\n              t(\n                `${cityYield._} (${cityYield.values\n                  .map(([, description]) => description)\n                  .join(', ')})`\n              )\n            ),\n            e('div', t(cityYield.value.toString()))\n          )\n        )\n      )\n    );\n  };\n\nexport class City extends Window {\n  #city: CityData;\n  #dataObserver: DataObserver;\n  #portal: Portal;\n\n  constructor(city: CityData, portal: Portal) {\n    super(\n      city.name,\n      buildDetails(\n        city,\n        portal,\n        () => this.changeProduction(),\n        () => this.completeProduction()\n      ),\n      {\n        size: 'maximised',\n      }\n    );\n\n    this.#city = city;\n    this.#portal = portal;\n    this.#dataObserver = new DataObserver(\n      [\n        city.id,\n        city.build.id,\n        city.growth.id,\n        ...city.units.map((unit) => unit.id),\n      ],\n      (data: PlainObject) => {\n        const [updatedCity] = (\n          (data.player?.cities ?? []) as CityData[]\n        ).filter((cityData: CityData) => city.id === cityData.id);\n\n        // City must have been captured or destroyed\n        if (!updatedCity) {\n          this.close();\n\n          return;\n        }\n\n        this.#city = updatedCity;\n\n        this.#dataObserver.setIds([\n          updatedCity.id,\n          updatedCity.build.id,\n          updatedCity.growth.id,\n          ...updatedCity.units.map((unit) => unit.id),\n        ]);\n\n        this.update(\n          buildDetails(\n            updatedCity,\n            this.#portal,\n            () => this.changeProduction(),\n            () => this.completeProduction()\n          )\n        );\n\n        this.element().focus();\n      }\n    );\n\n    this.element().addEventListener('keydown', (event) => {\n      if (['c', 'C'].includes(event.key)) {\n        this.changeProduction();\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (['b', 'B'].includes(event.key)) {\n        this.completeProduction();\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (['Enter', 'x', 'X'].includes(event.key)) {\n        this.close();\n      }\n    });\n  }\n\n  changeProduction(): void {\n    new CityBuildSelectionWindow(this.#city.build, () =>\n      this.element().focus()\n    );\n  }\n\n  close(): void {\n    this.#dataObserver.dispose();\n\n    super.close();\n  }\n\n  completeProduction(): void {\n    if (!this.#city.build.building) {\n      return;\n    }\n\n    new ConfirmationWindow(\n      'Are you sure?',\n      `Do you want to rush building of ${this.#city.build.building.item._}`,\n      () =>\n        transport.send('action', {\n          name: 'CompleteProduction',\n          id: this.#city.id,\n        })\n    );\n  }\n}\n\nexport default City;\n", "import { BuildItem, City as CityData, CityBuild, ITransport } from '../types';\nimport { SelectionWindow, SelectionWindowActions } from './SelectionWindow';\nimport City from './City';\nimport Portal from './Portal';\n\ndeclare var transport: ITransport;\n\ntype onCompleteHandler = (hasSelected: boolean, ...args: any[]) => void;\n\nexport class CityBuildSelectionWindow extends SelectionWindow {\n  private onComplete: onCompleteHandler;\n\n  public static showCityAction = (city: CityData, portal: Portal) => ({\n    label: 'View city',\n    action(selectionWindow: SelectionWindow) {\n      selectionWindow.close();\n\n      new City(city, portal);\n    },\n  });\n  public static showCityOnMapAction = (city: CityData, portal: Portal) => ({\n    label: 'Show on map',\n    action(selectionWindow: SelectionWindow) {\n      selectionWindow.close();\n\n      portal.setCenter(city.tile.x, city.tile.y);\n    },\n  });\n\n  constructor(\n    cityBuild: CityBuild,\n    onComplete: onCompleteHandler = () => {},\n    additionalActions: SelectionWindowActions = {}\n  ) {\n    const production = cityBuild.city.yields\n        .filter((cityYield) => cityYield._ === 'Production')\n        .reduce((total, cityYield) => total + cityYield.value, 0),\n      turns = (buildItem: BuildItem) =>\n        Math.ceil(\n          (buildItem.cost.value - cityBuild.progress.value) / production\n        );\n\n    super(\n      `What would you like to build in ${cityBuild.city.name}?`,\n      cityBuild.available.map((buildItem) => ({\n        label: `${buildItem.item._} (Cost: ${buildItem.cost.value} / ${turns(\n          buildItem\n        )} turn${turns(buildItem) === 1 ? '' : 's'})`,\n        value: buildItem.item._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        transport.send('action', {\n          name: cityBuild.building === null ? 'CityBuild' : 'ChangeProduction',\n          id: cityBuild.id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.close(true);\n      },\n      null,\n      {\n        actions: additionalActions,\n        displayAll: true,\n      }\n    );\n\n    this.onComplete = onComplete;\n  }\n\n  close(hasSelected: boolean = false): void {\n    super.close();\n\n    if (hasSelected) {\n      this.onComplete(hasSelected);\n    }\n  }\n}\n\nexport default CityBuildSelectionWindow;\n", "import { CityBuild as CityBuildObject, PlayerAction } from '../../types';\nimport { e, h } from '../../lib/html';\nimport Action from './Action';\nimport CityBuildSelectionWindow from '../CityBuildSelectionWindow';\nimport Portal from '../Portal';\n\nexport class CityBuild extends Action {\n  #portal: Portal;\n\n  constructor(action: PlayerAction, portal: Portal) {\n    super(action);\n\n    this.#portal = portal;\n  }\n\n  public activate(): void {\n    new CityBuildSelectionWindow(this.value(), () => this.complete(), {\n      showCity: CityBuildSelectionWindow.showCityAction(\n        this.value().city,\n        this.#portal\n      ),\n      showCityOnMap: CityBuildSelectionWindow.showCityOnMapAction(\n        this.value().city,\n        this.#portal\n      ),\n    });\n  }\n\n  build(): void {\n    const cityBuild = this.value();\n\n    this.element().append(\n      e(\n        `button.cityBuild[title=\"What would you like to build in ${cityBuild.city.name}?\"]`\n      )\n    );\n  }\n\n  value(): CityBuildObject {\n    return super.value() as CityBuildObject;\n  }\n}\n\nexport default CityBuild;\n", "import { e } from '../../lib/html';\nimport Action from './Action';\nimport { ITransport } from '../../types';\n\ndeclare var transport: ITransport;\n\nexport class EndTurn extends Action {\n  activate(): void {\n    transport.send('action', {\n      name: 'EndTurn',\n    });\n  }\n\n  build(): void {\n    this.element().append(e(`button.endTurn[title=\"End turn\"]`));\n  }\n}\n\nexport default EndTurn;\n", "import Action from './Action';\nimport { e } from '../../lib/html';\nimport SelectionWindow from '../SelectionWindow';\nimport { ITransport, PlayerGovernment } from '../../types';\n\ndeclare var transport: ITransport;\n\nexport class Revolution extends Action {\n  public activate(): void {\n    const chooseWindow = new SelectionWindow(\n      'Choose government',\n      this.value().available.map((government) => ({\n        value: government._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        transport.send('action', {\n          name: 'Revolution',\n          id: this.value().id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.complete();\n\n        chooseWindow.close();\n      },\n      'Which government would you like to convert to?',\n      {\n        displayAll: true,\n      }\n    );\n  }\n\n  build(): void {\n    this.element().append(\n      e('button.chooseGovernment[title=\"Choose government\"]')\n    );\n  }\n\n  value(): PlayerGovernment {\n    return super.value() as PlayerGovernment;\n  }\n}\n\nexport default Revolution;\n", "import { Element, IElement } from './Element';\nimport { e, h } from '../lib/html';\nimport Action from './Actions/Action';\nimport AdjustTradeRates from './Actions/AdjustTradeRates';\nimport ChooseResearch from './Actions/ChooseResearch';\nimport CityBuild from './Actions/CityBuild';\nimport EndTurn from './Actions/EndTurn';\nimport { PlayerAction } from '../types';\nimport Portal from './Portal';\nimport Revolution from './Actions/Revolution';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    actioned: CustomEvent<Action>;\n  }\n}\n\nexport interface IActions extends IElement {\n  build(mandatoryActions: PlayerAction[], actions: PlayerAction[]): void;\n}\n\nexport class Actions extends Element implements IActions {\n  #portal: Portal;\n\n  constructor(container: HTMLElement = e('div.actions'), portal: Portal) {\n    super(container);\n\n    this.#portal = portal;\n\n    this.element().addEventListener('actioned', (event) =>\n      event.detail.element().remove()\n    );\n\n    this.element().addEventListener(\n      'keydown',\n      (event) => {\n        const currentChild = document.activeElement;\n\n        if (!this.element().contains(currentChild)) {\n          return;\n        }\n\n        const { key } = event,\n          children = Array.from(this.element().children) as HTMLElement[];\n\n        if (\n          !['ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowUp'].includes(key) ||\n          children.length === 0\n        ) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        let currentAction =\n          currentChild === this.element()\n            ? ['ArrowLeft', 'ArrowUp'].includes(key)\n              ? (currentChild.firstElementChild as HTMLElement)\n              : (currentChild.lastElementChild as HTMLElement)\n            : (currentChild as HTMLElement);\n\n        while (currentAction.parentElement !== this.element()) {\n          currentAction = currentAction.parentElement as HTMLElement;\n        }\n\n        const currentIndex = children.indexOf(currentAction);\n\n        if (['ArrowUp', 'ArrowLeft'].includes(key)) {\n          if (currentIndex > 0) {\n            children[currentIndex - 1].querySelector('button')?.focus();\n\n            return;\n          }\n\n          children.pop()!.querySelector('button')!.focus();\n\n          return;\n        }\n\n        if (['ArrowDown', 'ArrowRight'].includes(key)) {\n          if (currentIndex < children.length - 1) {\n            children[currentIndex + 1]!.querySelector('button')!.focus();\n\n            return;\n          }\n\n          children.shift()!.querySelector('button')!.focus();\n\n          return;\n        }\n      },\n      true\n    );\n  }\n\n  build(actions: PlayerAction[]): void {\n    this.empty();\n\n    actions.forEach((playerAction) => {\n      let action: Action;\n\n      switch (playerAction._) {\n        // This is handled separately so no need to worry.\n        case 'ActiveUnit':\n          return;\n\n        case 'AdjustTradeRates':\n          action = new AdjustTradeRates(playerAction);\n\n          break;\n\n        case 'ChooseResearch':\n          action = new ChooseResearch(playerAction);\n\n          break;\n\n        case 'CityBuild':\n          action = new CityBuild(playerAction, this.#portal);\n\n          break;\n\n        case 'EndTurn':\n          action = new EndTurn(playerAction);\n\n          break;\n\n        case 'Revolution':\n          action = new Revolution(playerAction);\n\n          break;\n\n        default:\n          console.log('need to handle ' + playerAction._);\n          return;\n        // throw new TypeError(`Unknown action type '${action._}'.`);\n      }\n\n      this.element().prepend(\n        h(action.element(), {\n          click: () => action.activate(),\n          keydown: ({ key }) => {\n            if (key === ' ' || key === 'Enter') {\n              action.activate();\n            }\n          },\n        })\n      );\n    });\n  }\n}\n\nexport default Actions;\n", "import { Tile, Unit } from '../../types';\nimport { Map, IMap } from '../Map';\n\nconst busyLookup: { [key: string]: string } = {\n  BuildingIrrigation: 'I',\n  BuildingMine: 'M',\n  BuildingRoad: 'R',\n  BuildingRailroad: 'RR',\n  // 'ClearingForest': 'CF',\n  // 'ClearingJungle': 'CJ',\n  // 'ClearingSwamp': 'CS',\n  // 'Fortifying': 'F',\n  // 'Sleeping': 'S',\n  // 'PlantingForest': 'PF',\n};\n\nexport class Units extends Map implements IMap {\n  #activeUnit: Unit | null = null;\n\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (\n      tile.units.length > 0 &&\n      (this.#activeUnit !== null ? this.#activeUnit.tile.id !== tile.id : true)\n    ) {\n      const [unit] = tile.units.sort(\n          (a: Unit, b: Unit): number => b.defence?.value - a.defence?.value\n        ),\n        image = this.renderUnit(unit);\n\n      if (tile.units.length > 1) {\n        this.putImage(image, offsetX - this.scale(), offsetY - this.scale());\n      }\n\n      this.putImage(image, offsetX, offsetY);\n\n      if (\n        unit.improvements?.some((improvement) => improvement._ === 'Fortified')\n      ) {\n        this.drawImage('map/fortify', x, y);\n      }\n\n      if (unit.busy) {\n        // if (unit.busy._ === 'Sleeping') {} // TODO: fade the unit like in Civ 1\n        const sizeOffsetX = this.tileSize() / 2,\n          sizeOffsetY = this.tileSize() * 0.75,\n          identifier =\n            busyLookup[unit.busy._] ?? unit.busy._.replace(/[a-z]+/g, '');\n\n        this.context().font = `bold ${8 * this.scale()}px sans-serif`;\n        this.context().fillStyle = 'black';\n        this.context().textAlign = 'center';\n        this.context().fillText(\n          identifier,\n          offsetX + sizeOffsetX + this.scale(),\n          offsetY + sizeOffsetY + this.scale()\n        );\n        this.context().fillStyle = 'white';\n        this.context().fillText(\n          identifier,\n          offsetX + sizeOffsetX,\n          offsetY + sizeOffsetY\n        );\n      }\n    }\n  }\n\n  protected renderUnit(unit: Unit): CanvasImageSource {\n    const player = unit.player,\n      civilization = player.civilization,\n      [colors] = civilization.attributes.filter(\n        (attribute) => attribute.name === 'colors'\n      );\n\n    return this.replaceColors(\n      this.getPreloadedImage(`units/${unit._.toLowerCase()}`),\n      // To come from theme manifest\n      ['#60E064', '#2C7800'],\n      colors.value\n    );\n  }\n\n  setActiveUnit(unit: Unit | null): void {\n    this.#activeUnit = unit;\n  }\n\n  protected activeUnit(): Unit | null {\n    return this.#activeUnit;\n  }\n}\n\nexport default Units;\n", "import { IMap } from '../Map';\nimport Units from './Units';\n\nexport class ActiveUnit extends Units implements IMap {\n  render(): void {\n    this.clear();\n\n    const activeUnit = this.activeUnit();\n\n    if (activeUnit === null) {\n      return;\n    }\n\n    const { x, y } = activeUnit.tile,\n      tile = this.world().get(x, y),\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      image = this.renderUnit(activeUnit);\n\n    if (tile.units.length > 1) {\n      this.putImage(image, offsetX - this.scale(), offsetY - this.scale());\n    }\n\n    this.putImage(image, offsetX, offsetY);\n  }\n\n  update(): void {\n    this.render();\n  }\n}\n\nexport default ActiveUnit;\n", "import { Tile } from '../../types';\nimport { Map } from '../Map';\n\nexport class CityNames extends Map {\n  renderTile(tile: Tile): void {\n    if (!tile.city) {\n      return;\n    }\n\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      city = tile.city,\n      sizeOffsetX = this.tileSize() / 2,\n      sizeOffsetY = this.tileSize() * 0.75,\n      textOffsetX = this.tileSize() / 2,\n      textOffsetY = this.tileSize() * 1.6;\n\n    this.context().font = `bold ${8 * this.scale()}px sans-serif`;\n    this.context().fillStyle = 'black';\n    this.context().textAlign = 'center';\n    this.context().fillText(\n      city.growth.size.toString(),\n      offsetX + sizeOffsetX + this.scale(),\n      offsetY + sizeOffsetY\n    );\n    this.context().fillText(\n      city.name,\n      offsetX + textOffsetX + this.scale(),\n      offsetY + textOffsetY\n    );\n    this.context().fillStyle = 'white';\n    this.context().fillText(\n      city.growth.size.toString(),\n      offsetX + sizeOffsetX,\n      offsetY + sizeOffsetY - this.scale()\n    );\n    this.context().fillText(\n      city.name,\n      offsetX + textOffsetX,\n      offsetY + textOffsetY - this.scale()\n    );\n  }\n\n  update(): void {\n    this.clear();\n\n    // TODO: Could be a little smarter about this...\n    this.world()\n      .tiles()\n      .filter((tile) => !!tile.city)\n      .forEach((tile) => this.renderTile(tile));\n  }\n}\n\nexport default CityNames;\n", "import { e, t } from '../lib/html';\nimport { Yield } from '../types';\nimport Element from './Element';\n\nexport class GameDetails extends Element {\n  #turn: Yield;\n  #year: Yield;\n\n  constructor(element: HTMLElement, turn: Yield, year: Yield) {\n    super(element);\n\n    this.#turn = turn;\n    this.#year = year;\n  }\n\n  build(): void {\n    this.empty();\n\n    this.element().append(\n      e(\n        'h3',\n        e('span#year', t(this.year())),\n        e('span#turn', t(`(${this.#turn.value.toString()})`))\n      )\n    );\n  }\n\n  year(year = this.#year.value): string {\n    if (year < 0) {\n      return Math.abs(year) + ' BCE';\n    }\n\n    if (year === 0) {\n      return '1 CE';\n    }\n\n    return year + ' CE';\n  }\n}\n\nexport default GameDetails;\n", "import { ITransport, Unit } from '../types';\nimport City from './City';\nimport Portal from './Portal';\nimport SelectionWindow from './SelectionWindow';\n\ndeclare var transport: ITransport;\n\nexport class GamePortal extends Portal {\n  protected bindEvents(): void {\n    this.canvas().addEventListener('click', (event) => {\n      const currentCenter = this.center();\n\n      let x = event.offsetX,\n        y = event.offsetY;\n\n      x =\n        (x - (this.canvas().width / 2 - this.tileSize())) /\n          (this.tileSize() * this.scale()) +\n        currentCenter.x;\n      y =\n        (y - (this.canvas().height / 2 - this.tileSize())) /\n          (this.tileSize() * this.scale()) +\n        currentCenter.y;\n\n      while (x < 0) {\n        x += this.world().width();\n      }\n\n      while (y < 0) {\n        y += this.world().height();\n      }\n\n      while (x > this.world().width()) {\n        x -= this.world().width();\n      }\n\n      while (y > this.world().height()) {\n        y -= this.world().height();\n      }\n\n      const tile = this.world().get(Math.trunc(x), Math.trunc(y)),\n        playerTileUnits = tile.units.filter(\n          (unit: Unit) => unit.player.id === this.playerId()\n        );\n\n      if (tile.city) {\n        new City(tile.city, this);\n      } else if (playerTileUnits.length) {\n        new SelectionWindow(\n          'Activate unit',\n          playerTileUnits.map((unit: Unit) => ({\n            label: unit._ + (unit.busy ? ` (${unit.busy!._})` : ''),\n            value: unit.id,\n          })),\n          (selection: string) => {\n            const [unit] = playerTileUnits.filter(\n              (tileUnit) => tileUnit.id === selection\n            );\n\n            if (!unit) {\n              return;\n            }\n\n            if (!unit.active) {\n              transport.send('action', {\n                name: 'InactiveUnit',\n                id: selection,\n              });\n\n              return;\n            }\n\n            this.emit('activate-unit', unit);\n          },\n          null\n        );\n\n        return;\n      }\n\n      this.setCenter(tile.x, tile.y);\n    });\n  }\n}\n\nexport default GamePortal;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    if (tile.goodyHut !== null) {\n      this.drawImage('map/hut', x, y);\n    }\n  }\n}\n\nexport default Terrain;\n", "export interface IIntervalHandler {\n  check(): void;\n  clear(): void;\n  off(handler: () => void): void;\n  on(handler: () => void): void;\n  pause(): void;\n  isPaused(): boolean;\n  resume(): void;\n}\n\nexport class IntervalHandler implements IIntervalHandler {\n  #paused: boolean = false;\n  #stack: (() => void)[] = [];\n\n  constructor(tick: number = 500) {\n    setInterval(() => this.check(), tick);\n  }\n\n  check(): void {\n    if (this.#paused) {\n      return;\n    }\n\n    this.#stack.forEach((item) => item());\n  }\n\n  clear(): void {\n    this.#stack = [];\n  }\n\n  off(handler: () => void): void {\n    this.#stack = this.#stack.filter((item) => item !== handler);\n  }\n\n  on(handler: () => void): void {\n    this.#stack.push(handler);\n  }\n\n  pause(): void {\n    this.#paused = true;\n  }\n\n  isPaused(): boolean {\n    return this.#paused;\n  }\n\n  resume(): void {\n    this.#paused = false;\n  }\n}\n\nexport default IntervalHandler;\n", "import {\n  SelectionWindow,\n  SelectionWindowOption,\n  SelectionWindowOptions,\n} from './SelectionWindow';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    selection: CustomEvent<string>;\n  }\n}\n\nexport class MandatorySelection extends SelectionWindow {\n  constructor(\n    title: string,\n    optionList: SelectionWindowOption[],\n    onChoose: (selection: string) => void,\n    body: string | Node | null = 'Please choose one of the following:',\n    options: SelectionWindowOptions = {\n      autoDisplay: false, // as we need to call display and wait for it to be complete.\n      canClose: false,\n      displayAll: false,\n    }\n  ) {\n    super(title, optionList, onChoose, body, {\n      ...options,\n      autoDisplay: false,\n      displayAll: true,\n    });\n  }\n\n  display(): Promise<string> {\n    return new Promise<string>((resolve) => {\n      this.element().addEventListener('selection', ({ detail }) =>\n        resolve(detail)\n      );\n\n      super.display();\n    });\n  }\n}\n\nexport default MandatorySelection;\n", "import { e, h, t } from '../lib/html';\nimport Element from './Element';\nimport { ITransport } from '../types';\nimport MandatorySelection from './MandatorySelection';\n\ndeclare var transport: ITransport;\n\nexport class MainMenu extends Element {\n  constructor(element: HTMLElement) {\n    super(element);\n\n    this.build();\n\n    const backgroundImage = document.querySelector(\n      '#preload img[src$=\"main-menu-bg.jpg\"]'\n    ) as HTMLImageElement;\n\n    if (backgroundImage.loading) {\n      backgroundImage.addEventListener('load', () => {\n        element.classList.add('active');\n      });\n    } else {\n      element.classList.add('active');\n    }\n  }\n\n  build() {\n    this.element().append(\n      e(\n        'nav',\n        h(e('button', t('Start a New Game')), {\n          click: () => {\n            this.disableButtons();\n\n            // TODO: This needs to be done via some `Rule`s or something and ordered via `Priority`, so that other\n            //  plugins can add items into the flow\n            (\n              [\n                () => {\n                  const numberOfPlayers = new MandatorySelection(\n                    'How many players?',\n                    [\n                      {\n                        label: '7 civilizations',\n                        value: 7,\n                      },\n                      {\n                        label: '6 civilizations',\n                        value: 6,\n                      },\n                      {\n                        label: '5 civilizations',\n                        value: 5,\n                      },\n                      {\n                        label: '4 civilizations',\n                        value: 4,\n                      },\n                      {\n                        label: '3 civilizations',\n                        value: 3,\n                      },\n                    ],\n                    (selection) =>\n                      transport.send('setOption', {\n                        name: 'players',\n                        value: selection,\n                      })\n                  );\n\n                  return numberOfPlayers.display();\n                },\n              ] as (() => Promise<any>)[]\n            )\n              .reduce(\n                (promise, menu) => promise.then(() => menu()),\n                Promise.resolve()\n              )\n              .then(() => {\n                this.remove();\n\n                transport.send('start');\n              });\n          },\n        }),\n        // h(e('button', t('Customise World')), {\n        //   click: () => {\n        //     // TODO: show options panel\n        //   },\n        // }),\n        h(e('button', t('Quit')), {\n          click: () => {\n            this.remove();\n\n            transport.send('quit');\n          },\n        })\n      )\n    );\n  }\n\n  disableButtons(): void {\n    this.element()\n      .querySelectorAll('button')\n      .forEach((button): void => button.setAttribute('disabled', ''));\n  }\n\n  remove(): void {\n    this.element().classList.remove('active');\n\n    setTimeout((): void => {\n      this.element().remove();\n    }, 2000);\n  }\n}\n\nexport default MainMenu;\n", "import Map from './Map';\nimport Portal from './Portal';\nimport World from './World';\n\nexport class Minimap {\n  #context: CanvasRenderingContext2D;\n  #element: HTMLCanvasElement;\n  #layers: Map[];\n  #portal: Portal;\n  #world: World;\n\n  constructor(\n    element: HTMLCanvasElement,\n    world: World,\n    portal: Portal,\n    ...layers: Map[]\n  ) {\n    this.#element = element;\n    this.#world = world;\n    this.#portal = portal;\n    this.#layers = layers;\n\n    this.#context = this.#element.getContext('2d')!;\n\n    this.#element.addEventListener('click', (event) => {\n      const x = event.offsetX - this.#element.offsetLeft,\n        y = event.offsetY - this.#element.offsetTop,\n        tileX = Math.ceil(\n          (x / this.#element.offsetWidth) * this.#world.width()\n        ),\n        tileY = Math.ceil(\n          (y / this.#element.offsetHeight) * this.#world.height()\n        );\n\n      this.#portal.setCenter(tileX, tileY);\n      this.update();\n    });\n  }\n\n  update(): void {\n    const targetHeight =\n      this.#layers[0].canvas().height * (190 / this.#layers[0].canvas().width);\n\n    this.#element.height = targetHeight;\n    this.#context.clearRect(0, 0, 190, targetHeight);\n\n    this.#layers.forEach((layer) =>\n      this.#context.drawImage(layer.canvas(), 0, 0, 190, targetHeight)\n    );\n\n    const [start, end] = this.#portal.visibleRange();\n\n    // TODO: draw the rectangle replicated when close to the sides\n    this.#context.lineWidth = 1;\n    this.#context.strokeStyle = '#fff';\n    this.#context.fillStyle = 'rgba(255, 255, 255, .2)';\n    this.#context.rect(\n      Math.floor((190 / this.#world.width()) * start.x),\n      Math.floor((targetHeight / this.#world.height()) * start.y),\n      Math.floor((190 / this.#world.width()) * (end.x - start.x)),\n      Math.floor((targetHeight / this.#world.height()) * (end.y - start.y))\n    );\n    this.#context.stroke();\n    this.#context.fill();\n  }\n}\n\nexport default Minimap;\n", "import NotificationWindow from './NotificationWindow';\n\nexport interface Notification {\n  message: string;\n  title?: string;\n}\n\nexport class Notifications {\n  #container: HTMLElement;\n  #notifications: Notification[] = [];\n\n  constructor(container: HTMLElement = document.body) {\n    this.#container = container;\n  }\n\n  receive(notification: Notification): void {\n    this.#notifications.push(notification);\n\n    this.check();\n  }\n\n  private check(): void {\n    const active = document.querySelector('.notificationWindow');\n\n    if (!this.#notifications.length || active) {\n      return;\n    }\n\n    const notification = this.#notifications.shift() as Notification;\n\n    this.publish(notification);\n  }\n\n  private publish(notification: Notification): void {\n    const notificationWindow = new NotificationWindow(\n      notification.title ?? 'Notification',\n      notification.message,\n      {\n        parent: this.#container,\n      }\n    );\n\n    notificationWindow.element().addEventListener('close', () => this.check());\n  }\n}\n\nexport default Notifications;\n", "import { e, t } from '../lib/html';\nimport { Player } from '../types';\nimport Element from './Element';\n\nexport class PlayerDetails extends Element {\n  #player: Player;\n\n  constructor(element: HTMLElement, player: Player) {\n    super(element);\n\n    this.#player = player;\n  }\n\n  build(): void {\n    this.empty();\n\n    const { civilization, treasury, research } = this.#player;\n\n    this.element().append(\n      e('h3', t(`${civilization.leader.name} of the ${civilization._} empire`)),\n      e(\n        'p',\n        t(\n          `Researching ${\n            research.researching\n              ? `${research.researching._} (${research.progress.value}/${research.cost.value})`\n              : 'nothing'\n          }`\n        )\n      ),\n      e('p', t(`Treasury ${treasury.value}`))\n    );\n  }\n}\n\nexport default PlayerDetails;\n", "import { Unit } from '../types';\nimport { e, t } from '../lib/html';\nimport Element from './Element';\n\nexport class UnitDetails extends Element {\n  #activeUnit: Unit | null;\n\n  constructor(element: HTMLElement, activeUnit: Unit | null) {\n    super(element);\n\n    this.#activeUnit = activeUnit;\n\n    this.build();\n  }\n\n  build(): void {\n    this.empty();\n\n    if (this.#activeUnit === null) {\n      return;\n    }\n\n    this.element().append(\n      e(\n        'p',\n        t(\n          `${this.#activeUnit._} (${this.#activeUnit.tile.x}, ${\n            this.#activeUnit.tile.y\n          })`\n        )\n      ),\n      e('p', t(this.#activeUnit.city?.name ?? 'NONE')),\n      e(\n        'p',\n        t(\n          `${this.#activeUnit.moves.value.toFixed(1)} / ${\n            this.#activeUnit.movement.value\n          } moves`\n        )\n      ),\n      e(\n        'p',\n        t(\n          `A: ${this.#activeUnit.attack.value} / D: ${\n            this.#activeUnit.defence.value\n          } / V: ${this.#activeUnit.visibility.value}`\n        )\n      ),\n      e(\n        'p',\n        t(\n          `${this.#activeUnit.improvements\n            .map((improvement) => improvement._)\n            .join(', ')}`\n        )\n      ),\n      e(\n        'p',\n        t(\n          `${this.#activeUnit.tile.terrain._}${\n            this.#activeUnit.tile.terrain.features\n              ? ' ' +\n                this.#activeUnit.tile.terrain.features\n                  .map((feature) => feature._)\n                  .join(', ')\n              : ''\n          }${\n            this.#activeUnit.tile.improvements.length\n              ? ' (' +\n                this.#activeUnit.tile.improvements\n                  .map((improvement) => improvement._)\n                  .join(', ') +\n                ')'\n              : ''\n          }`\n        )\n      ),\n      e(\n        'p',\n        t(\n          `${this.#activeUnit.tile.units\n            .filter((unit) => unit !== this.#activeUnit)\n            .map((unit) => unit._)\n            .join(', ')}`\n        )\n      )\n    );\n  }\n}\n\nexport default UnitDetails;\n", "import {\n  DataPatch,\n  GameData,\n  ITransport,\n  NeighbourDirection,\n  PlainObject,\n  PlayerAction,\n  Tile,\n  Unit,\n} from './types';\nimport { e, t } from './lib/html';\nimport { reconstituteData, ObjectMap } from './lib/reconstituteData';\nimport Actions from './components/Actions';\nimport ActiveUnit from './components/Map/ActiveUnit';\nimport Cities from './components/Map/Cities';\nimport CityNames from './components/Map/CityNames';\nimport Feature from './components/Map/Feature';\nimport Fog from './components/Map/Fog';\nimport GameDetails from './components/GameDetails';\nimport GamePortal from './components/GamePortal';\nimport GoodyHuts from './components/Map/GoodyHuts';\nimport Improvements from './components/Map/Improvements';\nimport IntervalHandler from './lib/IntervalHandler';\nimport Irrigation from './components/Map/Irrigation';\nimport Land from './components/Map/Land';\nimport MainMenu from './components/MainMenu';\nimport Minimap from './components/Minimap';\nimport NotificationWindow from './components/NotificationWindow';\nimport Notifications from './components/Notifications';\nimport PlayerDetails from './components/PlayerDetails';\nimport Portal from './components/Portal';\nimport SelectionWindow from './components/SelectionWindow';\nimport Terrain from './components/Map/Terrain';\nimport UnitDetails from './components/UnitDetails';\nimport Units from './components/Map/Units';\nimport World from './components/World';\nimport Yields from './components/Map/Yields';\n\n// TODO: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//  ! Break this down and use a front-end framework? !\n//  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\ndeclare var transport: ITransport;\n\nconst options = {\n  autoEndOfTurn: true,\n};\n\ntry {\n  const notificationArea = document.getElementById(\n      'notification'\n    ) as HTMLElement,\n    mainMenuElement = document.querySelector('#mainmenu') as HTMLElement,\n    actionArea = document.getElementById('actions') as HTMLElement,\n    secondaryActionArea = document.getElementById(\n      'other-actions'\n    ) as HTMLElement,\n    gameArea = document.getElementById('game') as HTMLElement,\n    mapWrapper = document.getElementById('map') as HTMLElement,\n    mapPortal = mapWrapper.querySelector('canvas') as HTMLCanvasElement,\n    gameInfo = document.getElementById('gameDetails') as HTMLElement,\n    playerInfo = document.getElementById('playerDetails') as HTMLElement,\n    minimapCanvas = document.getElementById('minimap') as HTMLCanvasElement,\n    unitInfo = document.getElementById('unitInfo') as HTMLCanvasElement,\n    notifications = new Notifications(),\n    mainMenu = new MainMenu(mainMenuElement),\n    setActiveUnit = (\n      unit: Unit | null,\n      portal: Portal,\n      unitsMap: Units,\n      activeUnitsMap: ActiveUnit\n    ) => {\n      const unitDetails = new UnitDetails(unitInfo, unit);\n\n      activeUnit = unit;\n\n      unitDetails.build();\n\n      unitsMap.setActiveUnit(unit);\n      unitsMap.render();\n      unitsMap.setVisible(true);\n      activeUnitsMap.setActiveUnit(unit);\n      activeUnitsMap.render();\n      activeUnitsMap.setVisible(true);\n\n      if (unit === null) {\n        portal.render();\n\n        return;\n      }\n\n      lastUnit = unit;\n\n      unitsMap.update([...(lastUnit?.tile ? [lastUnit.tile] : []), unit.tile]);\n\n      if (!portal.isVisible(unit.tile.x, unit.tile.y)) {\n        portal.setCenter(unit.tile.x, unit.tile.y);\n      }\n\n      portal.render();\n    };\n\n  const tilesToRender: Tile[] = [];\n\n  let globalNotificationTimer: number | undefined,\n    lastUnit: Unit | null = null,\n    activeUnit: Unit | null = null;\n\n  transport.receive('notification', (data): void => {\n    notificationArea.innerHTML = data;\n\n    if (globalNotificationTimer) {\n      window.clearTimeout(globalNotificationTimer);\n    }\n\n    globalNotificationTimer = window.setTimeout((): void => {\n      globalNotificationTimer = undefined;\n\n      notificationArea.innerText = '';\n    }, 4000);\n  });\n\n  [\n    ['chooseCivilization', 'Choose your civilization'],\n    ['chooseLeader', 'Choose your leader'],\n  ].forEach(([channel, label]) =>\n    transport.receive(channel, (rawData) => {\n      const { choices } = reconstituteData(rawData);\n\n      new SelectionWindow(\n        label,\n        choices.map(({ _: choice }: { _: string }) => ({\n          label: choice,\n          value: choice,\n        })),\n        (choice) => transport.send(channel, choice),\n        label,\n        {\n          displayAll: true,\n        }\n      );\n    })\n  );\n\n  transport.receiveOnce('gameData', (objectMap: ObjectMap) => {\n    const data: GameData = reconstituteData(objectMap) as GameData,\n      // @ts-ignore\n      formatter = new Intl.ListFormat();\n\n    new NotificationWindow(\n      'Welcome',\n      e(\n        'div.welcome',\n        e(\n          'p',\n          t(\n            `${data.player.civilization.leader.name}, you have risen to become leader of the ${data.player.civilization._}.`\n          )\n        ),\n        e(\n          'p',\n          t(\n            `Your people have knowledge of ${formatter.format([\n              'Irrigation',\n              'Mining',\n              'Roads',\n              ...data.player.research.complete.map((advance) => advance._),\n            ])}`\n          )\n        )\n      )\n    );\n\n    gameArea.classList.add('active');\n\n    mapPortal.width = (mapPortal.parentElement as HTMLElement).offsetWidth;\n    mapPortal.height = (mapPortal.parentElement as HTMLElement).offsetHeight;\n\n    const scale = 2,\n      world = new World(data.player.world);\n\n    let activeUnits: PlayerAction[] = [];\n\n    const intervalHandler = new IntervalHandler();\n\n    const portal = new GamePortal(\n        world,\n        mapPortal,\n        {\n          playerId: data.player.id,\n          // TODO: this needs to be a user-controllable item\n          scale,\n          // TODO: this needs to come from the theme\n          tileSize: 16,\n        },\n        Land,\n        Irrigation,\n        Terrain,\n        Improvements,\n        Feature,\n        GoodyHuts,\n        Fog,\n        Yields,\n        Units,\n        Cities,\n        CityNames,\n        ActiveUnit\n      ),\n      landMap = portal.getLayer(Land) as Land,\n      yieldsMap = portal.getLayer(Yields) as Yields,\n      unitsMap = portal.getLayer(Units) as Units,\n      citiesMap = portal.getLayer(Cities) as Cities,\n      cityNamesMap = portal.getLayer(CityNames) as CityNames,\n      activeUnitsMap = portal.getLayer(ActiveUnit) as ActiveUnit;\n\n    yieldsMap.setVisible(false);\n\n    const minimap = new Minimap(\n        minimapCanvas,\n        world,\n        portal,\n        landMap,\n        citiesMap\n      ),\n      primaryActions = new Actions(actionArea, portal),\n      secondaryActions = new Actions(secondaryActionArea, portal);\n\n    portal.on('focus-changed', () => minimap.update());\n    portal.on('activate-unit', (unit) =>\n      setActiveUnit(unit, portal, unitsMap, activeUnitsMap)\n    );\n\n    intervalHandler.on(() => {\n      activeUnitsMap.setVisible(!activeUnitsMap.isVisible());\n\n      portal.build(tilesToRender.splice(0));\n      portal.render();\n    });\n\n    window.addEventListener('resize', () => {\n      mapPortal.width = (mapPortal.parentElement as HTMLElement).offsetWidth;\n      mapPortal.height = (mapPortal.parentElement as HTMLElement).offsetHeight;\n    });\n\n    // This needs wrapping.\n    let lastTurn = 1,\n      clearNextTurn = false;\n\n    const handler = (objectMap: ObjectMap): void => {\n      let orphanIds: string[] | null = clearNextTurn ? [] : null;\n\n      // TODO: look into if it's possible to have data reconstituted in a worker thread\n      const data: GameData = reconstituteData(objectMap, orphanIds) as GameData;\n\n      // A bit crude, I'd like to run this as as background job too\n      if (orphanIds) {\n        // clean up orphan data - late game there can be tens of thousands of these to clean up\n        ((orphanIds) => {\n          const maxCount = 1000,\n            delay = 200;\n\n          for (\n            let i = 0, max = Math.ceil(orphanIds.length / maxCount);\n            i < max;\n            i++\n          ) {\n            setTimeout(\n              () =>\n                orphanIds\n                  .slice(i * maxCount, (i + 1) * maxCount - 1)\n                  .forEach((id) => delete objectMap.objects[id]),\n              (i + 1) * delay\n            );\n          }\n        })(orphanIds);\n\n        clearNextTurn = false;\n      }\n\n      document.dispatchEvent(\n        new CustomEvent('dataupdated', {\n          detail: {\n            data,\n          },\n        })\n      );\n\n      if (lastTurn !== data.turn.value) {\n        clearNextTurn = true;\n        lastTurn = data.turn.value;\n      }\n\n      primaryActions.build(data.player.mandatoryActions);\n      secondaryActions.build(\n        data.player.actions.filter((action: PlayerAction) =>\n          ['AdjustTradeRates', 'Revolution'].includes(action._)\n        )\n      );\n\n      gameArea.append(primaryActions.element());\n\n      world.setTiles(data.player.world.tiles);\n\n      const gameDetails = new GameDetails(gameInfo, data.turn, data.year);\n\n      gameDetails.build();\n\n      const playerDetails = new PlayerDetails(playerInfo, data.player);\n\n      playerDetails.build();\n\n      activeUnits = data.player.actions.filter(\n        (action: PlayerAction): boolean => action._ === 'ActiveUnit'\n      );\n\n      // This prioritises units that are already on screen\n      const [activeUnitAction] = activeUnits.sort(\n        ({ value: unitA }, { value: unitB }): number =>\n          unitB === lastUnit\n            ? 1\n            : unitA === lastUnit\n            ? -1\n            : (portal.isVisible((unitB as Unit).tile.x, (unitB as Unit).tile.y)\n                ? 1\n                : 0) -\n              (portal.isVisible((unitA as Unit).tile.x, (unitA as Unit).tile.y)\n                ? 1\n                : 0)\n      );\n\n      if (lastUnit !== activeUnitAction?.value) {\n        lastUnit = null;\n      }\n\n      setActiveUnit(\n        lastUnit?.active\n          ? lastUnit\n          : activeUnitAction\n          ? (activeUnitAction.value as Unit)\n          : null,\n        portal,\n        unitsMap,\n        activeUnitsMap\n      );\n\n      // ensure UI looks responsive\n      portal.build(tilesToRender.splice(0));\n      portal.render();\n\n      minimap.update();\n\n      if (\n        options.autoEndOfTurn &&\n        data.player.mandatoryActions.length === 1 &&\n        data.player.mandatoryActions.every((action) => action._ === 'EndTurn')\n      ) {\n        transport.send('action', {\n          name: 'EndTurn',\n        });\n\n        return;\n      }\n    };\n\n    handler(objectMap);\n\n    transport.receive('gameData', (data) => {\n      console.log('gameData called again');\n\n      handler(data);\n    });\n\n    const pathToParts = (path: string) => path.replace(/]/g, '').split(/[.[]/),\n      getPenultimateObject = (\n        object: PlainObject,\n        path: string\n      ): [PlainObject, string | undefined] => {\n        const parts = pathToParts(path),\n          lastPart = parts.pop();\n\n        const tmpObj = parts.reduce((tmpObj, part) => {\n          if (!tmpObj || !(part in tmpObj)) {\n            return null;\n          }\n\n          return tmpObj[part];\n        }, object);\n\n        return [tmpObj, lastPart];\n      },\n      setObjectPath = (object: PlainObject, path: string, value: any): void => {\n        const [tmpObj, lastPart] = getPenultimateObject(object, path);\n\n        if (!tmpObj || !lastPart) {\n          console.warn(`unable to set ${path} of ${object} (${lastPart})`);\n          return;\n        }\n\n        tmpObj[lastPart] = value;\n      },\n      removeObjectPath = (object: PlainObject, path: string): void => {\n        const [tmpObj, lastPart] = getPenultimateObject(object, path);\n\n        if (!tmpObj || !lastPart) {\n          console.warn(`unable to set ${path} of ${object} (${lastPart})`);\n          return;\n        }\n\n        delete tmpObj[lastPart];\n      };\n\n    transport.receive('gameDataPatch', (data: DataPatch[]) => {\n      data.forEach((patch) =>\n        Object.entries(patch).forEach(([key, { type, index, value }]) => {\n          if (type === 'add' || type === 'update') {\n            if (!value!.hierarchy) {\n              console.error('No hierarchy');\n              console.error(value);\n\n              return;\n            }\n\n            if (index) {\n              setObjectPath(objectMap.objects[key], index, value!.hierarchy);\n            } else {\n              objectMap.objects[key] = value!.hierarchy;\n            }\n\n            document.dispatchEvent(\n              new CustomEvent('patchdatareceived', {\n                detail: {\n                  value,\n                },\n              })\n            );\n\n            Object.entries(value!.objects as PlainObject).forEach(\n              ([key, value]) => {\n                objectMap.objects[key] = value;\n\n                if (value._ === 'PlayerTile') {\n                  // Since we only use tilesToRender for x and y this should be fine...\n                  tilesToRender.push(value);\n                }\n              }\n            );\n          }\n\n          if (type === 'remove') {\n            if (index) {\n              removeObjectPath(objectMap.objects[key], index);\n\n              return;\n            }\n\n            delete objectMap.objects[key];\n          }\n        })\n      );\n\n      handler(objectMap);\n    });\n\n    transport.receive('gameNotification', (data): void =>\n      notifications.receive(data)\n    );\n\n    const keyToActionsMap: {\n        [key: string]: string[];\n      } = {\n        ' ': ['NoOrders'],\n        b: ['FoundCity'],\n        D: ['Disband'],\n        f: ['Fortify', 'BuildFortress'],\n        i: ['BuildIrrigation', 'ClearForest', 'ClearSwamp', 'ClearJungle'],\n        m: ['BuildMine', 'PlantForest'],\n        P: ['Pillage'],\n        r: ['BuildRoad', 'BuildRailroad'],\n        s: ['Sleep'],\n        u: ['Unload'],\n        w: ['Wait'],\n      },\n      directionKeyMap: { [key: string]: NeighbourDirection } = {\n        ArrowUp: 'n',\n        PageUp: 'ne',\n        ArrowRight: 'e',\n        PageDown: 'se',\n        ArrowDown: 's',\n        End: 'sw',\n        ArrowLeft: 'w',\n        Home: 'nw',\n      },\n      directionKeyMapNumpad: { [key: string]: NeighbourDirection } = {\n        8: 'n',\n        9: 'ne',\n        6: 'e',\n        3: 'se',\n        2: 's',\n        1: 'sw',\n        4: 'w',\n        7: 'nw',\n      },\n      directionKeyTypeMap: { [key: string]: { [key: string]: string } } = {\n        [KeyboardEvent.DOM_KEY_LOCATION_STANDARD]: directionKeyMap,\n        [KeyboardEvent.DOM_KEY_LOCATION_NUMPAD]: directionKeyMapNumpad,\n      };\n\n    let lastKey = '';\n\n    document.addEventListener('keydown', (event) => {\n      if (activeUnit) {\n        if (event.key in keyToActionsMap) {\n          const actions = [...keyToActionsMap[event.key]];\n\n          while (actions.length) {\n            const actionName = actions.shift(),\n              [unitAction] = activeUnit.actions.filter(\n                (action): boolean => action._ === actionName\n              );\n\n            if (unitAction) {\n              transport.send('action', {\n                name: 'ActiveUnit',\n                id: activeUnit.id,\n                unitAction: unitAction._,\n                target: unitAction.to.id,\n              });\n\n              event.stopPropagation();\n              event.preventDefault();\n\n              return;\n            }\n          }\n        }\n\n        // if (event.key in directionKeyTypeMap[event.location]) {\n        if (event.key in directionKeyMap) {\n          const [unitAction] =\n            activeUnit.actionsForNeighbours[directionKeyMap[event.key]];\n\n          if (unitAction) {\n            transport.send('action', {\n              name: 'ActiveUnit',\n              id: activeUnit.id,\n              unitAction: unitAction._,\n              target: unitAction.to.id,\n            });\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n          }\n        }\n      }\n\n      if (event.key === 'Escape' && document.activeElement !== null) {\n        (document.activeElement as HTMLElement).blur();\n\n        return;\n      }\n\n      if (\n        event.key === 'Enter' &&\n        data.player.mandatoryActions.some((action) => action._ === 'EndOfTurn')\n      ) {\n        transport.send('action', {\n          name: 'EndTurn',\n        });\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        return;\n      }\n\n      if (event.key === 'Tab') {\n        const topAction = actionArea.querySelector(\n          'div.action:first-child button'\n        ) as HTMLButtonElement | null;\n\n        if (topAction !== null) {\n          topAction.focus();\n\n          event.preventDefault();\n          event.stopPropagation();\n\n          return;\n        }\n      }\n\n      if (event.key === 'c' && activeUnit) {\n        portal.setCenter(activeUnit.tile.x, activeUnit.tile.y);\n\n        portal.render();\n        minimap.update();\n\n        return;\n      }\n\n      if (event.key === 'w' && activeUnit && activeUnits.length > 1) {\n        const units = activeUnits.map((unitAction) => unitAction.value as Unit),\n          current = units.indexOf(activeUnit),\n          unit = units[current === units.length - 1 ? 0 : current + 1];\n\n        setActiveUnit(unit, portal, unitsMap, activeUnitsMap);\n      }\n\n      if (event.key === 't') {\n        unitsMap.setVisible(!unitsMap.isVisible());\n        citiesMap.setVisible(!citiesMap.isVisible());\n        cityNamesMap.setVisible(!cityNamesMap.isVisible());\n\n        portal.render();\n\n        return;\n      }\n\n      if (event.key === 'y') {\n        yieldsMap.setVisible(!yieldsMap.isVisible());\n\n        portal.render();\n\n        return;\n      }\n\n      if (lastKey === '%' && event.key === '^') {\n        transport.send('cheat', { name: 'RevealMap' });\n\n        return;\n      }\n\n      lastKey = event.key;\n    });\n  });\n} catch (e) {\n  console.error(e);\n}\n"],
  "mappings": "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",
  "names": []
}
